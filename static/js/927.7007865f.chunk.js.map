{"version":3,"file":"static/js/927.7007865f.chunk.js","mappings":"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","sources":["firebase.js","game/main.js","game/elements.js","game/controls.js","game/Game.js","game/load.js","utils.js","utils/getBackground.js"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {\n  ref,\n  getDatabase,\n  update as _update,\n  onValue,\n  off,\n  get,\n  child,\n} from 'firebase/database';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\n\ninitializeApp({\n  apiKey: 'AIzaSyBEserPzSUos4MT3XRO8NKAO2oVk1-LS-I',\n  authDomain: 'mortal-wombat-8c76a.firebaseapp.com',\n  projectId: 'mortal-wombat-8c76a',\n  storageBucket: 'mortal-wombat-8c76a.appspot.com',\n  messagingSenderId: '929181149015',\n  appId: '1:929181149015:web:33a7f450bcdbb06ae64012',\n  measurementId: 'G-JL6HCMYYBS',\n});\n\n/*\nData:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/database/mortal-wombat-8c76a-default-rtdb/data\nData Docs: https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=0\nList Docs: https://firebase.google.com/docs/database/web/lists-of-data?hl=en&authuser=0\n\nUsers:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/authentication/users\nUser Docs: https://firebase.google.com/docs/auth/web/manage-users\n*/\n\nconst db = getDatabase();\nconst auth = getAuth();\nconst dbRef = ref(db);\n\nexport const defaultWorldId = 'l31p2np9:dy828s8l3wv';\n\n// {path1: val1, path2: val2}\nexport const update = (updates, onError) => {\n  try {\n    // console.log('updates', updates);\n    return _update(dbRef, updates);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\nif (location.host === 'localhost:3000') {\n  window._update = async (x) => await _update(dbRef, x);\n}\n\nexport const loadData = async (things) =>\n  Object.fromEntries(\n    await Promise.all(\n      things.map(async (t) => [t, (await get(child(dbRef, t))).val()])\n    )\n  );\n\nexport const listen = (pathStr, onChange, onError) => {\n  try {\n    const r = ref(db, pathStr);\n    onValue(r, (snapshot) => onChange(snapshot.val() || {}));\n    return () => off(r);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\n// export const createUser = async (email, pwd) => {\n//   try {\n//     const result = await createUserWithEmailAndPassword(auth, email, pwd);\n//     return result.user;\n//   } catch (e) {\n//     console.error(e);\n//     return e.message;\n//   }\n// };\n\nexport const logIn = (email, pwd) =>\n  signInWithEmailAndPassword(auth, email, pwd);\n\nexport const listenUser = (onChange) => onAuthStateChanged(auth, onChange);\n\nexport const logOut = () => signOut(auth);\n","import {Controls} from './controls';\nimport './game.css';\nimport {load} from './load';\n\nlet game, controls;\n\nconst rootElement = document.querySelector('#root');\n\nconst loop = () => {\n  if (document.hasFocus() && game) {\n    document.body.style.opacity = 1;\n    game.iterate(controls.getPressing());\n  } else {\n    document.body.style.opacity = 0.5;\n  }\n  requestAnimationFrame(loop);\n};\n\nconst init = async () => {\n  game = await load(rootElement);\n  controls = new Controls(\n    {\n      onPress: (id) => {\n        if (id === 'poop') game.makePoop();\n      },\n    },\n    rootElement\n  );\n  loop();\n};\n\ninit();\n","import {getBackground} from '../utils/getBackground';\nimport packageJSON from '../../package.json';\n\nconst scale = 48;\n\nclass Element {\n  constructor() {\n    this.el = document.createElement('div');\n  }\n  destroy() {\n    this.el.remove();\n  }\n}\n\nexport class WorldElement extends Element {\n  constructor(rootElement) {\n    super();\n    rootElement.append(this.el);\n  }\n  update(you) {\n    const cx = innerWidth / 2 - you.x * scale;\n    const cy = innerHeight / 2 - you.y * scale;\n    this.el.style.transform = `translate(${cx}px,${cy}px)`;\n    document.body.style.backgroundPosition = `${cx >> 2}px ${cy >> 2}px`;\n  }\n}\n\nexport class TileElement extends Element {\n  constructor(parentElement, tile) {\n    super();\n    this.el.classList.add('tile');\n    this.updateType(tile.type);\n    this.update(tile);\n    parentElement.append(this.el);\n  }\n  updateType(type) {\n    this.el.style.background = getBackground(type);\n  }\n  update({x, y, dirX = 0, dirY = 0}) {\n    const angle = Math.atan2(dirY, dirX) + Math.PI;\n    const flip = angle >= 0.5 * Math.PI && angle <= 1.5 * Math.PI;\n    this.el.style.transform = `\n    translate(${x * scale}px,${y * scale}px)\n    rotate(${angle}rad)\n    ${flip ? 'scaleY(-1)' : ''}`;\n  }\n}\n\nclass BarElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('bar');\n    this.valueElement = document.createElement('div');\n    this.el.append(this.valueElement);\n    parentElement.append(this.el);\n  }\n  update(value, maxValue, color) {\n    const el = this.valueElement;\n    el.style.background = color;\n    el.style.width = (100 * value) / maxValue + '%';\n    el.innerText = Math.floor(value);\n  }\n}\n\nclass CollectibleCounter extends Element {\n  constructor(parentElement, type) {\n    super();\n    this.el.classList.add('collectibleCounter');\n    this.el.innerHTML = `<span></span> <div style=\"background: ${getBackground(\n      type\n    )}\"></div>`;\n    this.valueEl = this.el.querySelector('span');\n    parentElement.append(this.el);\n  }\n  update(value) {\n    this.valueEl.innerText = value;\n  }\n}\n\nexport class Hud extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('hud');\n\n    this.healthBar = new BarElement(this.el);\n    this.poopBar = new BarElement(this.el);\n    parentElement.append(this.el);\n\n    this.counters = {};\n  }\n  updateCounter(type, value) {\n    if (!this.counters[type.id]) {\n      this.counters[type.id] = new CollectibleCounter(this.el, type);\n    }\n    this.counters[type.id].update(value);\n  }\n}\n\nexport class VersionElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('version');\n    this.el.innerText = 'v' + packageJSON.version;\n    parentElement.append(this.el);\n  }\n}\n\nexport class ControlButton extends Element {\n  constructor(parentElement, id, pressing) {\n    super();\n    this.el.classList.add('control');\n    this.el.setAttribute('id', id);\n    this.el.addEventListener('touchstart', () => (pressing[id] = true));\n    this.el.addEventListener('touchend', () => (pressing[id] = false));\n    parentElement.append(this.el);\n  }\n}\n","import {indexBy} from '../utils';\nimport {ControlButton} from './elements';\n\nconst showControls = false;\n\nconst controls = [\n  {id: 'left', key: 'A', code: 'KeyA'},\n  {id: 'right', key: 'D', code: 'KeyD'},\n  {id: 'up', key: 'W', code: 'KeyW'},\n  {id: 'down', key: 'S', code: 'KeyS'},\n  {id: 'poop', key: 'P', code: 'KeyP'},\n  {id: 'attack', key: 'Space', code: 'Space'},\n  {id: 'reload', key: 'R', code: 'KeyR'},\n];\n\nconst controlIndex = indexBy((c) => c.code, controls);\n\nexport class Controls {\n  constructor({onPress}, rootElement) {\n    this.pressing = {};\n    const keydown = (e) => {\n      if (controlIndex[e.code]) {\n        this.pressing[controlIndex[e.code].id] = e.type === 'keydown';\n      }\n    };\n    window.addEventListener('keydown', keydown);\n    window.addEventListener('keyup', keydown);\n    window.addEventListener('keypress', (e) => {\n      if (controlIndex[e.code]) {\n        onPress(controlIndex[e.code].id);\n      }\n    });\n\n    if (showControls) {\n      for (const {id} of controls) {\n        new ControlButton(rootElement, id, this.pressing);\n      }\n    }\n  }\n  getPressing() {\n    return this.pressing;\n  }\n}\n","import {Hud, TileElement, VersionElement, WorldElement} from './elements';\n\nconst MAX_RENDER_DIST = 32; // don't move things more than this many tiles away\nconst MOVEMENT_THRESHOLD = 0.1; // don't move you or the viewport if you move less than this much of a tile\n\nconst pairs = [\n  [Math.floor, Math.floor],\n  [Math.ceil, Math.floor],\n  [Math.floor, Math.ceil],\n  [Math.ceil, Math.ceil],\n];\n\nconst dirs = [\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n  [0, -1],\n];\n\nexport class Game {\n  constructor(youPos, world, config, typeIndex, rootElement) {\n    this.rootElement = rootElement;\n    this.worldElement = new WorldElement(rootElement);\n    this.hud = new Hud(rootElement);\n    new VersionElement(rootElement);\n\n    this.world = {};\n    for (const key in world) this.addTile(world[key]);\n\n    this.typeIndex = typeIndex;\n    this.you = {\n      x: 0,\n      y: 0,\n      xs: 0,\n      ys: 0,\n      dirX: 1,\n      dirY: 0,\n      ...youPos,\n    };\n    this.you.el = new TileElement(this.worldElement.el, {\n      x: this.you.x,\n      y: this.you.y,\n      type: typeIndex.w,\n    });\n    for (const key of ['x', 'y', 'dirX', 'dirY']) {\n      this.you['p' + key] = this.you[key];\n    }\n    this.collectibles = {};\n    this.frame = 0;\n\n    // these can all be overridden by config\n    this.digSpeed = 0.07;\n    this.eatSpeed = 0.05;\n    this.gravity = 0.005;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.poop = 50;\n    this.maxPoop = 10;\n    this.jumpPower = 0.11;\n    this.moveSpeed = 0.02;\n    this.moveDeceleration = 0.3;\n    this.fallDamageMin = 0.2;\n    this.fallDamageMult = 100;\n    this.swimPower = 0.005;\n    this.waterDrag = 0.1;\n    this.airDrag = 0.001;\n\n    for (const x in config) {\n      if (!isNaN(config[x])) this[x] = Number(config[x]); // because editing them turns them into strings, yayyyy\n    }\n\n    this.setHealth(this.health);\n    this.setPoop(this.poop);\n    this.you.el.update(this.you);\n    this.worldElement.update(this.you);\n  }\n  iterate(pressing) {\n    this.moveWombat(pressing);\n    this.iterateTiles();\n    this.frame++;\n  }\n  addTile(tile) {\n    this.world[`${tile.x}_${tile.y}`] = {\n      ...tile,\n      el: new TileElement(this.worldElement.el, tile),\n    };\n  }\n  deleteTile(tile) {\n    tile.el.destroy();\n    delete this.world[`${tile.x}_${tile.y}`];\n  }\n  changeTileType(tile, type) {\n    tile.type = type;\n    delete tile.hp;\n    tile.el.updateType(type);\n  }\n  moveWombat(pressing) {\n    const {you, world} = this;\n\n    if (this.health <= 0) {\n      if (pressing.reload) location.reload();\n      return;\n    }\n\n    if (pressing.left || pressing.right || pressing.up || pressing.down) {\n      you.dirX = 0;\n      you.dirY = 0;\n    }\n    if (pressing.left) {\n      you.xs -= you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX--;\n    }\n    if (pressing.right) {\n      you.xs += you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX++;\n    }\n    if (pressing.up) {\n      if (you.swimBlock) you.ys -= this.swimPower;\n      else if (!you.jumping && !you.ys) {\n        you.ys -= this.jumpPower;\n        you.jumping = true;\n      }\n      you.dirY--;\n    }\n    if (pressing.down) {\n      if (you.swimBlock) you.ys += this.swimPower;\n      you.dirY++;\n    }\n\n    you.x += you.xs;\n    you.xs *= 1 - (you.swimBlock ? this.waterDrag : this.moveDeceleration);\n\n    you.y += you.ys;\n    you.ys *= 1 - (you.swimBlock ? this.waterDrag : this.airDrag);\n    you.ys += this.gravity * (1 - (you.swimBlock?.type.density || 0));\n\n    const seen = {};\n    for (const [fx, fy] of pairs) {\n      const key = fx(you.x) + '_' + fy(you.y);\n      if (seen[key] || !world[key]) continue;\n      seen[key] = true;\n      this.resolveCollision(world[key]);\n    }\n\n    let damage = 0;\n    delete you.swimBlock;\n    for (const [fx, fy] of pairs) {\n      const block = world[fx(you.x) + '_' + fy(you.y)];\n      if (!block) continue;\n      if (block.type.collectible) {\n        this.collect(block.type);\n        return this.deleteTile(block);\n      }\n      if (block.type.healing < 0) {\n        damage = Math.max(damage, -block.type.healing);\n      }\n      if (block.type.moveStyle === 'liquid') you.swimBlock = block;\n    }\n    if (damage) this.setHealth(this.health - damage);\n\n    if (\n      Math.abs(you.x - you.px) > MOVEMENT_THRESHOLD ||\n      Math.abs(you.y - you.py) > MOVEMENT_THRESHOLD ||\n      you.dirX !== you.pdirX ||\n      you.dirY !== you.pdirY\n    ) {\n      you.el.update(you);\n      this.worldElement.update(you);\n\n      you.px = you.x;\n      you.py = you.y;\n      you.pdirX = you.dirX;\n      you.pdirY = you.dirY;\n    }\n\n    if (pressing.attack) {\n      const angle = Math.atan2(you.dirY, you.dirX);\n      const x = Math.round(you.x + Math.cos(angle));\n      const y = Math.round(you.y + Math.sin(angle));\n      const b = this.getTile(x, y);\n      if (b?.type.edible) {\n        if (b.hp === undefined) b.hp = b.type.hp;\n        b.hp -= this.eatSpeed;\n        this.setHealth(this.health + b.type.healing * this.eatSpeed);\n        this.setPoop(this.poop + b.type.makePoop * this.eatSpeed);\n        if (b.hp <= 0) return this.deleteTile(b);\n      }\n      if (b?.type.diggable) {\n        if (b.hp === undefined) b.hp = b.type.hp;\n        b.hp -= this.digSpeed;\n        if (b.hp <= 0) {\n          if (b.type.dropsLoot) {\n            this.changeTileType(b, this.typeIndex[b.type.dropsLoot]);\n          } else this.deleteTile(b);\n        }\n      }\n    }\n  }\n  resolveCollision(block) {\n    const {you} = this;\n    if (block.type.collectible || block.type.moveStyle === 'liquid') return;\n\n    if (block.type.healing < 0) {\n      this.setHealth(this.health + Number(block.type.healing));\n      you.y -= 0.1;\n    }\n\n    if (Math.abs(you.x - block.x) > Math.abs(you.y - block.y)) {\n      const dx = block.x < you.x ? -1 : 1;\n      if (\n        !you.jumping &&\n        you.ys === this.gravity &&\n        block.type.movable &&\n        this.isEmpty(block.x + dx, block.y)\n      ) {\n        this.moveTile(block.x, block.y, dx, 0);\n      } else {\n        you.x = block.x + (you.x < block.x ? -1 : 1);\n      }\n      you.xs = 0;\n    } else {\n      if (you.y < block.y) you.jumping = false;\n      you.y = block.y + (you.y < block.y ? -1 : 1);\n\n      // fall damage\n      if (you.ys > this.fallDamageMin) {\n        this.setHealth(\n          this.health - (you.ys - this.fallDamageMin) * this.fallDamageMult\n        );\n      }\n      you.ys = 0;\n    }\n  }\n  getTile(x, y) {\n    return this.world[`${x}_${y}`];\n  }\n  isEmpty(x, y) {\n    return !this.getTile(x, y);\n  }\n  badGuyCanWalkOn(x, y) {\n    const t = this.getTile(x, y);\n    return t && t.type.moveStyle !== 'liquid';\n  }\n  moveTile(x, y, dx, dy) {\n    const key = `${x}_${y}`;\n    const b = this.world[key];\n    delete this.world[key];\n    b.x += dx;\n    b.y += dy;\n    this.world[`${b.x}_${b.y}`] = b;\n    b.el.update(b);\n  }\n  iterateTiles() {\n    for (const key in this.world) {\n      const b = this.world[key];\n      if (\n        !b.type.moveDelay ||\n        this.frame % b.type.moveDelay > 0 ||\n        Math.abs(this.you.x - b.x) > MAX_RENDER_DIST ||\n        Math.abs(this.you.y - b.y) > MAX_RENDER_DIST\n      )\n        continue;\n\n      if (this.isEmpty(b.x, b.y + 1)) {\n        this.moveTile(b.x, b.y, 0, 1);\n      } else if (b.type.moveStyle === 'liquid') {\n        const left = this.isEmpty(b.x - 1, b.y);\n        const right = this.isEmpty(b.x + 1, b.y);\n        if (left && right) {\n          this.moveTile(b.x, b.y, Math.random() < 0.5 ? 1 : -1, 0);\n        } else if (left) {\n          this.moveTile(b.x, b.y, -1, 0);\n        } else if (right) {\n          this.moveTile(b.x, b.y, 1, 0);\n        }\n      } else if (b.type.moveStyle === 'patrol') {\n        if (!b.dirX) b.dirX = 1;\n        if (\n          this.isEmpty(b.x + b.dirX, b.y) &&\n          this.badGuyCanWalkOn(b.x + b.dirX, b.y + 1)\n        ) {\n          this.moveTile(b.x, b.y, b.dirX, 0);\n        } else {\n          b.dirX *= -1;\n        }\n      }\n\n      // special rules for magma\n      if (b.type.id === 'm') {\n        let touchingWater = false;\n        for (const [dx, dy] of dirs) {\n          const block = this.getTile(b.x + dx, b.y + dy);\n          if (block && (block.type.hp || block.type.id === 'a')) {\n            if (block.type.id === 'a') touchingWater = true;\n            this.deleteTile(block);\n          }\n        }\n        if (touchingWater) {\n          // if lava touches water, it turns to stone\n          this.changeTileType(b, this.typeIndex.s);\n        }\n      }\n    }\n  }\n  setHealth(health) {\n    this.health = Math.max(0, Math.min(this.maxHealth, health));\n    this.hud.healthBar.update(\n      this.health,\n      this.maxHealth,\n      this.health > 30 ? 'green' : 'red'\n    );\n    if (health <= 0) {\n      this.rootElement.innerHTML +=\n        '<div class=\"youDead\"><h1>you dead</h1><h2>press R to try again</h2></div>';\n    }\n  }\n  setPoop(poop) {\n    this.poop = Math.max(0, Math.min(this.maxPoop, poop));\n    this.hud.poopBar.update(this.poop, this.maxPoop, 'saddleBrown');\n  }\n  collect(type) {\n    this.collectibles[type.id] = (this.collectibles[type.id] || 0) + 1;\n    this.hud.updateCounter(type, this.collectibles[type.id]);\n  }\n  makePoop() {\n    if (this.poop < 1) return;\n    const {you, world, typeIndex} = this;\n    const angle = Math.atan2(you.dirY, you.dirX) + Math.PI;\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    if ((x !== you.x || y !== you.y) && !world[`${x}_${y}`]) {\n      this.addTile({x, y, type: typeIndex.p});\n      this.setPoop(this.poop - 1);\n    }\n  }\n}\n","import {defaultWorldId, loadData} from '../firebase';\nimport {isGuid} from '../utils';\nimport {Game} from './Game';\n\nexport const load = async (rootElement) => {\n  let hashConfig;\n  if (location.hash.length > 1) {\n    try {\n      hashConfig = JSON.parse(atob(location.hash.slice(1)));\n    } catch (e) {\n      console.log('bad hash', e);\n    }\n  }\n\n  const worldKey = `worlds/${\n    isGuid(hashConfig?.worldId) ? hashConfig.worldId : defaultWorldId\n  }/world`;\n\n  const data = await loadData(['tileTypes', worldKey, 'gameConfig']);\n\n  const {tileTypes, gameConfig} = data;\n  const world = data[worldKey];\n\n  const typeIndex = {};\n  let you;\n  for (const type of Object.values(tileTypes)) {\n    typeIndex[type.id] = type;\n  }\n  for (const key in world) {\n    const {x, y, tileType} = world[key];\n    if (tileType === 'w') {\n      you = {x, y};\n      delete world[key];\n    } else if (typeIndex[tileType]) {\n      world[key] = {x, y, type: typeIndex[tileType]};\n    } else {\n      delete world[key];\n    }\n  }\n\n  if (hashConfig?.x !== undefined && hashConfig?.y !== undefined) {\n    you.x = hashConfig.x;\n    you.y = hashConfig.y;\n  }\n\n  return new Game(you, world, gameConfig, typeIndex, rootElement);\n};\n","// export const assocPath = ([first, ...rest], val, obj) => {\n//   const copy = Array.isArray(obj) ? [...obj] : {...obj};\n//   copy[first] = rest.length ? assocPath(rest, val, copy[first]) : val;\n//   return copy;\n// };\n\nexport const dissoc = (key, obj) => {\n  const copy = {...obj};\n  delete copy[key];\n  return copy;\n};\n\nexport const guid = () =>\n  Date.now().toString(36) + ':' + Math.random().toString(36).slice(2);\n\nexport const isGuid = (str) => /^[0-9a-z]{8,}:[0-9a-z]+$/.test(str);\n\nexport const groupBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) {\n    const key = func(el);\n    (res[key] = res[key] || []).push(el);\n  }\n  return res;\n};\n\nexport const indexBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) res[func(el)] = el;\n  return res;\n};\n\nexport const objToArr = (obj = {}) =>\n  Object.entries(obj).map(([key, el]) => ({key, ...el}));\n\nexport const debounce = (func, delay) => {\n  let timeout;\n  const f = (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\nexport const throttle = (func, delay) => {\n  let timeout;\n  let running = false;\n  let runAgainArgs;\n  const f = (...args) => {\n    if (running) {\n      runAgainArgs = args;\n      return;\n    }\n    running = true;\n    timeout = setTimeout(() => {\n      func(...args);\n      running = false;\n      if (runAgainArgs) {\n        f(...runAgainArgs);\n      }\n      runAgainArgs = undefined;\n    }, delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\n// const memoize = (func) => {\n//   const cache = {};\n//   return (...args) => {\n//     const key = JSON.stringify(args);\n//     if (cache[key] === undefined) cache[key] = func(...args);\n//     return cache[key];\n//   };\n// };\n","export const getBackground = (type) =>\n  type?.image ? `no-repeat center/contain url(${type.image})` : type?.color;\n"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","auth","getAuth","dbRef","ref","defaultWorldId","update","updates","onError","_update","e","console","error","message","location","host","window","x","loadData","things","Object","Promise","all","map","t","get","child","val","fromEntries","listen","pathStr","onChange","r","onValue","snapshot","off","logIn","email","pwd","signInWithEmailAndPassword","listenUser","onAuthStateChanged","logOut","signOut","game","controls","Element","this","el","document","createElement","remove","WorldElement","rootElement","append","you","cx","innerWidth","cy","innerHeight","y","style","transform","body","backgroundPosition","TileElement","parentElement","tile","classList","add","updateType","type","background","getBackground","dirX","dirY","angle","Math","atan2","PI","flip","BarElement","valueElement","value","maxValue","color","width","innerText","floor","CollectibleCounter","innerHTML","valueEl","querySelector","Hud","healthBar","poopBar","counters","id","VersionElement","packageJSON","key","code","controlIndex","indexBy","c","Controls","onPress","pressing","keydown","addEventListener","pairs","ceil","dirs","Game","youPos","world","config","typeIndex","worldElement","hud","addTile","xs","ys","w","collectibles","frame","digSpeed","eatSpeed","gravity","health","maxHealth","poop","maxPoop","jumpPower","moveSpeed","moveDeceleration","fallDamageMin","fallDamageMult","swimPower","waterDrag","airDrag","isNaN","Number","setHealth","setPoop","moveWombat","iterateTiles","destroy","hp","reload","left","right","up","down","swimBlock","jumping","density","seen","fx","fy","resolveCollision","damage","block","collectible","collect","deleteTile","healing","max","moveStyle","abs","px","py","pdirX","pdirY","attack","round","cos","sin","b","getTile","edible","undefined","makePoop","diggable","dropsLoot","changeTileType","dx","movable","isEmpty","moveTile","dy","moveDelay","random","badGuyCanWalkOn","touchingWater","s","min","updateCounter","p","load","hash","length","hashConfig","JSON","parse","atob","slice","log","worldKey","isGuid","worldId","data","tileTypes","gameConfig","values","tileType","loop","hasFocus","opacity","iterate","getPressing","requestAnimationFrame","init","dissoc","obj","copy","guid","Date","now","toString","str","test","func","arr","res","objToArr","entries","debounce","delay","timeout","f","args","clearTimeout","setTimeout","cancel","throttle","runAgainArgs","running","image"],"sourceRoot":""}