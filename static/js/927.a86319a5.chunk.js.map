{"version":3,"file":"static/js/927.a86319a5.chunk.js","mappings":"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","sources":["firebase.js","game/main.js","game/elements.js","game/controls.js","game/Game.js","game/load.js","utils.js","utils/getBackground.js"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {\n  ref,\n  getDatabase,\n  update as _update,\n  onValue,\n  off,\n  get,\n  child,\n} from 'firebase/database';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\n\ninitializeApp({\n  apiKey: 'AIzaSyBEserPzSUos4MT3XRO8NKAO2oVk1-LS-I',\n  authDomain: 'mortal-wombat-8c76a.firebaseapp.com',\n  projectId: 'mortal-wombat-8c76a',\n  storageBucket: 'mortal-wombat-8c76a.appspot.com',\n  messagingSenderId: '929181149015',\n  appId: '1:929181149015:web:33a7f450bcdbb06ae64012',\n  measurementId: 'G-JL6HCMYYBS',\n});\n\n/*\nData:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/database/mortal-wombat-8c76a-default-rtdb/data\nData Docs: https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=0\nList Docs: https://firebase.google.com/docs/database/web/lists-of-data?hl=en&authuser=0\n\nUsers:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/authentication/users\nUser Docs: https://firebase.google.com/docs/auth/web/manage-users\n*/\n\nconst db = getDatabase();\nconst auth = getAuth();\nconst dbRef = ref(db);\n\nexport const defaultWorldId = 'l31p2np9:dy828s8l3wv';\n\n// {path1: val1, path2: val2}\nexport const update = (updates, onError) => {\n  try {\n    // console.log('updates', updates);\n    return _update(dbRef, updates);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\nif (location.host === 'localhost:3000') {\n  window._update = async (x) => await _update(dbRef, x);\n}\n\nexport const loadData = async (things) =>\n  Object.fromEntries(\n    await Promise.all(\n      things.map(async (t) => [t, (await get(child(dbRef, t))).val()])\n    )\n  );\n\nexport const listen = (pathStr, onChange, onError) => {\n  try {\n    const r = ref(db, pathStr);\n    onValue(r, (snapshot) => onChange(snapshot.val() || {}));\n    return () => off(r);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\n// export const createUser = async (email, pwd) => {\n//   try {\n//     const result = await createUserWithEmailAndPassword(auth, email, pwd);\n//     return result.user;\n//   } catch (e) {\n//     console.error(e);\n//     return e.message;\n//   }\n// };\n\nexport const logIn = (email, pwd) =>\n  signInWithEmailAndPassword(auth, email, pwd);\n\nexport const listenUser = (onChange) => onAuthStateChanged(auth, onChange);\n\nexport const logOut = () => signOut(auth);\n","import {Controls} from './controls';\nimport './game.css';\nimport {load} from './load';\n\nlet game, controls;\n\nconst rootElement = document.querySelector('#root');\n\nconst loop = () => {\n  if (document.hasFocus() && game) {\n    document.body.style.opacity = 1;\n    game.iterate(controls.getPressing());\n  } else {\n    document.body.style.opacity = 0.5;\n  }\n  requestAnimationFrame(loop);\n};\n\nconst init = async () => {\n  game = await load(rootElement);\n  controls = new Controls(\n    {\n      onPress: (id) => {\n        if (id === 'poop') game.makePoop();\n      },\n    },\n    rootElement\n  );\n  loop();\n};\n\ninit();\n","import {getBackground} from '../utils/getBackground';\nimport packageJSON from '../../package.json';\n\nconst scale = 48;\n\nclass Element {\n  constructor() {\n    this.el = document.createElement('div');\n  }\n  destroy() {\n    this.el.remove();\n  }\n}\n\nexport class WorldElement extends Element {\n  constructor(rootElement) {\n    super();\n    rootElement.append(this.el);\n  }\n  update(you) {\n    const cx = innerWidth / 2 - you.x * scale;\n    const cy = innerHeight / 2 - you.y * scale;\n    this.el.style.transform = `translate(${cx}px,${cy}px)`;\n  }\n}\n\nexport class TileElement extends Element {\n  constructor(parentElement, tile) {\n    super();\n    this.el.classList.add('tile');\n    this.el.style.background = getBackground(tile.type);\n    this.update(tile);\n    parentElement.append(this.el);\n  }\n  update({x, y, dirX = 0, dirY = 0}) {\n    const angle = Math.atan2(dirY, dirX) + Math.PI;\n    const flip = angle >= 0.5 * Math.PI && angle <= 1.5 * Math.PI;\n    this.el.style.transform = `\n    translate(${x * scale}px,${y * scale}px)\n    rotate(${angle}rad)\n    ${flip ? 'scaleY(-1)' : ''}`;\n  }\n}\n\nexport class BarElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('bar');\n    this.valueElement = document.createElement('div');\n    this.el.append(this.valueElement);\n    parentElement.append(this.el);\n  }\n  update(value, maxValue, color) {\n    const el = this.valueElement;\n    el.style.background = color;\n    el.style.width = (100 * value) / maxValue + '%';\n    el.innerText = Math.floor(value);\n  }\n}\n\nexport class JewelCounter extends Element {\n  constructor(parentElement, typeIndex) {\n    super();\n    this.typeIndex = typeIndex;\n    this.el.classList.add('jewelCounter');\n    parentElement.append(this.el);\n  }\n  update(jewels) {\n    this.el.innerHTML = `${jewels} <img src=\"${this.typeIndex.j.image}\" />`;\n  }\n}\n\nexport class Hud extends Element {\n  constructor(parentElement, typeIndex) {\n    super();\n    this.el.classList.add('hud');\n\n    this.healthBar = new BarElement(this.el);\n    this.poopBar = new BarElement(this.el);\n    this.jewelCounter = new JewelCounter(this.el, typeIndex);\n    parentElement.append(this.el);\n  }\n}\n\nexport class VersionElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('version');\n    this.el.innerText = 'v' + packageJSON.version;\n    parentElement.append(this.el);\n  }\n}\n\nexport class ControlButton extends Element {\n  constructor(parentElement, id, pressing) {\n    super();\n    this.el.classList.add('control');\n    this.el.setAttribute('id', id);\n    this.el.addEventListener('touchstart', () => (pressing[id] = true));\n    this.el.addEventListener('touchend', () => (pressing[id] = false));\n    parentElement.append(this.el);\n  }\n}\n","import {indexBy} from '../utils';\nimport {ControlButton} from './elements';\n\nconst showControls = false;\n\nconst controls = [\n  {id: 'left', key: 'A', code: 'KeyA'},\n  {id: 'right', key: 'D', code: 'KeyD'},\n  {id: 'up', key: 'W', code: 'KeyW'},\n  {id: 'down', key: 'S', code: 'KeyS'},\n  {id: 'poop', key: 'P', code: 'KeyP'},\n  {id: 'attack', key: 'Space', code: 'Space'},\n  {id: 'reload', key: 'R', code: 'KeyR'},\n];\n\nconst controlIndex = indexBy((c) => c.code, controls);\n\nexport class Controls {\n  constructor({onPress}, rootElement) {\n    this.pressing = {};\n    const keydown = (e) => {\n      if (controlIndex[e.code]) {\n        this.pressing[controlIndex[e.code].id] = e.type === 'keydown';\n      }\n    };\n    window.addEventListener('keydown', keydown);\n    window.addEventListener('keyup', keydown);\n    window.addEventListener('keypress', (e) => {\n      if (controlIndex[e.code]) {\n        onPress(controlIndex[e.code].id);\n      }\n    });\n\n    if (showControls) {\n      for (const {id} of controls) {\n        new ControlButton(rootElement, id, this.pressing);\n      }\n    }\n  }\n  getPressing() {\n    return this.pressing;\n  }\n}\n","import {Hud, TileElement, VersionElement, WorldElement} from './elements';\n\nconst MAX_RENDER_DIST = 32; // don't move things more than this many tiles away\nconst MOVEMENT_THRESHOLD = 0.1; // don't move you or the viewport if you move less than this much of a tile\n\nconst dirs = [\n  [Math.floor, Math.floor],\n  [Math.ceil, Math.floor],\n  [Math.floor, Math.ceil],\n  [Math.ceil, Math.ceil],\n];\n\nexport class Game {\n  constructor(youPos, world, config, typeIndex, rootElement) {\n    this.rootElement = rootElement;\n    this.worldElement = new WorldElement(rootElement);\n    this.hud = new Hud(rootElement, typeIndex);\n    new VersionElement(rootElement);\n\n    this.world = {};\n    for (const key in world) this.addTile(world[key]);\n\n    this.typeIndex = typeIndex;\n    this.you = {\n      x: 0,\n      y: 0,\n      xs: 0,\n      ys: 0,\n      dirX: 1,\n      dirY: 0,\n      ...youPos,\n    };\n    this.you.el = new TileElement(this.worldElement.el, {\n      x: this.you.x,\n      y: this.you.y,\n      type: typeIndex.w,\n    });\n    for (const key of ['x', 'y', 'dirX', 'dirY']) {\n      this.you['p' + key] = this.you[key];\n    }\n    this.jewels = 0;\n    this.frame = 0;\n\n    // these can all be overridden by config\n    this.digSpeed = 0.07;\n    this.eatSpeed = 0.05;\n    this.gravity = 0.005;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.poop = 50;\n    this.maxPoop = 10;\n    this.jumpPower = 0.11;\n    this.moveSpeed = 0.02;\n    this.moveDeceleration = 0.3;\n    this.fallDamageMin = 0.2;\n    this.fallDamageMult = 100;\n    this.swimPower = 0.005;\n    this.waterDrag = 0.1;\n\n    for (const x in config) {\n      if (!isNaN(config[x])) this[x] = Number(config[x]); // because editing them turns them into strings, yayyyy\n    }\n\n    this.setHealth(this.health);\n    this.setPoop(this.poop);\n    this.you.el.update(this.you);\n    this.worldElement.update(this.you);\n  }\n  iterate(pressing) {\n    this.iterateYou(pressing);\n    this.iterateTiles();\n    this.frame++;\n  }\n  addTile(tile) {\n    this.world[`${tile.x}_${tile.y}`] = {\n      ...tile,\n      el: new TileElement(this.worldElement.el, tile),\n    };\n  }\n  deleteTile(tile) {\n    tile.el.destroy();\n    delete this.world[`${tile.x}_${tile.y}`];\n  }\n  iterateYou(pressing) {\n    const {you, world, gravity} = this;\n\n    if (this.health <= 0) {\n      if (pressing.reload) location.reload();\n      return;\n    }\n\n    if (pressing.left || pressing.right || pressing.up || pressing.down) {\n      you.dirX = 0;\n      you.dirY = 0;\n    }\n    if (pressing.left) {\n      you.xs -= you.swimming ? this.swimPower : this.moveSpeed;\n      you.dirX--;\n    }\n    if (pressing.right) {\n      you.xs += you.swimming ? this.swimPower : this.moveSpeed;\n      you.dirX++;\n    }\n    if (pressing.up) {\n      if (you.swimming) you.ys -= this.swimPower;\n      else if (!you.jumping && !you.ys) {\n        you.ys -= this.jumpPower;\n        you.jumping = true;\n      }\n      you.dirY--;\n    }\n    if (pressing.down) {\n      if (you.swimming) you.ys += this.swimPower;\n      you.dirY++;\n    }\n\n    you.x += you.xs;\n    you.xs *= 1 - (you.swimming ? this.waterDrag : this.moveDeceleration);\n\n    if (you.swimming) you.ys *= 1 - this.waterDrag;\n    else you.ys += gravity;\n\n    you.y += you.ys;\n\n    const seen = {};\n    for (const [fx, fy] of dirs) {\n      const key = fx(you.x) + '_' + fy(you.y);\n      if (seen[key] || !world[key]) continue;\n      seen[key] = true;\n      this.resolveCollision(world[key]);\n    }\n\n    let damage = 0;\n    you.swimming = false;\n    for (const [fx, fy] of dirs) {\n      const block = world[fx(you.x) + '_' + fy(you.y)];\n      if (!block) continue;\n      if (block.type.collectible) {\n        this.incJewels();\n        return this.deleteTile(block);\n      }\n      if (Number(block.type.healing) < 0) {\n        damage = Math.max(damage, -block.type.healing);\n      }\n      if (block.type.moveStyle === 'liquid') you.swimming = true;\n    }\n    if (damage) this.setHealth(this.health - damage);\n\n    if (\n      Math.abs(you.x - you.px) > MOVEMENT_THRESHOLD ||\n      Math.abs(you.y - you.py) > MOVEMENT_THRESHOLD ||\n      you.dirX !== you.pdirX ||\n      you.dirY !== you.pdirY\n    ) {\n      you.el.update(you);\n      this.worldElement.update(you);\n\n      you.px = you.x;\n      you.py = you.y;\n      you.pdirX = you.dirX;\n      you.pdirY = you.dirY;\n    }\n\n    if (pressing.attack) {\n      const angle = Math.atan2(you.dirY, you.dirX);\n      const x = Math.round(you.x + Math.cos(angle));\n      const y = Math.round(you.y + Math.sin(angle));\n      const b = this.getTile(x, y);\n      if (b?.type.edible) {\n        if (b.hp === undefined) b.hp = b.type.hp;\n        b.hp -= this.eatSpeed;\n        this.setHealth(this.health + b.type.healing * this.eatSpeed);\n        this.setPoop(this.poop + b.type.makePoop * this.eatSpeed);\n        if (b.hp <= 0) return this.deleteTile(b);\n      }\n      if (b?.type.diggable) {\n        if (b.hp === undefined) b.hp = b.type.hp;\n        b.hp -= this.digSpeed;\n        if (b.hp <= 0) return this.deleteTile(b);\n      }\n    }\n  }\n  resolveCollision(block) {\n    if (block.type.collectible || block.type.moveStyle === 'liquid') return;\n\n    const {you} = this;\n    if (Math.abs(you.x - block.x) > Math.abs(you.y - block.y)) {\n      const dx = block.x < you.x ? -1 : 1;\n      if (\n        !you.jumping &&\n        Math.abs(you.ys) < 0.1 && // TODO can this be better?\n        block.type.movable &&\n        this.isEmpty(block.x + dx, block.y)\n      ) {\n        this.moveTile(block.x, block.y, dx, 0);\n      } else {\n        you.x = block.x + (you.x < block.x ? -1 : 1);\n      }\n      you.xs = 0;\n    } else {\n      if (you.y < block.y) you.jumping = false;\n      you.y = block.y + (you.y < block.y ? -1 : 1);\n\n      // fall damage\n      if (you.ys > this.fallDamageMin) {\n        this.setHealth(\n          this.health - (you.ys - this.fallDamageMin) * this.fallDamageMult\n        );\n      }\n      you.ys = 0;\n    }\n  }\n  getTile(x, y) {\n    return this.world[`${x}_${y}`];\n  }\n  isEmpty(x, y) {\n    return !this.getTile(x, y);\n  }\n  badGuyCanWalkOn(x, y) {\n    const t = this.getTile(x, y);\n    return t && !t.type.moveDelay;\n  }\n  moveTile(x, y, dx, dy) {\n    const key = `${x}_${y}`;\n    const b = this.world[key];\n    delete this.world[key];\n    b.x += dx;\n    b.y += dy;\n    this.world[`${b.x}_${b.y}`] = b;\n    b.el.update(b);\n  }\n  iterateTiles() {\n    for (const key in this.world) {\n      const b = this.world[key];\n      if (\n        !b.type.moveDelay ||\n        this.frame % b.type.moveDelay > 0 ||\n        (this.you.x - b.x) ** 2 + (this.you.y - b.y) ** 2 > MAX_RENDER_DIST ** 2\n      )\n        continue;\n\n      if (this.isEmpty(b.x, b.y + 1)) {\n        this.moveTile(b.x, b.y, 0, 1);\n      } else if (b.type.moveStyle === 'liquid') {\n        const left = this.isEmpty(b.x - 1, b.y);\n        const right = this.isEmpty(b.x + 1, b.y);\n        if (left && right) {\n          this.moveTile(b.x, b.y, Math.random() < 0.5 ? 1 : -1, 0);\n        } else if (left) {\n          this.moveTile(b.x, b.y, -1, 0);\n        } else if (right) {\n          this.moveTile(b.x, b.y, 1, 0);\n        }\n      } else if (b.type.moveStyle === 'patrol') {\n        if (!b.dirX) b.dirX = 1;\n        if (\n          this.isEmpty(b.x + b.dirX, b.y) &&\n          this.badGuyCanWalkOn(b.x + b.dirX, b.y + 1)\n        ) {\n          this.moveTile(b.x, b.y, b.dirX, 0);\n        } else {\n          b.dirX *= -1;\n        }\n      }\n    }\n  }\n  setHealth(health) {\n    this.health = Math.max(0, Math.min(this.maxHealth, health));\n    this.hud.healthBar.update(\n      this.health,\n      this.maxHealth,\n      this.health > 30 ? 'green' : 'red'\n    );\n    if (health <= 0) {\n      this.rootElement.innerHTML +=\n        '<div class=\"youDead\"><h1>you dead</h1><h2>press R to try again</h2></div>';\n    }\n  }\n  setPoop(poop) {\n    this.poop = Math.max(0, Math.min(this.maxPoop, poop));\n    this.hud.poopBar.update(this.poop, this.maxPoop, 'saddleBrown');\n  }\n  incJewels() {\n    this.jewels++;\n    this.hud.jewelCounter.update(this.jewels);\n  }\n  makePoop() {\n    if (this.poop < 1) return;\n    const {you, world, typeIndex} = this;\n    const angle = Math.atan2(you.dirY, you.dirX) + Math.PI;\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    if ((x !== you.x || y !== you.y) && !world[`${x}_${y}`]) {\n      this.addTile({x, y, type: typeIndex.p});\n      this.setPoop(this.poop - 1);\n    }\n  }\n}\n","import {defaultWorldId, loadData} from '../firebase';\nimport {isGuid} from '../utils';\nimport {Game} from './Game';\n\nexport const load = async (rootElement) => {\n  let hashConfig;\n  if (location.hash.length > 1) {\n    try {\n      hashConfig = JSON.parse(atob(location.hash.slice(1)));\n    } catch (e) {\n      console.log('bad hash', e);\n    }\n  }\n\n  const worldKey = `worlds/${\n    isGuid(hashConfig?.worldId) ? hashConfig.worldId : defaultWorldId\n  }/world`;\n\n  const data = await loadData(['tileTypes', worldKey, 'gameConfig']);\n\n  const {tileTypes, gameConfig} = data;\n  const world = data[worldKey];\n\n  const typeIndex = {};\n  let you;\n  for (const type of Object.values(tileTypes)) {\n    typeIndex[type.id] = type;\n  }\n  for (const key in world) {\n    const {x, y, tileType} = world[key];\n    if (tileType === 'w') {\n      you = {x, y};\n      delete world[key];\n    } else if (typeIndex[tileType]) {\n      world[key] = {x, y, type: typeIndex[tileType]};\n    } else {\n      delete world[key];\n    }\n  }\n\n  if (hashConfig?.x && hashConfig?.y) {\n    you.x = hashConfig.x;\n    you.y = hashConfig.y;\n  }\n\n  return new Game(you, world, gameConfig, typeIndex, rootElement);\n};\n","// export const assocPath = ([first, ...rest], val, obj) => {\n//   const copy = Array.isArray(obj) ? [...obj] : {...obj};\n//   copy[first] = rest.length ? assocPath(rest, val, copy[first]) : val;\n//   return copy;\n// };\n\nexport const dissoc = (key, obj) => {\n  const copy = {...obj};\n  delete copy[key];\n  return copy;\n};\n\nexport const guid = () =>\n  Date.now().toString(36) + ':' + Math.random().toString(36).slice(2);\n\nexport const isGuid = (str) => /^[0-9a-z]{8,}:[0-9a-z]+$/.test(str);\n\nexport const groupBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) {\n    const key = func(el);\n    (res[key] = res[key] || []).push(el);\n  }\n  return res;\n};\n\nexport const indexBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) res[func(el)] = el;\n  return res;\n};\n\nexport const objToArr = (obj = {}) =>\n  Object.entries(obj).map(([key, el]) => ({key, ...el}));\n\nexport const debounce = (func, delay) => {\n  let timeout;\n  const f = (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\nexport const throttle = (func, delay) => {\n  let timeout;\n  let running = false;\n  let runAgainArgs;\n  const f = (...args) => {\n    if (running) {\n      runAgainArgs = args;\n      return;\n    }\n    running = true;\n    timeout = setTimeout(() => {\n      func(...args);\n      running = false;\n      if (runAgainArgs) {\n        f(...runAgainArgs);\n      }\n      runAgainArgs = undefined;\n    }, delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\n// const memoize = (func) => {\n//   const cache = {};\n//   return (...args) => {\n//     const key = JSON.stringify(args);\n//     if (cache[key] === undefined) cache[key] = func(...args);\n//     return cache[key];\n//   };\n// };\n","export const getBackground = (type) =>\n  type?.image ? `no-repeat center/contain url(${type.image})` : type?.color;\n"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","auth","getAuth","dbRef","ref","defaultWorldId","update","updates","onError","_update","e","console","error","message","location","host","window","x","loadData","things","Object","Promise","all","map","t","get","child","val","fromEntries","listen","pathStr","onChange","r","onValue","snapshot","off","logIn","email","pwd","signInWithEmailAndPassword","listenUser","onAuthStateChanged","logOut","signOut","game","controls","Element","this","el","document","createElement","remove","WorldElement","rootElement","append","you","cx","innerWidth","cy","innerHeight","y","style","transform","TileElement","parentElement","tile","classList","add","background","getBackground","type","dirX","dirY","angle","Math","atan2","PI","flip","BarElement","valueElement","value","maxValue","color","width","innerText","floor","JewelCounter","typeIndex","jewels","innerHTML","j","image","Hud","healthBar","poopBar","jewelCounter","VersionElement","packageJSON","id","key","code","controlIndex","indexBy","c","Controls","onPress","pressing","keydown","addEventListener","dirs","ceil","Game","youPos","world","config","worldElement","hud","addTile","xs","ys","w","frame","digSpeed","eatSpeed","gravity","health","maxHealth","poop","maxPoop","jumpPower","moveSpeed","moveDeceleration","fallDamageMin","fallDamageMult","swimPower","waterDrag","isNaN","Number","setHealth","setPoop","iterateYou","iterateTiles","destroy","reload","left","right","up","down","swimming","jumping","seen","fx","fy","resolveCollision","damage","block","collectible","incJewels","deleteTile","healing","max","moveStyle","abs","px","py","pdirX","pdirY","attack","round","cos","sin","b","getTile","edible","undefined","hp","makePoop","diggable","dx","movable","isEmpty","moveTile","moveDelay","dy","random","badGuyCanWalkOn","min","p","load","hash","length","hashConfig","JSON","parse","atob","slice","log","worldKey","isGuid","worldId","data","tileTypes","gameConfig","values","tileType","querySelector","loop","hasFocus","body","opacity","iterate","getPressing","requestAnimationFrame","init","dissoc","obj","copy","guid","Date","now","toString","str","test","func","arr","res","objToArr","entries","debounce","delay","timeout","f","args","clearTimeout","setTimeout","cancel","throttle","runAgainArgs","running"],"sourceRoot":""}