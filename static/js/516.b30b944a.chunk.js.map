{"version":3,"file":"static/js/516.b30b944a.chunk.js","mappings":"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","sources":["firebase.js","game/main.js","game/elements.js","game/controls.js","game/gamepadControls.js","game/compile.js","game/Game.js","utils/isValidUrl.js","game/load.js","utils.js","utils/getBackground.js"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {\n  ref,\n  getDatabase,\n  update as _update,\n  onValue,\n  off,\n  get,\n  child,\n} from 'firebase/database';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\n\ninitializeApp({\n  apiKey: 'AIzaSyBEserPzSUos4MT3XRO8NKAO2oVk1-LS-I',\n  authDomain: 'mortal-wombat-8c76a.firebaseapp.com',\n  projectId: 'mortal-wombat-8c76a',\n  storageBucket: 'mortal-wombat-8c76a.appspot.com',\n  messagingSenderId: '929181149015',\n  appId: '1:929181149015:web:33a7f450bcdbb06ae64012',\n  measurementId: 'G-JL6HCMYYBS',\n});\n\n/*\nData:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/database/mortal-wombat-8c76a-default-rtdb/data\nData Docs: https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=0\nList Docs: https://firebase.google.com/docs/database/web/lists-of-data?hl=en&authuser=0\n\nUsers:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/authentication/users\nUser Docs: https://firebase.google.com/docs/auth/web/manage-users\n*/\n\nconst db = getDatabase();\nconst auth = getAuth();\nconst dbRef = ref(db);\n\nexport const defaultWorldId = 'l5ybd0mu:2x3xfrsom4h';\n\n// {path1: val1, path2: val2}\nexport const update = (updates, onError) => {\n  try {\n    // console.log('updates', updates);\n    return _update(dbRef, updates);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\nif (location.host === 'localhost:3000') {\n  window._update = async (x) => await _update(dbRef, x);\n}\n\nexport const loadData = async (things) =>\n  Object.fromEntries(\n    await Promise.all(\n      things.map(async (t) => [t, (await get(child(dbRef, t))).val()])\n    )\n  );\n\nexport const listen = (pathStr, onChange, onError) => {\n  try {\n    const r = ref(db, pathStr);\n    onValue(r, (snapshot) => onChange(snapshot.val() || {}));\n    return () => off(r);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\n// export const createUser = async (email, pwd) => {\n//   try {\n//     const result = await createUserWithEmailAndPassword(auth, email, pwd);\n//     return result.user;\n//   } catch (e) {\n//     console.error(e);\n//     return e.message;\n//   }\n// };\n\nexport const logIn = (email, pwd) =>\n  signInWithEmailAndPassword(auth, email, pwd);\n\nexport const listenUser = (onChange) => onAuthStateChanged(auth, onChange);\n\nexport const logOut = () => signOut(auth);\n","import {Controls} from './controls';\nimport './game.css';\nimport {GamepadControls} from './gamepadControls';\nimport {load} from './load';\n\nlet game,\n  controls,\n  isPaused = false;\n\nconst rootElement = document.querySelector('#root');\n\nconst loop = () => {\n  if (document.hasFocus() && game) {\n    if (isPaused) {\n      isPaused = false;\n      document.body.style.opacity = 1;\n    }\n    const controlState = controls.getPressing();\n    if (!game.dialog.isOpen) game.iterate(controlState);\n  } else if (!isPaused) {\n    isPaused = true;\n    document.body.style.opacity = 0.5;\n  }\n  requestAnimationFrame(loop);\n};\n\nconst init = async () => {\n  game = await load(rootElement);\n  const onPress = (id) => {\n    if (game.dialog.isOpen) {\n      if (id === 'space' && game.dialog.hasChoices()) game.dialog.choose();\n      else game.dialog.next();\n    } else {\n      if (id === 'poop') game.makePoop();\n      else if (id === 'space') game.interact();\n    }\n  };\n  controls = new Controls({onPress}, rootElement, [\n    new GamepadControls({onPress}),\n  ]);\n  window.addEventListener('resize', () => {\n    game.updateViewport();\n  });\n  loop();\n};\n\ninit();\n","import {getBackground} from '../utils/getBackground';\nimport packageJSON from '../../package.json';\n\nconst TILE_SIZE = 48;\nconst CHUNK_SIZE = 24;\n\nconst toChunkCoords = (x, y) => [\n  Math.floor(x / CHUNK_SIZE),\n  Math.floor(y / CHUNK_SIZE),\n];\n\nclass Element {\n  constructor() {\n    this.el = document.createElement('div');\n  }\n  destroy() {\n    this.el.remove();\n  }\n}\n\nclass Chunk extends Element {\n  constructor(parentElement, x, y) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.el.classList.add('chunk');\n    parentElement.append(this.el);\n  }\n  updateVisibility(x, y) {\n    const shouldShow = Math.abs(x - this.x) < 2 && Math.abs(y - this.y) < 2;\n    this.el.title = `chunk ${this.x}_${this.y} ${x} ${y}`;\n    if (shouldShow !== this.isShowing) {\n      this.isShowing = shouldShow;\n      this.el.style.display = shouldShow ? 'block' : 'none';\n    }\n  }\n}\n\nexport class WorldElement extends Element {\n  constructor(rootElement) {\n    super();\n    this.chunks = {};\n    rootElement.append(this.el);\n  }\n  update(you) {\n    const [chunkX, chunkY] = toChunkCoords(you.x, you.y);\n    if (chunkX !== you.chunkX || chunkY !== you.chunkY) {\n      you.chunkX = chunkX;\n      you.chunkY = chunkY;\n      for (const key in this.chunks) {\n        this.chunks[key].updateVisibility(chunkX, chunkY);\n      }\n    }\n\n    const cx = Math.round(innerWidth / 2 - you.x * TILE_SIZE);\n    const cy = Math.round(innerHeight / 2 - you.y * TILE_SIZE);\n    this.el.style.transform = `translate(${cx}px,${cy}px)`;\n    document.body.style.backgroundPosition = `${cx >> 2}px ${cy >> 2}px`;\n  }\n  getChunk(x, y) {\n    const [chunkX, chunkY] = toChunkCoords(x, y);\n    const key = `${chunkX}_${chunkY}`;\n    return (this.chunks[key] =\n      this.chunks[key] || new Chunk(this.el, chunkX, chunkY));\n  }\n}\n\nexport class TileElement extends Element {\n  constructor(tile, worldElement) {\n    super();\n    this.worldElement = worldElement;\n    this.el.classList.add('tile');\n    this.updateType(tile.type);\n    this.update(tile);\n  }\n  updateType(type) {\n    this.el.style.background = getBackground(type);\n  }\n  update({x, y, dirX = 0, dirY = 0}) {\n    const angle = Math.atan2(dirY, dirX) + Math.PI;\n    const flip = angle >= 0.5 * Math.PI && angle <= 1.5 * Math.PI;\n    this.el.style.transform = `\n    translate(${x * TILE_SIZE}px,${y * TILE_SIZE}px)\n    rotate(${angle}rad)\n    ${flip ? 'scaleY(-1)' : ''}`;\n\n    const [chunkX, chunkY] = toChunkCoords(x, y);\n    if (chunkX !== this.chunkX || chunkY !== this.chunkY) {\n      this.chunkX = chunkX;\n      this.chunkY = chunkY;\n      this.worldElement.getChunk(x, y).el.append(this.el);\n    }\n  }\n}\n\nclass BarElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('bar');\n    this.valueElement = document.createElement('div');\n    this.el.append(this.valueElement);\n    parentElement.append(this.el);\n  }\n  update(value, maxValue, color) {\n    const el = this.valueElement;\n    el.style.background = color;\n    el.style.width = (100 * value) / maxValue + '%';\n    el.innerText = value;\n  }\n}\n\nclass CollectibleCounter extends Element {\n  constructor(parentElement, type) {\n    super();\n    this.el.classList.add('collectibleCounter');\n    this.el.innerHTML = `<span></span> <div style=\"background: ${getBackground(\n      type\n    )}\"></div>`;\n    this.valueEl = this.el.querySelector('span');\n    parentElement.append(this.el);\n  }\n  update(value) {\n    this.valueEl.innerText = value;\n  }\n}\n\nexport class Hud extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('hud');\n\n    this.healthBar = new BarElement(this.el);\n    this.poopBar = new BarElement(this.el);\n    parentElement.append(this.el);\n\n    this.counters = {};\n  }\n  updateCounter(type, value) {\n    if (!this.counters[type.id]) {\n      this.counters[type.id] = new CollectibleCounter(this.el, type);\n    }\n    this.counters[type.id].update(value);\n  }\n}\n\nexport class VersionElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('version');\n    this.el.innerText = 'v' + packageJSON.version;\n    parentElement.append(this.el);\n  }\n}\n\nexport class Dialog extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('dialog');\n\n    this.div = document.createElement('div');\n    this.div.classList.add('dialogContainer');\n    this.el.append(this.div);\n\n    this.hide();\n    parentElement.append(this.el);\n  }\n  say(text) {\n    this.text = text;\n    this.choices = [];\n    this.choiceIndex = 0;\n    this.render();\n    this.el.style.display = 'block';\n    this.isOpen = true;\n  }\n  choice(text, action) {\n    this.choices.push({text, action});\n    this.render();\n  }\n  hasChoices() {\n    return this.choices.length > 0;\n  }\n  next() {\n    if (this.choices.length) {\n      this.choiceIndex = (this.choiceIndex + 1) % this.choices.length;\n      this.render();\n    } else {\n      this.hide();\n    }\n  }\n  renderChoices() {\n    const choices = this.choices\n      .map(\n        ({text}, i) =>\n          `<li ${i === this.choiceIndex ? `class=\"selected\"` : ''}>${text}</li>`\n      )\n      .join('');\n\n    return choices ? `<ul>${choices}</ul>` : '';\n  }\n  render() {\n    this.div.innerHTML = this.text + this.renderChoices();\n  }\n  choose() {\n    this.hide();\n    this.choices[this.choiceIndex].action();\n  }\n  hide() {\n    this.el.style.display = 'none';\n    this.isOpen = false;\n  }\n}\n\nexport class ControlButton extends Element {\n  constructor(parentElement, id, pressing) {\n    super();\n    this.el.classList.add('control');\n    this.el.setAttribute('id', id);\n    this.el.addEventListener('touchstart', () => (pressing[id] = true));\n    this.el.addEventListener('touchend', () => (pressing[id] = false));\n    parentElement.append(this.el);\n  }\n}\n\nexport class ControlCircle extends Element {\n  constructor(parentElement, pressing) {\n    super();\n    this.el.classList.add('controlCircle');\n\n    const move = ({touches, offsetX, offsetY}) => {\n      const size = this.el.clientWidth;\n      const x = (touches ? touches[0].offsetX : offsetX) / size - 0.5;\n      const y = (touches ? touches[0].offsetY : offsetY) / size - 0.5;\n      pressing.left = x < 0;\n      pressing.right = x > 0;\n      pressing.up = y < 0;\n      pressing.down = y > 0;\n      this.el.innerText = JSON.stringify(touches);\n    };\n    const up = () => {\n      pressing.left = false;\n      pressing.up = false;\n      pressing.down = false;\n      pressing.right = false;\n      this.el.removeEventListener('touchmove', move);\n      this.el.removeEventListener('mousemove', move);\n      this.el.removeEventListener('touchend', up);\n      this.el.removeEventListener('mouseup', up);\n    };\n    const down = (e) => {\n      move(e);\n      this.el.addEventListener('touchmove', move);\n      this.el.addEventListener('mousemove', move);\n      this.el.addEventListener('touchend', up);\n      this.el.addEventListener('mouseup', up);\n    };\n\n    this.el.addEventListener('touchstart', down);\n    this.el.addEventListener('mousedown', down);\n    parentElement.append(this.el);\n  }\n}\n","import {indexBy} from '../utils';\nimport {ControlCircle} from './elements';\n\nconst showControls = false;\n\nconst controls = [\n  {id: 'left', key: 'A', code: 'KeyA'},\n  {id: 'right', key: 'D', code: 'KeyD'},\n  {id: 'up', key: 'W', code: 'KeyW'},\n  {id: 'down', key: 'S', code: 'KeyS'},\n  {id: 'poop', key: 'P', code: 'KeyP'},\n  {id: 'space', key: 'Space', code: 'Space'},\n  {id: 'reload', key: 'R', code: 'KeyR'},\n];\n\nconst controlIndex = indexBy((c) => c.code, controls);\n\nexport class Controls {\n  constructor({onPress}, rootElement, additionalControls) {\n    this.pressing = {};\n    this.additionalControls = additionalControls || [];\n    const keydown = (e) => {\n      if (controlIndex[e.code]) {\n        this.pressing[controlIndex[e.code].id] = e.type === 'keydown';\n      }\n    };\n    window.addEventListener('keydown', keydown);\n    window.addEventListener('keyup', keydown);\n    window.addEventListener('keypress', (e) => {\n      if (controlIndex[e.code]) {\n        onPress(controlIndex[e.code].id);\n      }\n    });\n\n    if (showControls) {\n      // for (const {id} of controls) {\n      //   new ControlButton(rootElement, id, this.pressing);\n      // }\n\n      new ControlCircle(rootElement, this.pressing, 400);\n    }\n  }\n  getPressing() {\n    let pressing = this.pressing;\n    this.additionalControls.forEach((control) => {\n      pressing = control.getPressing(pressing);\n    });\n    return pressing;\n  }\n}\n","const gamepadSettings = {\n  spaceIndex: 0,\n  jumpIndex: 1,\n  poopIndex: 2,\n  xAxisIndex: 0,\n  yAxisIndex: 1,\n};\n\nexport class GamepadControls {\n  constructor({onPress}) {\n    this.onPress = onPress;\n    this.lastGamepadState = {};\n  }\n  getGamepad() {\n    const gamepads = navigator.getGamepads();\n    for (let index = 0; index < gamepads.length; index++) {\n      if (gamepads[index] != null && gamepads[index].connected) {\n        return gamepads[index];\n      }\n    }\n    return null;\n  }\n  getGamepadState() {\n    const gamepad = this.getGamepad();\n    if (gamepad == null) return undefined;\n\n    return {\n      up:\n        gamepad.axes[gamepadSettings.yAxisIndex] <= -0.5 ||\n        gamepad.buttons[gamepadSettings.jumpIndex].pressed,\n      down: gamepad.axes[gamepadSettings.yAxisIndex] >= 0.5,\n      left: gamepad.axes[gamepadSettings.xAxisIndex] <= -0.25,\n      right: gamepad.axes[gamepadSettings.xAxisIndex] >= 0.25,\n      space: gamepad.buttons[gamepadSettings.spaceIndex].pressed,\n      poop: gamepad.buttons[gamepadSettings.poopIndex].pressed,\n    };\n  }\n  getPressing(incomingPressing) {\n    const gamepadState = this.getGamepadState();\n    if (!gamepadState) return incomingPressing;\n\n    // Merge the incoming pressing state with the gamepad state\n    const pressing = {...incomingPressing};\n\n    const gamepadPress = (id) => {\n      pressing[id] = true;\n      if (!this.lastGamepadState[id]) {\n        this.onPress(id);\n      }\n    };\n\n    if (gamepadState.up) gamepadPress('up');\n    if (gamepadState.down) gamepadPress('down');\n    if (gamepadState.left) gamepadPress('left');\n    if (gamepadState.right) gamepadPress('right');\n    if (gamepadState.space) gamepadPress('space');\n    if (gamepadState.poop) gamepadPress('poop');\n\n    this.lastGamepadState = gamepadState;\n    return pressing;\n  }\n}\n","const useTemplate = (str) => `\nconst GRASS = 'g';\nconst POOP = 'p';\nconst STONE = 's';\nconst WOMBAT = 'w';\nconst MAGMA = 'm';\nconst JEWEL = 'j';\nconst KOALA = 'k';\nconst WATER = 'a';\nconst POLYMER = 'o';\nconst NPC = 'n';\n\nconst say = game.dialog.say.bind(game.dialog);\nconst choice = game.dialog.choice.bind(game.dialog);\nconst playSound = game.playSound.bind(game);\nconst pauseSound = game.pauseSound.bind(game);\nconst loopSound = game.loopSound.bind(game);\n\nconst numCollected = game.numCollected.bind(game);\nconst setCollectible = game.setCollectible.bind(game);\n\nconst setPoop = game.setPoop.bind(game);\nconst setHealth = game.setHealth.bind(game);\n\nconst moveTile = game.moveTile.bind(game);\nconst addTile = game.addTile.bind(game);\nconst isEmpty = game.isEmpty.bind(game);\nconst getTile = game.getTile.bind(game);\nconst damage = game.damage.bind(game);\nconst changeTileType = game.changeTileType.bind(game);\n\nconst you = game.you;\nconst poop = game.poop;\nconst health = game.health;\n\n${str}`;\n\nexport const compile = (str) => {\n  if (!str) return;\n  try {\n    return new Function('game', useTemplate(str));\n  } catch (e) {\n    console.error(`Invalid logic: ${str}`);\n    console.error(e);\n    return;\n  }\n};\n","import {\n  Dialog,\n  Hud,\n  TileElement,\n  VersionElement,\n  WorldElement,\n} from './elements';\nimport {isValidUrl} from '../utils/isValidUrl';\n\nconst MAX_RENDER_DIST = 32; // don't move things more than this many tiles away\nconst MOVEMENT_THRESHOLD = 0.1; // don't move you or the viewport if you move less than this much of a tile\n\nconst pairs = [\n  [Math.floor, Math.floor],\n  [Math.ceil, Math.floor],\n  [Math.floor, Math.ceil],\n  [Math.ceil, Math.ceil],\n];\n\nconst dirs = [\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n  [0, -1],\n];\n\nexport class Game {\n  constructor(youPos, world, config, typeIndex, rootElement) {\n    this.rootElement = rootElement;\n    this.worldElement = new WorldElement(rootElement);\n    this.hud = new Hud(rootElement);\n    this.dialog = new Dialog(rootElement);\n    this.sounds = this.buildSounds(config, typeIndex);\n\n    new VersionElement(rootElement);\n\n    this.world = {};\n    for (const key in world) this.addTile(world[key]);\n\n    this.typeIndex = typeIndex;\n    this.you = {x: 0, y: 0, xs: 0, ys: 0, dirX: 1, dirY: 0, ...youPos};\n    this.you.el = new TileElement(\n      {x: this.you.x, y: this.you.y, type: typeIndex.w},\n      this.worldElement\n    );\n    for (const key of ['x', 'y', 'dirX', 'dirY']) {\n      this.you['p' + key] = this.you[key];\n    }\n    this.collectibles = {};\n    this.frame = 0;\n\n    // these can all be overridden by config\n    this.digSpeed = 0.07;\n    this.eatSpeed = 0.05;\n    this.gravity = 0.005;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.poop = 50;\n    this.maxPoop = 10;\n    this.jumpPower = 0.11;\n    this.moveSpeed = 0.02;\n    this.moveDeceleration = 0.3;\n    this.fallDamageMin = 0.2;\n    this.fallDamageMult = 100;\n    this.swimPower = 0.005;\n    this.waterDrag = 0.1;\n    this.airDrag = 0.001;\n\n    for (const x in config) {\n      if (!isNaN(config[x])) this[x] = Number(config[x]); // because editing them turns them into strings, yayyyy\n    }\n\n    this.setHealth(this.health);\n    this.setPoop(this.poop);\n    this.you.el.update(this.you);\n    this.worldElement.update(this.you);\n  }\n  buildSounds(config, typeIndex) {\n    const sounds = {};\n\n    Object.values(typeIndex)\n      .filter((type) => type.sound)\n      .forEach((type) => (sounds[type.id] = new Audio(type.sound)));\n\n    const soundSettingSuffix = 'Sound';\n    Object.keys(config)\n      .filter((key) => key.endsWith(soundSettingSuffix) && config[key])\n      .forEach((key) => {\n        const soundName = key.substring(\n          0,\n          key.length - soundSettingSuffix.length\n        );\n        sounds[soundName] = new Audio(config[key]);\n      });\n\n    return sounds;\n  }\n  playSound(sound) {\n    if (this.sounds[sound] === undefined && isValidUrl(sound)) {\n      this.sounds[sound] = new Audio(sound);\n    }\n    this.sounds[sound]?.play();\n  }\n  pauseSound(sound) {\n    this.sounds[sound]?.pause();\n  }\n  loopSound(sound) {\n    this.playSound(sound);\n    if (this.sounds[sound]) this.sounds[sound].loop = true;\n  }\n  iterate(pressing) {\n    this.moveWombat(pressing);\n    this.iterateTiles();\n    this.frame++;\n  }\n  addTile(tile) {\n    this.world[`${tile.x}_${tile.y}`] = {\n      ...tile,\n      el: new TileElement(tile, this.worldElement),\n    };\n  }\n  deleteTile(tile) {\n    tile.el.destroy();\n    delete this.world[`${tile.x}_${tile.y}`];\n  }\n  changeTileType(tile, type) {\n    tile.type = type;\n    delete tile.hp;\n    tile.el.updateType(type);\n  }\n  moveWombat(pressing) {\n    const {you, world} = this;\n    const lastSwimBlock = you.swimBlock;\n\n    if (this.health <= 0) {\n      if (pressing.reload) location.reload();\n      return;\n    }\n\n    if (pressing.left || pressing.right || pressing.up || pressing.down) {\n      you.dirX = 0;\n      you.dirY = 0;\n    }\n    if (pressing.left) {\n      you.xs -= you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX--;\n    }\n    if (pressing.right) {\n      you.xs += you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX++;\n    }\n    if (pressing.up) {\n      if (you.swimBlock) you.ys -= this.swimPower;\n      else if (!you.jumping && !you.ys) {\n        you.ys -= this.jumpPower;\n        you.jumping = true;\n      }\n      you.dirY--;\n    }\n    if (pressing.down) {\n      if (you.swimBlock) you.ys += this.swimPower;\n      you.dirY++;\n    }\n\n    you.x += you.xs;\n    you.xs *= 1 - (you.swimBlock ? this.waterDrag : this.moveDeceleration);\n\n    you.y += you.ys;\n    you.ys *= 1 - (you.swimBlock ? this.waterDrag : this.airDrag);\n    you.ys += this.gravity * (1 - (you.swimBlock?.type.density || 0));\n\n    const seen = {};\n    for (const [fx, fy] of pairs) {\n      const key = fx(you.x) + '_' + fy(you.y);\n      if (seen[key] || !world[key]) continue;\n      seen[key] = true;\n      this.resolveCollision(world[key]);\n    }\n\n    let damage = 0;\n    delete you.swimBlock;\n    for (const [fx, fy] of pairs) {\n      const block = world[fx(you.x) + '_' + fy(you.y)];\n      if (!block) continue;\n      if (block.type.collectible) {\n        this.collect(block.type.id);\n        return this.deleteTile(block);\n      }\n      if (block.type.healing < 0) {\n        damage = Math.max(damage, -block.type.healing);\n      }\n      if (block.type.moveStyle === 'liquid') you.swimBlock = block;\n    }\n    if (you.swimBlock && you.swimBlock !== lastSwimBlock) {\n      this.playSound(you.swimBlock.type.id);\n    }\n    if (damage) this.setHealth(this.health - damage);\n\n    if (\n      Math.abs(you.x - you.px) > MOVEMENT_THRESHOLD ||\n      Math.abs(you.y - you.py) > MOVEMENT_THRESHOLD ||\n      you.dirX !== you.pdirX ||\n      you.dirY !== you.pdirY\n    ) {\n      you.el.update(you);\n      this.worldElement.update(you);\n\n      you.px = you.x;\n      you.py = you.y;\n      you.pdirX = you.dirX;\n      you.pdirY = you.dirY;\n    }\n\n    if (pressing.space) {\n      const angle = Math.atan2(you.dirY, you.dirX);\n      const x = Math.round(you.x + Math.cos(angle));\n      const y = Math.round(you.y + Math.sin(angle));\n      const b = this.getTile(x, y);\n      if (b?.type.edible) {\n        this.damage(b, this.eatSpeed);\n        this.setHealth(this.health + b.type.healing * this.eatSpeed);\n        this.setPoop(this.poop + b.type.makePoop * this.eatSpeed);\n        this.playSound(b.type.id);\n      }\n      if (b?.type.diggable) this.damage(b, this.digSpeed);\n    }\n  }\n  // returns true if block is destroyed\n  damage(block, amount) {\n    if (!block?.type.hp) return;\n    if (block.hp === undefined) block.hp = block.type.hp;\n\n    block.hp -= amount;\n\n    if (block.hp <= 0) {\n      if (block.type.dropsLoot) {\n        this.changeTileType(block, this.typeIndex[block.type.dropsLoot]);\n      } else this.deleteTile(block);\n\n      return true;\n    }\n  }\n  resolveCollision(block) {\n    const {you} = this;\n    if (block.type.collectible || block.type.moveStyle === 'liquid') return;\n\n    if (block.type.healing < 0) {\n      this.setHealth(this.health + Number(block.type.healing));\n      this.playSound(block.type.id);\n      you.y -= 0.1;\n    }\n\n    if (Math.abs(you.x - block.x) > Math.abs(you.y - block.y)) {\n      const dx = block.x < you.x ? -1 : 1;\n      if (\n        !you.jumping &&\n        you.ys === this.gravity &&\n        block.type.movable &&\n        this.isEmpty(block.x + dx, block.y)\n      ) {\n        this.moveTile(block.x, block.y, dx, 0);\n      } else {\n        you.x = block.x + (you.x < block.x ? -1 : 1);\n      }\n      you.xs = 0;\n    } else {\n      if (you.y < block.y) you.jumping = false;\n      you.y = block.y + (you.y < block.y ? -1 : 1);\n\n      // fall damage\n      if (you.ys > this.fallDamageMin) {\n        const damage = (you.ys - this.fallDamageMin) * this.fallDamageMult;\n        this.setHealth(this.health - damage);\n        this.playSound('fallDamage');\n\n        const blockDamage = Math.min(\n          damage,\n          block.hp || Infinity,\n          block.type.hp || Infinity\n        );\n        if (this.damage(block, damage)) {\n          you.ys /= 1 + blockDamage;\n          return;\n        }\n      }\n      you.ys = 0;\n    }\n  }\n  getTile(x, y) {\n    return this.world[`${x}_${y}`];\n  }\n  isEmpty(x, y) {\n    return !this.getTile(x, y);\n  }\n  badGuyCanWalkOn(x, y) {\n    const t = this.getTile(x, y);\n    return t && t.type.moveStyle !== 'liquid';\n  }\n  moveTile(x, y, dx, dy) {\n    const key = `${x}_${y}`;\n    const b = this.world[key];\n    delete this.world[key];\n    b.x += dx;\n    b.y += dy;\n    this.world[`${b.x}_${b.y}`] = b;\n    b.el.update(b);\n  }\n  iterateTiles() {\n    for (const key in this.world) {\n      const b = this.world[key];\n      if (\n        !b.type.moveDelay ||\n        this.frame % b.type.moveDelay > 0 ||\n        Math.abs(this.you.x - b.x) > MAX_RENDER_DIST ||\n        Math.abs(this.you.y - b.y) > MAX_RENDER_DIST\n      )\n        continue;\n\n      if (this.isEmpty(b.x, b.y + 1)) {\n        this.moveTile(b.x, b.y, 0, 1);\n      } else if (b.type.moveStyle === 'liquid') {\n        const left = this.isEmpty(b.x - 1, b.y);\n        const right = this.isEmpty(b.x + 1, b.y);\n        if (left && right) {\n          this.moveTile(b.x, b.y, Math.random() < 0.5 ? 1 : -1, 0);\n        } else if (left) {\n          this.moveTile(b.x, b.y, -1, 0);\n        } else if (right) {\n          this.moveTile(b.x, b.y, 1, 0);\n        }\n      } else if (b.type.moveStyle === 'patrol') {\n        if (!b.dirX) b.dirX = 1;\n        if (\n          this.isEmpty(b.x + b.dirX, b.y) &&\n          this.badGuyCanWalkOn(b.x + b.dirX, b.y + 1)\n        ) {\n          this.moveTile(b.x, b.y, b.dirX, 0);\n        } else {\n          b.dirX *= -1;\n        }\n      }\n\n      // special rules for magma\n      if (b.type.id === 'm') {\n        let touchingWater = false;\n        for (const [dx, dy] of dirs) {\n          const block = this.getTile(b.x + dx, b.y + dy);\n          if (block && (block.type.hp || block.type.id === 'a')) {\n            if (block.type.id === 'a') touchingWater = true;\n            this.deleteTile(block);\n          }\n        }\n        if (touchingWater) {\n          // if lava touches water, it turns to stone\n          this.changeTileType(b, this.typeIndex.s);\n        }\n      }\n    }\n  }\n  setHealth(health) {\n    this.health = Math.max(0, Math.min(this.maxHealth, health));\n    this.hud.healthBar.update(\n      Math.ceil(this.health),\n      this.maxHealth,\n      this.health > 30 ? 'green' : 'red'\n    );\n    if (health <= 0) {\n      this.playSound('gameOver');\n      this.rootElement.innerHTML +=\n        '<div class=\"youDead\"><h1>you dead</h1><h2>press R to try again</h2></div>';\n    }\n  }\n  numCollected(id) {\n    return this.collectibles[id] || 0;\n  }\n  setCollectible(typeId, amount) {\n    this.collectibles[typeId] = amount;\n    this.hud.updateCounter(this.typeIndex[typeId], amount);\n  }\n  collect(typeId) {\n    this.setCollectible(typeId, this.numCollected(typeId) + 1);\n    this.playSound(typeId);\n  }\n  setPoop(poop) {\n    this.poop = Math.max(0, Math.min(this.maxPoop, poop));\n    this.hud.poopBar.update(Math.floor(this.poop), this.maxPoop, 'saddleBrown');\n  }\n  makePoop() {\n    if (this.poop < 1) return;\n    const {you, world, typeIndex} = this;\n    const angle = Math.atan2(you.dirY, you.dirX) + Math.PI;\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    if ((x !== you.x || y !== you.y) && !world[`${x}_${y}`]) {\n      this.addTile({x, y, type: typeIndex.p});\n      this.setPoop(this.poop - 1);\n      this.playSound('p');\n    }\n  }\n  updateViewport() {\n    this.worldElement.update(this.you);\n  }\n  interact() {\n    const {you} = this;\n    const angle = Math.atan2(you.dirY, you.dirX);\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    this.getTile(x, y)?.onSpace?.(this);\n  }\n}\n","export const isValidUrl = (urlString) => {\n  const urlPattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // validate protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // validate domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // validate OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // validate port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // validate query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  ); // validate fragment locator\n  return !!urlPattern.test(urlString);\n};\n","import {defaultWorldId, loadData} from '../firebase';\nimport {isGuid} from '../utils';\nimport {compile} from './compile';\nimport {Game} from './Game';\n\nexport const load = async (rootElement) => {\n  let hashConfig;\n  if (location.hash.length > 1) {\n    try {\n      hashConfig = JSON.parse(atob(location.hash.slice(1)));\n    } catch (e) {\n      console.log('bad hash', e);\n    }\n  }\n\n  const worldKey = `worlds/${\n    isGuid(hashConfig?.worldId) ? hashConfig.worldId : defaultWorldId\n  }/world`;\n\n  const data = await loadData(['tileTypes', worldKey, 'gameConfig']);\n\n  const {tileTypes, gameConfig} = data;\n  const world = data[worldKey];\n\n  const typeIndex = {};\n  let you;\n  for (const type of Object.values(tileTypes)) {\n    typeIndex[type.id] = type;\n  }\n  for (const key in world) {\n    const {x, y, tileType, onSpace} = world[key];\n    if (tileType === 'w') {\n      you = {x, y};\n      delete world[key];\n    } else if (typeIndex[tileType]) {\n      world[key] = {x, y, type: typeIndex[tileType], onSpace: compile(onSpace)};\n    } else {\n      delete world[key];\n    }\n  }\n\n  if (hashConfig?.x !== undefined && hashConfig?.y !== undefined) {\n    you.x = hashConfig.x;\n    you.y = hashConfig.y;\n  }\n\n  return new Game(you, world, gameConfig, typeIndex, rootElement);\n};\n","// export const assocPath = ([first, ...rest], val, obj) => {\n//   const copy = Array.isArray(obj) ? [...obj] : {...obj};\n//   copy[first] = rest.length ? assocPath(rest, val, copy[first]) : val;\n//   return copy;\n// };\n\nexport const dissoc = (key, obj) => {\n  const copy = {...obj};\n  delete copy[key];\n  return copy;\n};\n\nexport const guid = () =>\n  Date.now().toString(36) + ':' + Math.random().toString(36).slice(2);\n\nexport const isGuid = (str) => /^[0-9a-z]{8,}:[0-9a-z]+$/.test(str);\n\nexport const groupBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) {\n    const key = func(el);\n    (res[key] = res[key] || []).push(el);\n  }\n  return res;\n};\n\nexport const indexBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) res[func(el)] = el;\n  return res;\n};\n\nexport const objToArr = (obj = {}) =>\n  Object.entries(obj).map(([key, el]) => ({key, ...el}));\n\nexport const debounce = (func, delay) => {\n  let timeout;\n  const f = (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\nexport const throttle = (func, delay) => {\n  let timeout;\n  let running = false;\n  let runAgainArgs;\n  const f = (...args) => {\n    if (running) {\n      runAgainArgs = args;\n      return;\n    }\n    running = true;\n    timeout = setTimeout(() => {\n      func(...args);\n      running = false;\n      if (runAgainArgs) {\n        f(...runAgainArgs);\n      }\n      runAgainArgs = undefined;\n    }, delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\n// const memoize = (func) => {\n//   const cache = {};\n//   return (...args) => {\n//     const key = JSON.stringify(args);\n//     if (cache[key] === undefined) cache[key] = func(...args);\n//     return cache[key];\n//   };\n// };\n","export const getBackground = (type) =>\n  type?.image ? `no-repeat center/contain url(${type.image})` : type?.color;\n"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","auth","getAuth","dbRef","ref","defaultWorldId","update","updates","onError","_update","e","console","error","message","location","host","window","x","loadData","things","Object","Promise","all","map","t","get","child","val","fromEntries","listen","pathStr","onChange","r","onValue","snapshot","off","logIn","email","pwd","signInWithEmailAndPassword","listenUser","onAuthStateChanged","logOut","signOut","game","controls","toChunkCoords","y","Math","floor","Element","this","el","document","createElement","remove","Chunk","parentElement","classList","add","append","shouldShow","abs","title","isShowing","style","display","WorldElement","rootElement","chunks","you","chunkX","chunkY","key","updateVisibility","cx","round","innerWidth","cy","innerHeight","transform","body","backgroundPosition","TileElement","tile","worldElement","updateType","type","background","getBackground","dirX","dirY","angle","atan2","PI","flip","getChunk","BarElement","valueElement","value","maxValue","color","width","innerText","CollectibleCounter","innerHTML","valueEl","querySelector","Hud","healthBar","poopBar","counters","id","VersionElement","packageJSON","Dialog","div","hide","text","choices","choiceIndex","render","isOpen","action","push","length","i","join","renderChoices","controlIndex","indexBy","c","code","Controls","additionalControls","onPress","pressing","keydown","addEventListener","forEach","control","getPressing","gamepadSettings","GamepadControls","lastGamepadState","gamepads","navigator","getGamepads","index","connected","gamepad","getGamepad","up","axes","buttons","pressed","down","left","right","space","poop","incomingPressing","gamepadState","getGamepadState","gamepadPress","compile","str","Function","useTemplate","pairs","ceil","dirs","Game","youPos","world","config","typeIndex","hud","dialog","sounds","buildSounds","addTile","xs","ys","w","collectibles","frame","digSpeed","eatSpeed","gravity","health","maxHealth","maxPoop","jumpPower","moveSpeed","moveDeceleration","fallDamageMin","fallDamageMult","swimPower","waterDrag","airDrag","isNaN","Number","setHealth","setPoop","values","filter","sound","Audio","soundSettingSuffix","keys","endsWith","soundName","substring","urlString","undefined","RegExp","test","play","pause","playSound","loop","moveWombat","iterateTiles","destroy","hp","lastSwimBlock","swimBlock","reload","jumping","density","seen","fx","fy","resolveCollision","damage","block","collectible","collect","deleteTile","healing","max","moveStyle","px","py","pdirX","pdirY","cos","sin","b","getTile","edible","makePoop","diggable","amount","dropsLoot","changeTileType","dx","movable","isEmpty","moveTile","blockDamage","min","Infinity","dy","moveDelay","random","badGuyCanWalkOn","touchingWater","s","typeId","updateCounter","setCollectible","numCollected","p","onSpace","load","hash","hashConfig","JSON","parse","atob","slice","log","worldKey","isGuid","worldId","data","tileTypes","gameConfig","tileType","isPaused","hasFocus","opacity","controlState","iterate","requestAnimationFrame","init","hasChoices","choose","next","interact","updateViewport","dissoc","obj","copy","guid","Date","now","toString","func","arr","res","objToArr","entries","debounce","delay","timeout","f","args","clearTimeout","setTimeout","cancel","throttle","runAgainArgs","running","image"],"sourceRoot":""}