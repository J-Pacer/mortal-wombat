{"version":3,"file":"static/js/927.339a5017.chunk.js","mappings":"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","sources":["firebase.js","game/main.js","game/elements.js","game/controls.js","game/Game.js","game/load.js","utils.js","utils/getBackground.js"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {\n  ref,\n  getDatabase,\n  update as _update,\n  onValue,\n  off,\n  get,\n  child,\n} from 'firebase/database';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\n\ninitializeApp({\n  apiKey: 'AIzaSyBEserPzSUos4MT3XRO8NKAO2oVk1-LS-I',\n  authDomain: 'mortal-wombat-8c76a.firebaseapp.com',\n  projectId: 'mortal-wombat-8c76a',\n  storageBucket: 'mortal-wombat-8c76a.appspot.com',\n  messagingSenderId: '929181149015',\n  appId: '1:929181149015:web:33a7f450bcdbb06ae64012',\n  measurementId: 'G-JL6HCMYYBS',\n});\n\n/*\nData:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/database/mortal-wombat-8c76a-default-rtdb/data\nData Docs: https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=0\nList Docs: https://firebase.google.com/docs/database/web/lists-of-data?hl=en&authuser=0\n\nUsers:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/authentication/users\nUser Docs: https://firebase.google.com/docs/auth/web/manage-users\n*/\n\nconst db = getDatabase();\nconst auth = getAuth();\nconst dbRef = ref(db);\n\nexport const defaultWorldId = 'l31p2np9:dy828s8l3wv';\n\n// {path1: val1, path2: val2}\nexport const update = (updates, onError) => {\n  try {\n    // console.log('updates', updates);\n    return _update(dbRef, updates);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\nif (location.host === 'localhost:3000') {\n  window._update = async (x) => await _update(dbRef, x);\n}\n\nexport const loadData = async (things) =>\n  Object.fromEntries(\n    await Promise.all(\n      things.map(async (t) => [t, (await get(child(dbRef, t))).val()])\n    )\n  );\n\nexport const listen = (pathStr, onChange, onError) => {\n  try {\n    const r = ref(db, pathStr);\n    onValue(r, (snapshot) => onChange(snapshot.val() || {}));\n    return () => off(r);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\n// export const createUser = async (email, pwd) => {\n//   try {\n//     const result = await createUserWithEmailAndPassword(auth, email, pwd);\n//     return result.user;\n//   } catch (e) {\n//     console.error(e);\n//     return e.message;\n//   }\n// };\n\nexport const logIn = (email, pwd) =>\n  signInWithEmailAndPassword(auth, email, pwd);\n\nexport const listenUser = (onChange) => onAuthStateChanged(auth, onChange);\n\nexport const logOut = () => signOut(auth);\n","import {Controls} from './controls';\nimport './game.css';\nimport {load} from './load';\n\nlet game, controls;\n\nconst rootElement = document.querySelector('#root');\n\nconst loop = () => {\n  if (document.hasFocus() && game) {\n    document.body.style.opacity = 1;\n    game.iterate(controls.getPressing());\n  } else {\n    document.body.style.opacity = 0.5;\n  }\n  requestAnimationFrame(loop);\n};\n\nconst init = async () => {\n  game = await load(rootElement);\n  controls = new Controls(\n    {\n      onPress: (id) => {\n        if (id === 'poop') game.makePoop();\n      },\n    },\n    rootElement\n  );\n  loop();\n};\n\ninit();\n","import {getBackground} from '../utils/getBackground';\nimport packageJSON from '../../package.json';\n\nconst scale = 48;\n\nclass Element {\n  constructor() {\n    this.el = document.createElement('div');\n  }\n  destroy() {\n    this.el.remove();\n  }\n}\n\nexport class WorldElement extends Element {\n  constructor(rootElement) {\n    super();\n    rootElement.append(this.el);\n  }\n  update(you) {\n    const cx = innerWidth / 2 - you.x * scale;\n    const cy = innerHeight / 2 - you.y * scale;\n    this.el.style.transform = `translate(${cx}px,${cy}px)`;\n  }\n}\n\nexport class TileElement extends Element {\n  constructor(parentElement, tile) {\n    super();\n    this.el.classList.add('tile');\n    this.updateType(tile.type);\n    this.update(tile);\n    parentElement.append(this.el);\n  }\n  updateType(type) {\n    this.el.style.background = getBackground(type);\n  }\n  update({x, y, dirX = 0, dirY = 0}) {\n    const angle = Math.atan2(dirY, dirX) + Math.PI;\n    const flip = angle >= 0.5 * Math.PI && angle <= 1.5 * Math.PI;\n    this.el.style.transform = `\n    translate(${x * scale}px,${y * scale}px)\n    rotate(${angle}rad)\n    ${flip ? 'scaleY(-1)' : ''}`;\n  }\n}\n\nexport class BarElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('bar');\n    this.valueElement = document.createElement('div');\n    this.el.append(this.valueElement);\n    parentElement.append(this.el);\n  }\n  update(value, maxValue, color) {\n    const el = this.valueElement;\n    el.style.background = color;\n    el.style.width = (100 * value) / maxValue + '%';\n    el.innerText = Math.floor(value);\n  }\n}\n\nexport class JewelCounter extends Element {\n  constructor(parentElement, typeIndex) {\n    super();\n    this.typeIndex = typeIndex;\n    this.el.classList.add('jewelCounter');\n    parentElement.append(this.el);\n  }\n  update(jewels) {\n    this.el.innerHTML = `${jewels} <img src=\"${this.typeIndex.j.image}\" />`;\n  }\n}\n\nexport class Hud extends Element {\n  constructor(parentElement, typeIndex) {\n    super();\n    this.el.classList.add('hud');\n\n    this.healthBar = new BarElement(this.el);\n    this.poopBar = new BarElement(this.el);\n    this.jewelCounter = new JewelCounter(this.el, typeIndex);\n    parentElement.append(this.el);\n  }\n}\n\nexport class VersionElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('version');\n    this.el.innerText = 'v' + packageJSON.version;\n    parentElement.append(this.el);\n  }\n}\n\nexport class ControlButton extends Element {\n  constructor(parentElement, id, pressing) {\n    super();\n    this.el.classList.add('control');\n    this.el.setAttribute('id', id);\n    this.el.addEventListener('touchstart', () => (pressing[id] = true));\n    this.el.addEventListener('touchend', () => (pressing[id] = false));\n    parentElement.append(this.el);\n  }\n}\n","import {indexBy} from '../utils';\nimport {ControlButton} from './elements';\n\nconst showControls = false;\n\nconst controls = [\n  {id: 'left', key: 'A', code: 'KeyA'},\n  {id: 'right', key: 'D', code: 'KeyD'},\n  {id: 'up', key: 'W', code: 'KeyW'},\n  {id: 'down', key: 'S', code: 'KeyS'},\n  {id: 'poop', key: 'P', code: 'KeyP'},\n  {id: 'attack', key: 'Space', code: 'Space'},\n  {id: 'reload', key: 'R', code: 'KeyR'},\n];\n\nconst controlIndex = indexBy((c) => c.code, controls);\n\nexport class Controls {\n  constructor({onPress}, rootElement) {\n    this.pressing = {};\n    const keydown = (e) => {\n      if (controlIndex[e.code]) {\n        this.pressing[controlIndex[e.code].id] = e.type === 'keydown';\n      }\n    };\n    window.addEventListener('keydown', keydown);\n    window.addEventListener('keyup', keydown);\n    window.addEventListener('keypress', (e) => {\n      if (controlIndex[e.code]) {\n        onPress(controlIndex[e.code].id);\n      }\n    });\n\n    if (showControls) {\n      for (const {id} of controls) {\n        new ControlButton(rootElement, id, this.pressing);\n      }\n    }\n  }\n  getPressing() {\n    return this.pressing;\n  }\n}\n","import {Hud, TileElement, VersionElement, WorldElement} from './elements';\n\nconst MAX_RENDER_DIST = 32; // don't move things more than this many tiles away\nconst MOVEMENT_THRESHOLD = 0.1; // don't move you or the viewport if you move less than this much of a tile\n\nconst pairs = [\n  [Math.floor, Math.floor],\n  [Math.ceil, Math.floor],\n  [Math.floor, Math.ceil],\n  [Math.ceil, Math.ceil],\n];\n\nconst dirs = [\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n  [0, -1],\n];\n\nexport class Game {\n  constructor(youPos, world, config, typeIndex, rootElement) {\n    this.rootElement = rootElement;\n    this.worldElement = new WorldElement(rootElement);\n    this.hud = new Hud(rootElement, typeIndex);\n    new VersionElement(rootElement);\n\n    this.world = {};\n    for (const key in world) this.addTile(world[key]);\n\n    this.typeIndex = typeIndex;\n    this.you = {\n      x: 0,\n      y: 0,\n      xs: 0,\n      ys: 0,\n      dirX: 1,\n      dirY: 0,\n      ...youPos,\n    };\n    this.you.el = new TileElement(this.worldElement.el, {\n      x: this.you.x,\n      y: this.you.y,\n      type: typeIndex.w,\n    });\n    for (const key of ['x', 'y', 'dirX', 'dirY']) {\n      this.you['p' + key] = this.you[key];\n    }\n    this.jewels = 0;\n    this.frame = 0;\n\n    // these can all be overridden by config\n    this.digSpeed = 0.07;\n    this.eatSpeed = 0.05;\n    this.gravity = 0.005;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.poop = 50;\n    this.maxPoop = 10;\n    this.jumpPower = 0.11;\n    this.moveSpeed = 0.02;\n    this.moveDeceleration = 0.3;\n    this.fallDamageMin = 0.2;\n    this.fallDamageMult = 100;\n    this.swimPower = 0.005;\n    this.waterDrag = 0.1;\n    this.airDrag = 0.001;\n\n    for (const x in config) {\n      if (!isNaN(config[x])) this[x] = Number(config[x]); // because editing them turns them into strings, yayyyy\n    }\n\n    this.setHealth(this.health);\n    this.setPoop(this.poop);\n    this.you.el.update(this.you);\n    this.worldElement.update(this.you);\n  }\n  iterate(pressing) {\n    this.moveWombat(pressing);\n    this.iterateTiles();\n    this.frame++;\n  }\n  addTile(tile) {\n    this.world[`${tile.x}_${tile.y}`] = {\n      ...tile,\n      el: new TileElement(this.worldElement.el, tile),\n    };\n  }\n  deleteTile(tile) {\n    tile.el.destroy();\n    delete this.world[`${tile.x}_${tile.y}`];\n  }\n  changeTileType(tile, type) {\n    tile.type = type;\n    delete tile.hp;\n    tile.el.updateType(type);\n  }\n  moveWombat(pressing) {\n    const {you, world, gravity} = this;\n\n    if (this.health <= 0) {\n      if (pressing.reload) location.reload();\n      return;\n    }\n\n    if (pressing.left || pressing.right || pressing.up || pressing.down) {\n      you.dirX = 0;\n      you.dirY = 0;\n    }\n    if (pressing.left) {\n      you.xs -= you.swimming ? this.swimPower : this.moveSpeed;\n      you.dirX--;\n    }\n    if (pressing.right) {\n      you.xs += you.swimming ? this.swimPower : this.moveSpeed;\n      you.dirX++;\n    }\n    if (pressing.up) {\n      if (you.swimming) you.ys -= this.swimPower;\n      else if (!you.jumping && !you.ys) {\n        you.ys -= this.jumpPower;\n        you.jumping = true;\n      }\n      you.dirY--;\n    }\n    if (pressing.down) {\n      if (you.swimming) you.ys += this.swimPower;\n      you.dirY++;\n    }\n\n    you.x += you.xs;\n    you.xs *= 1 - (you.swimming ? this.waterDrag : this.moveDeceleration);\n\n    you.y += you.ys;\n    you.ys *= 1 - (you.swimming ? this.waterDrag : this.airDrag);\n    if (!you.swimming) you.ys += gravity;\n\n    const seen = {};\n    for (const [fx, fy] of pairs) {\n      const key = fx(you.x) + '_' + fy(you.y);\n      if (seen[key] || !world[key]) continue;\n      seen[key] = true;\n      this.resolveCollision(world[key]);\n    }\n\n    let damage = 0;\n    you.swimming = false;\n    for (const [fx, fy] of pairs) {\n      const block = world[fx(you.x) + '_' + fy(you.y)];\n      if (!block) continue;\n      if (block.type.collectible) {\n        this.incJewels();\n        return this.deleteTile(block);\n      }\n      if (block.type.healing < 0) {\n        damage = Math.max(damage, -block.type.healing);\n      }\n      if (block.type.moveStyle === 'liquid') you.swimming = true;\n    }\n    if (damage) this.setHealth(this.health - damage);\n\n    if (\n      Math.abs(you.x - you.px) > MOVEMENT_THRESHOLD ||\n      Math.abs(you.y - you.py) > MOVEMENT_THRESHOLD ||\n      you.dirX !== you.pdirX ||\n      you.dirY !== you.pdirY\n    ) {\n      you.el.update(you);\n      this.worldElement.update(you);\n\n      you.px = you.x;\n      you.py = you.y;\n      you.pdirX = you.dirX;\n      you.pdirY = you.dirY;\n    }\n\n    if (pressing.attack) {\n      const angle = Math.atan2(you.dirY, you.dirX);\n      const x = Math.round(you.x + Math.cos(angle));\n      const y = Math.round(you.y + Math.sin(angle));\n      const b = this.getTile(x, y);\n      if (b?.type.edible) {\n        if (b.hp === undefined) b.hp = b.type.hp;\n        b.hp -= this.eatSpeed;\n        this.setHealth(this.health + b.type.healing * this.eatSpeed);\n        this.setPoop(this.poop + b.type.makePoop * this.eatSpeed);\n        if (b.hp <= 0) return this.deleteTile(b);\n      }\n      if (b?.type.diggable) {\n        if (b.hp === undefined) b.hp = b.type.hp;\n        b.hp -= this.digSpeed;\n        if (b.hp <= 0) {\n          if (b.type.dropsLoot) {\n            this.changeTileType(b, this.typeIndex[b.type.dropsLoot]);\n          } else this.deleteTile(b);\n        }\n      }\n    }\n  }\n  resolveCollision(block) {\n    const {you} = this;\n    if (block.type.collectible || block.type.moveStyle === 'liquid') return;\n\n    if (block.type.healing < 0) {\n      this.setHealth(this.health + Number(block.type.healing));\n      you.y -= 0.1;\n    }\n\n    if (Math.abs(you.x - block.x) > Math.abs(you.y - block.y)) {\n      const dx = block.x < you.x ? -1 : 1;\n      if (\n        !you.jumping &&\n        you.ys === this.gravity &&\n        block.type.movable &&\n        this.isEmpty(block.x + dx, block.y)\n      ) {\n        this.moveTile(block.x, block.y, dx, 0);\n      } else {\n        you.x = block.x + (you.x < block.x ? -1 : 1);\n      }\n      you.xs = 0;\n    } else {\n      if (you.y < block.y) you.jumping = false;\n      you.y = block.y + (you.y < block.y ? -1 : 1);\n\n      // fall damage\n      if (you.ys > this.fallDamageMin) {\n        this.setHealth(\n          this.health - (you.ys - this.fallDamageMin) * this.fallDamageMult\n        );\n      }\n      you.ys = 0;\n    }\n  }\n  getTile(x, y) {\n    return this.world[`${x}_${y}`];\n  }\n  isEmpty(x, y) {\n    return !this.getTile(x, y);\n  }\n  badGuyCanWalkOn(x, y) {\n    const t = this.getTile(x, y);\n    return t && t.type.moveStyle !== 'liquid';\n  }\n  moveTile(x, y, dx, dy) {\n    const key = `${x}_${y}`;\n    const b = this.world[key];\n    delete this.world[key];\n    b.x += dx;\n    b.y += dy;\n    this.world[`${b.x}_${b.y}`] = b;\n    b.el.update(b);\n  }\n  iterateTiles() {\n    for (const key in this.world) {\n      const b = this.world[key];\n      if (\n        !b.type.moveDelay ||\n        this.frame % b.type.moveDelay > 0 ||\n        (this.you.x - b.x) ** 2 + (this.you.y - b.y) ** 2 > MAX_RENDER_DIST ** 2\n      )\n        continue;\n\n      if (this.isEmpty(b.x, b.y + 1)) {\n        this.moveTile(b.x, b.y, 0, 1);\n      } else if (b.type.moveStyle === 'liquid') {\n        const left = this.isEmpty(b.x - 1, b.y);\n        const right = this.isEmpty(b.x + 1, b.y);\n        if (left && right) {\n          this.moveTile(b.x, b.y, Math.random() < 0.5 ? 1 : -1, 0);\n        } else if (left) {\n          this.moveTile(b.x, b.y, -1, 0);\n        } else if (right) {\n          this.moveTile(b.x, b.y, 1, 0);\n        }\n      } else if (b.type.moveStyle === 'patrol') {\n        if (!b.dirX) b.dirX = 1;\n        if (\n          this.isEmpty(b.x + b.dirX, b.y) &&\n          this.badGuyCanWalkOn(b.x + b.dirX, b.y + 1)\n        ) {\n          this.moveTile(b.x, b.y, b.dirX, 0);\n        } else {\n          b.dirX *= -1;\n        }\n      }\n\n      // special rules for magma\n      if (b.type.id === 'm') {\n        let touchingWater = false;\n        for (const [dx, dy] of dirs) {\n          const block = this.getTile(b.x + dx, b.y + dy);\n          if (block && (block.type.hp || block.type.id === 'a')) {\n            if (block.type.id === 'a') touchingWater = true;\n            this.deleteTile(block);\n          }\n        }\n        if (touchingWater) {\n          // if lava touches water, it turns to stone\n          this.changeTileType(b, this.typeIndex.s);\n        }\n      }\n    }\n  }\n  setHealth(health) {\n    this.health = Math.max(0, Math.min(this.maxHealth, health));\n    this.hud.healthBar.update(\n      this.health,\n      this.maxHealth,\n      this.health > 30 ? 'green' : 'red'\n    );\n    if (health <= 0) {\n      this.rootElement.innerHTML +=\n        '<div class=\"youDead\"><h1>you dead</h1><h2>press R to try again</h2></div>';\n    }\n  }\n  setPoop(poop) {\n    this.poop = Math.max(0, Math.min(this.maxPoop, poop));\n    this.hud.poopBar.update(this.poop, this.maxPoop, 'saddleBrown');\n  }\n  incJewels() {\n    this.jewels++;\n    this.hud.jewelCounter.update(this.jewels);\n  }\n  makePoop() {\n    if (this.poop < 1) return;\n    const {you, world, typeIndex} = this;\n    const angle = Math.atan2(you.dirY, you.dirX) + Math.PI;\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    if ((x !== you.x || y !== you.y) && !world[`${x}_${y}`]) {\n      this.addTile({x, y, type: typeIndex.p});\n      this.setPoop(this.poop - 1);\n    }\n  }\n}\n","import {defaultWorldId, loadData} from '../firebase';\nimport {isGuid} from '../utils';\nimport {Game} from './Game';\n\nexport const load = async (rootElement) => {\n  let hashConfig;\n  if (location.hash.length > 1) {\n    try {\n      hashConfig = JSON.parse(atob(location.hash.slice(1)));\n    } catch (e) {\n      console.log('bad hash', e);\n    }\n  }\n\n  const worldKey = `worlds/${\n    isGuid(hashConfig?.worldId) ? hashConfig.worldId : defaultWorldId\n  }/world`;\n\n  const data = await loadData(['tileTypes', worldKey, 'gameConfig']);\n\n  const {tileTypes, gameConfig} = data;\n  const world = data[worldKey];\n\n  const typeIndex = {};\n  let you;\n  for (const type of Object.values(tileTypes)) {\n    typeIndex[type.id] = type;\n  }\n  for (const key in world) {\n    const {x, y, tileType} = world[key];\n    if (tileType === 'w') {\n      you = {x, y};\n      delete world[key];\n    } else if (typeIndex[tileType]) {\n      world[key] = {x, y, type: typeIndex[tileType]};\n    } else {\n      delete world[key];\n    }\n  }\n\n  if (hashConfig?.x !== undefined && hashConfig?.y !== undefined) {\n    you.x = hashConfig.x;\n    you.y = hashConfig.y;\n  }\n\n  return new Game(you, world, gameConfig, typeIndex, rootElement);\n};\n","// export const assocPath = ([first, ...rest], val, obj) => {\n//   const copy = Array.isArray(obj) ? [...obj] : {...obj};\n//   copy[first] = rest.length ? assocPath(rest, val, copy[first]) : val;\n//   return copy;\n// };\n\nexport const dissoc = (key, obj) => {\n  const copy = {...obj};\n  delete copy[key];\n  return copy;\n};\n\nexport const guid = () =>\n  Date.now().toString(36) + ':' + Math.random().toString(36).slice(2);\n\nexport const isGuid = (str) => /^[0-9a-z]{8,}:[0-9a-z]+$/.test(str);\n\nexport const groupBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) {\n    const key = func(el);\n    (res[key] = res[key] || []).push(el);\n  }\n  return res;\n};\n\nexport const indexBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) res[func(el)] = el;\n  return res;\n};\n\nexport const objToArr = (obj = {}) =>\n  Object.entries(obj).map(([key, el]) => ({key, ...el}));\n\nexport const debounce = (func, delay) => {\n  let timeout;\n  const f = (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\nexport const throttle = (func, delay) => {\n  let timeout;\n  let running = false;\n  let runAgainArgs;\n  const f = (...args) => {\n    if (running) {\n      runAgainArgs = args;\n      return;\n    }\n    running = true;\n    timeout = setTimeout(() => {\n      func(...args);\n      running = false;\n      if (runAgainArgs) {\n        f(...runAgainArgs);\n      }\n      runAgainArgs = undefined;\n    }, delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\n// const memoize = (func) => {\n//   const cache = {};\n//   return (...args) => {\n//     const key = JSON.stringify(args);\n//     if (cache[key] === undefined) cache[key] = func(...args);\n//     return cache[key];\n//   };\n// };\n","export const getBackground = (type) =>\n  type?.image ? `no-repeat center/contain url(${type.image})` : type?.color;\n"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","auth","getAuth","dbRef","ref","defaultWorldId","update","updates","onError","_update","e","console","error","message","location","host","window","x","loadData","things","Object","Promise","all","map","t","get","child","val","fromEntries","listen","pathStr","onChange","r","onValue","snapshot","off","logIn","email","pwd","signInWithEmailAndPassword","listenUser","onAuthStateChanged","logOut","signOut","game","controls","Element","this","el","document","createElement","remove","WorldElement","rootElement","append","you","cx","innerWidth","cy","innerHeight","y","style","transform","TileElement","parentElement","tile","classList","add","updateType","type","background","getBackground","dirX","dirY","angle","Math","atan2","PI","flip","BarElement","valueElement","value","maxValue","color","width","innerText","floor","JewelCounter","typeIndex","jewels","innerHTML","j","image","Hud","healthBar","poopBar","jewelCounter","VersionElement","packageJSON","id","key","code","controlIndex","indexBy","c","Controls","onPress","pressing","keydown","addEventListener","pairs","ceil","dirs","Game","youPos","world","config","worldElement","hud","addTile","xs","ys","w","frame","digSpeed","eatSpeed","gravity","health","maxHealth","poop","maxPoop","jumpPower","moveSpeed","moveDeceleration","fallDamageMin","fallDamageMult","swimPower","waterDrag","airDrag","isNaN","Number","setHealth","setPoop","moveWombat","iterateTiles","destroy","hp","reload","left","right","up","down","swimming","jumping","seen","fx","fy","resolveCollision","damage","block","collectible","incJewels","deleteTile","healing","max","moveStyle","abs","px","py","pdirX","pdirY","attack","round","cos","sin","b","getTile","edible","undefined","makePoop","diggable","dropsLoot","changeTileType","dx","movable","isEmpty","moveTile","dy","moveDelay","random","badGuyCanWalkOn","touchingWater","s","min","p","load","hash","length","hashConfig","JSON","parse","atob","slice","log","worldKey","isGuid","worldId","data","tileTypes","gameConfig","values","tileType","querySelector","loop","hasFocus","body","opacity","iterate","getPressing","requestAnimationFrame","init","dissoc","obj","copy","guid","Date","now","toString","str","test","func","arr","res","objToArr","entries","debounce","delay","timeout","f","args","clearTimeout","setTimeout","cancel","throttle","runAgainArgs","running"],"sourceRoot":""}