{"version":3,"file":"static/js/516.d2cf1c5c.chunk.js","mappings":"yKAAO,IAAMA,EAAoB,CAC/BC,QAAS,QACTC,SAAU,OACVC,SAAU,OACVC,cAAe,MACfC,eAAgB,MAChBC,gBAAiB,gDACjBC,cAAe,mDACfC,QAAS,QACTC,OAAQ,MACRC,UAAW,QACXC,UAAW,MACXC,QAAS,KACTC,iBAAkB,MAClBC,UAAW,SACXC,KAAM,IACNC,UAAW,QACXC,UAAW,OAGAC,EAAmB,CAC9B,EAAG,CACDC,MAAO,QACPC,UAAU,EACVC,QAAQ,EACRC,QAAS,IACTC,GAAI,IACJC,GAAI,IACJC,MACE,+FACFC,MAAO,QACPC,SAAU,IACVC,MAAO,IACPC,MAAO,kDAET,EAAG,CACDV,MAAO,cACPW,QAAS,KACTV,UAAU,EACVE,QAAS,IACTC,GAAI,IACJC,GAAI,IACJC,MACE,+FACFC,MAAO,OACPK,SAAS,EACTC,UAAW,IACXJ,MAAO,IACPC,MAAO,2DAET,EAAG,CACDV,MAAO,OACPK,GAAI,IACJC,MACE,+FACFC,MAAO,QACPE,MAAO,KAET,EAAG,CACDT,MAAO,MACPW,QAAS,MACTN,GAAI,IACJC,MACE,qFACFQ,aACE,qFACFC,aACE,qFACFC,aACE,qFACFC,aACE,qFACFC,eACE,qFACFX,MAAO,SACPE,MAAO,KAET,EAAG,CACDT,MAAO,SACPW,QAAS,IACTR,QAAS,QACTE,GAAI,IACJC,MACE,qFACFC,MAAO,QACPM,UAAW,KACXM,UAAW,SACXV,MAAO,KAET,EAAG,CACDW,aAAa,EACbpB,MAAO,OACPK,GAAI,IACJC,MAAO,mCACPC,MAAO,QACPE,MAAO,IACPC,MAAO,qDAET,EAAG,CACDV,MAAO,SACPW,QAAS,IACTV,UAAU,EACVoB,UAAW,IACXlB,QAAS,OACTC,GAAI,IACJC,GAAI,IACJC,MACE,+FACFC,MAAO,QACPM,UAAW,KACXM,UAAW,SACXV,MAAO,IACPC,MAAO,iDAET,EAAG,CACDV,MAAO,OACPW,QAAS,OACTN,GAAI,IACJC,MACE,qFACFC,MAAO,QACPM,UAAW,KACXM,UAAW,SACXV,MAAO,KAET,EAAG,CACDT,MAAO,UACPW,QAAS,KAC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","sources":["defaults.js","firebase.js","game/main.js","game/elements.js","game/controls.js","game/gamepadControls.js","game/compile.js","game/Game.js","utils/isValidUrl.js","game/load.js","utils.js","utils/getBackground.js","utils/mergeDeepLeft.js"],"sourcesContent":["export const defaultGameConfig = {\n  airDrag: '0.001',\n  digSpeed: '0.05',\n  eatSpeed: '0.05',\n  fallDamageMin: '0.3',\n  fallDamageMult: '100',\n  fallDamageSound: 'https://static.heironimus.info/sound/Thud.ogg',\n  gameOverSound: 'https://static.heironimus.info/sound/YouDead.ogg',\n  gravity: '0.005',\n  health: '100',\n  jumpPower: '0.111',\n  maxHealth: '100',\n  maxPoop: '10',\n  moveDeceleration: '0.2',\n  moveSpeed: '0.0222',\n  poop: '0',\n  swimPower: '0.008',\n  waterDrag: '0.1',\n};\n\nexport const defaultTileTypes = {\n  0: {\n    color: 'green',\n    diggable: true,\n    edible: true,\n    healing: '5',\n    hp: '1',\n    id: 'g',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/12bfe63d7362e53.png',\n    label: 'grass',\n    makePoop: '1',\n    order: '1',\n    sound: 'https://static.heironimus.info/sound/Chomp.ogg',\n  },\n  1: {\n    color: 'saddleBrown',\n    density: '20',\n    diggable: true,\n    healing: '2',\n    hp: '1',\n    id: 'p',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/b0e07c73f8aa75e.png',\n    label: 'poop',\n    movable: true,\n    moveDelay: '2',\n    order: '2',\n    sound: 'https://static.heironimus.info/sound/SloppyPoopSoft.ogg',\n  },\n  2: {\n    color: 'gray',\n    id: 's',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/0041e8e715b1264.png',\n    label: 'stone',\n    order: '3',\n  },\n  3: {\n    color: 'red',\n    density: '1.1',\n    id: 'w',\n    image:\n      'https://piskel-imgstore-b.appspot.com/img/610cc71e-cdb9-11ec-8e05-2f9ec14027c3.gif',\n    walkingImage:\n      'https://piskel-imgstore-b.appspot.com/img/253fba5c-cdb9-11ec-acf8-2f9ec14027c3.gif',\n    pushingImage:\n      'https://piskel-imgstore-b.appspot.com/img/586bb7e6-cdb9-11ec-a846-2f9ec14027c3.gif',\n    jumpingImage:\n      'https://piskel-imgstore-b.appspot.com/img/4439c4fd-cdb9-11ec-9ce8-2f9ec14027c3.gif',\n    diggingImage:\n      'https://piskel-imgstore-b.appspot.com/img/3a751840-cdb9-11ec-8175-2f9ec14027c3.gif',\n    crouchingImage:\n      'https://piskel-imgstore-b.appspot.com/img/32ac8f9e-cdb9-11ec-9e05-2f9ec14027c3.gif',\n    label: 'wombat',\n    order: '4',\n  },\n  4: {\n    color: 'orange',\n    density: '2',\n    healing: '-0.73',\n    id: 'm',\n    image:\n      'https://piskel-imgstore-b.appspot.com/img/a3591080-d48c-11ec-adf0-83f7175e2efe.gif',\n    label: 'magma',\n    moveDelay: '30',\n    moveStyle: 'liquid',\n    order: '5',\n  },\n  5: {\n    collectible: true,\n    color: 'cyan',\n    id: 'j',\n    image: 'https://i.ibb.co/m6V89v5/gem.gif',\n    label: 'jewel',\n    order: '6',\n    sound: 'https://static.heironimus.info/sound/PinkFast.ogg',\n  },\n  6: {\n    color: 'purple',\n    density: '0',\n    diggable: true,\n    dropsLoot: 'j',\n    healing: '-0.5',\n    hp: '2',\n    id: 'k',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/2b956856674265a.png',\n    label: 'Koala',\n    moveDelay: '25',\n    moveStyle: 'patrol',\n    order: '7',\n    sound: 'https://static.heironimus.info/sound/Hiss.ogg',\n  },\n  7: {\n    color: 'blue',\n    density: '0.85',\n    id: 'a',\n    image:\n      'https://piskel-imgstore-b.appspot.com/img/ffce45fa-d85c-11ec-a908-a90a117b47b4.gif',\n    label: 'water',\n    moveDelay: '15',\n    moveStyle: 'liquid',\n    order: '8',\n  },\n  8: {\n    color: '#f04dd2',\n    density: '10',\n    id: 'o',\n    image:\n      'https://piskel-imgstore-b.appspot.com/img/e92587eb-df95-11ec-b289-d74eb3c6d4e4.gif',\n    label: 'polymer',\n    movable: true,\n    moveDelay: '90',\n    moveStyle: 'liquid',\n    order: '9',\n    sound: 'https://static.heironimus.info/sound/Boing.ogg',\n  },\n  9: {\n    color: 'red',\n    density: '1',\n    hp: '1',\n    id: 'n',\n    image:\n      'https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/6efea72003769ad.png',\n    label: 'NPC',\n    moveDelay: '10',\n    order: '10',\n  },\n  '-1': {\n    color: 'black',\n    id: '_delete',\n    label: 'delete',\n    order: '0',\n  },\n};\n","import {initializeApp} from 'firebase/app';\nimport {\n  ref,\n  getDatabase,\n  update as _update,\n  onValue,\n  off,\n  get,\n  child,\n} from 'firebase/database';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\n\ninitializeApp({\n  apiKey: 'AIzaSyBEserPzSUos4MT3XRO8NKAO2oVk1-LS-I',\n  authDomain: 'mortal-wombat-8c76a.firebaseapp.com',\n  projectId: 'mortal-wombat-8c76a',\n  storageBucket: 'mortal-wombat-8c76a.appspot.com',\n  messagingSenderId: '929181149015',\n  appId: '1:929181149015:web:33a7f450bcdbb06ae64012',\n  measurementId: 'G-JL6HCMYYBS',\n});\n\n/*\nData:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/database/mortal-wombat-8c76a-default-rtdb/data\nData Docs: https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=0\nList Docs: https://firebase.google.com/docs/database/web/lists-of-data?hl=en&authuser=0\n\nUsers:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/authentication/users\nUser Docs: https://firebase.google.com/docs/auth/web/manage-users\n*/\n\nconst db = getDatabase();\nconst auth = getAuth();\nconst dbRef = ref(db);\n\nexport const defaultWorldId = 'l5ybd0mu:2x3xfrsom4h';\n\n// {path1: val1, path2: val2}\nexport const update = (updates, onError) => {\n  try {\n    // console.log('updates', updates);\n    return _update(dbRef, updates);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\nif (location.host === 'localhost:3000') {\n  window._update = async (x) => await _update(dbRef, x);\n}\n\nexport const loadItem = async (key) => (await get(child(dbRef, key))).val();\n\nexport const listen = (pathStr, onChange, onError) => {\n  try {\n    const r = ref(db, pathStr);\n    onValue(r, (snapshot) => onChange(snapshot.val() || {}));\n    return () => off(r);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\n// export const createUser = async (email, pwd) => {\n//   try {\n//     const result = await createUserWithEmailAndPassword(auth, email, pwd);\n//     return result.user;\n//   } catch (e) {\n//     console.error(e);\n//     return e.message;\n//   }\n// };\n\nexport const logIn = (email, pwd) =>\n  signInWithEmailAndPassword(auth, email, pwd);\n\nexport const listenUser = (onChange) => onAuthStateChanged(auth, onChange);\n\nexport const logOut = () => signOut(auth);\n","import {Controls} from './controls';\nimport './game.css';\nimport {GamepadControls} from './gamepadControls';\nimport {load} from './load';\n\nlet game,\n  controls,\n  isPaused = false;\n\nconst rootElement = document.querySelector('#root');\n\nconst loop = () => {\n  if (document.hasFocus() && game) {\n    if (isPaused) {\n      isPaused = false;\n      document.body.style.opacity = 1;\n    }\n    const controlState = controls.getPressing();\n    if (!game.dialog.isOpen) game.iterate(controlState);\n  } else if (!isPaused) {\n    isPaused = true;\n    document.body.style.opacity = 0.5;\n  }\n  requestAnimationFrame(loop);\n};\n\nconst init = async () => {\n  game = await load(rootElement);\n  const onPress = (id) => {\n    if (game.dialog.isOpen) {\n      if (id === 'space' && game.dialog.hasChoices()) game.dialog.choose();\n      else game.dialog.next();\n    } else {\n      if (id === 'poop') game.makePoop();\n      else if (id === 'space') game.interact();\n    }\n  };\n  controls = new Controls({onPress}, rootElement, [\n    new GamepadControls({onPress}),\n  ]);\n  window.addEventListener('resize', () => {\n    game.updateViewport();\n  });\n  loop();\n};\n\ninit();\n","import {getBackground} from '../utils/getBackground';\nimport packageJSON from '../../package.json';\n\nconst TILE_SIZE = 48;\nconst CHUNK_SIZE = 24;\n\nconst toChunkCoords = (x, y) => [\n  Math.floor(x / CHUNK_SIZE),\n  Math.floor(y / CHUNK_SIZE),\n];\n\nclass Element {\n  constructor() {\n    this.el = document.createElement('div');\n  }\n  destroy() {\n    this.el.remove();\n  }\n}\n\nclass Chunk extends Element {\n  constructor(parentElement, x, y) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.el.classList.add('chunk');\n    parentElement.append(this.el);\n  }\n  updateVisibility(x, y) {\n    const shouldShow = Math.abs(x - this.x) < 2 && Math.abs(y - this.y) < 2;\n    this.el.title = `chunk ${this.x}_${this.y} ${x} ${y}`;\n    if (shouldShow !== this.isShowing) {\n      this.isShowing = shouldShow;\n      this.el.style.display = shouldShow ? 'block' : 'none';\n    }\n  }\n}\n\nexport class WorldElement extends Element {\n  constructor(rootElement) {\n    super();\n    this.chunks = {};\n    rootElement.append(this.el);\n  }\n  update(you) {\n    const [chunkX, chunkY] = toChunkCoords(you.x, you.y);\n    if (chunkX !== you.chunkX || chunkY !== you.chunkY) {\n      you.chunkX = chunkX;\n      you.chunkY = chunkY;\n      for (const key in this.chunks) {\n        this.chunks[key].updateVisibility(chunkX, chunkY);\n      }\n    }\n\n    const cx = Math.round(innerWidth / 2 - you.x * TILE_SIZE);\n    const cy = Math.round(innerHeight / 2 - you.y * TILE_SIZE);\n    this.el.style.transform = `translate(${cx}px,${cy}px)`;\n    document.body.style.backgroundPosition = `${cx >> 2}px ${cy >> 2}px`;\n  }\n  getChunk(x, y) {\n    const [chunkX, chunkY] = toChunkCoords(x, y);\n    const key = `${chunkX}_${chunkY}`;\n    return (this.chunks[key] =\n      this.chunks[key] || new Chunk(this.el, chunkX, chunkY));\n  }\n}\n\nexport class TileElement extends Element {\n  constructor(tile, worldElement) {\n    super();\n    this.worldElement = worldElement;\n    this.el.classList.add('tile');\n    this.setBackground(tile.type);\n    this.update(tile);\n  }\n  setBackground(type, imageProp = 'image') {\n    this.el.style.background = getBackground(type, imageProp);\n  }\n  update({\n    x,\n    y,\n    dirX = 0,\n    dirY = 0,\n    type,\n    isJumping,\n    isWalking,\n    isPushing,\n    isDigging,\n  }) {\n    const angle = Math.atan2(dirY, dirX) + Math.PI;\n    const flip = angle >= 0.5 * Math.PI && angle <= 1.5 * Math.PI;\n    this.el.style.transform = `\n    translate(${x * TILE_SIZE}px,${y * TILE_SIZE}px)\n    rotate(${angle}rad)\n    ${flip ? 'scaleY(-1)' : ''}`;\n\n    const image = isDigging\n      ? 'diggingImage'\n      : isJumping\n      ? 'jumpingImage'\n      : isPushing\n      ? 'pushingImage'\n      : isWalking\n      ? 'walkingImage'\n      : 'image';\n    if (image !== this.pImage) {\n      this.pImage = image;\n      this.setBackground(type, image);\n    }\n\n    const [chunkX, chunkY] = toChunkCoords(x, y);\n    if (chunkX !== this.chunkX || chunkY !== this.chunkY) {\n      this.chunkX = chunkX;\n      this.chunkY = chunkY;\n      this.worldElement.getChunk(x, y).el.append(this.el);\n    }\n  }\n}\n\nclass BarElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('bar');\n    this.valueElement = document.createElement('div');\n    this.el.append(this.valueElement);\n    parentElement.append(this.el);\n  }\n  update(value, maxValue, color) {\n    const el = this.valueElement;\n    el.style.background = color;\n    el.style.width = (100 * value) / maxValue + '%';\n    el.innerText = value;\n  }\n}\n\nclass CollectibleCounter extends Element {\n  constructor(parentElement, type) {\n    super();\n    this.el.classList.add('collectibleCounter');\n    this.el.innerHTML = `<span></span> <div style=\"background: ${getBackground(\n      type\n    )}\"></div>`;\n    this.valueEl = this.el.querySelector('span');\n    parentElement.append(this.el);\n  }\n  update(value) {\n    this.valueEl.innerText = value;\n  }\n}\n\nexport class Hud extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('hud');\n\n    this.healthBar = new BarElement(this.el);\n    this.poopBar = new BarElement(this.el);\n    parentElement.append(this.el);\n\n    this.counters = {};\n  }\n  updateCounter(type, value) {\n    if (!this.counters[type.id]) {\n      this.counters[type.id] = new CollectibleCounter(this.el, type);\n    }\n    this.counters[type.id].update(value);\n  }\n}\n\nexport class VersionElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('version');\n    this.el.innerText = 'v' + packageJSON.version;\n    parentElement.append(this.el);\n  }\n}\n\nexport class Dialog extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('dialog');\n\n    this.div = document.createElement('div');\n    this.div.classList.add('dialogContainer');\n    this.el.append(this.div);\n\n    this.hide();\n    parentElement.append(this.el);\n  }\n  say(text) {\n    this.text = text;\n    this.choices = [];\n    this.choiceIndex = 0;\n    this.render();\n    this.el.style.display = 'block';\n    this.isOpen = true;\n  }\n  choice(text, action) {\n    this.choices.push({text, action});\n    this.render();\n  }\n  hasChoices() {\n    return this.choices.length > 0;\n  }\n  next() {\n    if (this.choices.length) {\n      this.choiceIndex = (this.choiceIndex + 1) % this.choices.length;\n      this.render();\n    } else {\n      this.hide();\n    }\n  }\n  renderChoices() {\n    const choices = this.choices\n      .map(\n        ({text}, i) =>\n          `<li ${i === this.choiceIndex ? `class=\"selected\"` : ''}>${text}</li>`\n      )\n      .join('');\n\n    return choices ? `<ul>${choices}</ul>` : '';\n  }\n  render() {\n    this.div.innerHTML = this.text + this.renderChoices();\n  }\n  choose() {\n    this.hide();\n    this.choices[this.choiceIndex].action();\n  }\n  hide() {\n    this.el.style.display = 'none';\n    this.isOpen = false;\n  }\n}\n\nexport class ControlButton extends Element {\n  constructor(parentElement, id, pressing) {\n    super();\n    this.el.classList.add('control');\n    this.el.setAttribute('id', id);\n    this.el.addEventListener('touchstart', () => (pressing[id] = true));\n    this.el.addEventListener('touchend', () => (pressing[id] = false));\n    parentElement.append(this.el);\n  }\n}\n\nexport class ControlCircle extends Element {\n  constructor(parentElement, pressing) {\n    super();\n    this.el.classList.add('controlCircle');\n\n    const move = ({touches, offsetX, offsetY}) => {\n      const size = this.el.clientWidth;\n      const x = (touches ? touches[0].offsetX : offsetX) / size - 0.5;\n      const y = (touches ? touches[0].offsetY : offsetY) / size - 0.5;\n      pressing.left = x < 0;\n      pressing.right = x > 0;\n      pressing.up = y < 0;\n      pressing.down = y > 0;\n      this.el.innerText = JSON.stringify(touches);\n    };\n    const up = () => {\n      pressing.left = false;\n      pressing.up = false;\n      pressing.down = false;\n      pressing.right = false;\n      this.el.removeEventListener('touchmove', move);\n      this.el.removeEventListener('mousemove', move);\n      this.el.removeEventListener('touchend', up);\n      this.el.removeEventListener('mouseup', up);\n    };\n    const down = (e) => {\n      move(e);\n      this.el.addEventListener('touchmove', move);\n      this.el.addEventListener('mousemove', move);\n      this.el.addEventListener('touchend', up);\n      this.el.addEventListener('mouseup', up);\n    };\n\n    this.el.addEventListener('touchstart', down);\n    this.el.addEventListener('mousedown', down);\n    parentElement.append(this.el);\n  }\n}\n","import {indexBy} from '../utils';\nimport {ControlCircle} from './elements';\n\nconst showControls = false;\n\nconst controls = [\n  {id: 'left', key: 'A', code: 'KeyA'},\n  {id: 'right', key: 'D', code: 'KeyD'},\n  {id: 'up', key: 'W', code: 'KeyW'},\n  {id: 'down', key: 'S', code: 'KeyS'},\n  {id: 'poop', key: 'P', code: 'KeyP'},\n  {id: 'space', key: 'Space', code: 'Space'},\n  {id: 'reload', key: 'R', code: 'KeyR'},\n];\n\nconst controlIndex = indexBy((c) => c.code, controls);\n\nexport class Controls {\n  constructor({onPress}, rootElement, additionalControls) {\n    this.pressing = {};\n    this.additionalControls = additionalControls || [];\n    const keydown = (e) => {\n      if (controlIndex[e.code]) {\n        this.pressing[controlIndex[e.code].id] = e.type === 'keydown';\n      }\n    };\n    window.addEventListener('keydown', keydown);\n    window.addEventListener('keyup', keydown);\n    window.addEventListener('keypress', (e) => {\n      if (controlIndex[e.code]) {\n        onPress(controlIndex[e.code].id);\n      }\n    });\n\n    if (showControls) {\n      // for (const {id} of controls) {\n      //   new ControlButton(rootElement, id, this.pressing);\n      // }\n\n      new ControlCircle(rootElement, this.pressing, 400);\n    }\n  }\n  getPressing() {\n    let pressing = this.pressing;\n    this.additionalControls.forEach((control) => {\n      pressing = control.getPressing(pressing);\n    });\n    return pressing;\n  }\n}\n","const gamepadSettings = {\n  spaceIndex: 0,\n  jumpIndex: 1,\n  poopIndex: 2,\n  xAxisIndex: 0,\n  yAxisIndex: 1,\n};\n\nexport class GamepadControls {\n  constructor({onPress}) {\n    this.onPress = onPress;\n    this.lastGamepadState = {};\n  }\n  getGamepad() {\n    const gamepads = navigator.getGamepads();\n    for (let index = 0; index < gamepads.length; index++) {\n      if (gamepads[index] != null && gamepads[index].connected) {\n        return gamepads[index];\n      }\n    }\n    return null;\n  }\n  getGamepadState() {\n    const gamepad = this.getGamepad();\n    if (gamepad == null) return undefined;\n\n    return {\n      up:\n        gamepad.axes[gamepadSettings.yAxisIndex] <= -0.5 ||\n        gamepad.buttons[gamepadSettings.jumpIndex].pressed,\n      down: gamepad.axes[gamepadSettings.yAxisIndex] >= 0.5,\n      left: gamepad.axes[gamepadSettings.xAxisIndex] <= -0.25,\n      right: gamepad.axes[gamepadSettings.xAxisIndex] >= 0.25,\n      space: gamepad.buttons[gamepadSettings.spaceIndex].pressed,\n      poop: gamepad.buttons[gamepadSettings.poopIndex].pressed,\n    };\n  }\n  getPressing(incomingPressing) {\n    const gamepadState = this.getGamepadState();\n    if (!gamepadState) return incomingPressing;\n\n    // Merge the incoming pressing state with the gamepad state\n    const pressing = {...incomingPressing};\n\n    const gamepadPress = (id) => {\n      pressing[id] = true;\n      if (!this.lastGamepadState[id]) {\n        this.onPress(id);\n      }\n    };\n\n    if (gamepadState.up) gamepadPress('up');\n    if (gamepadState.down) gamepadPress('down');\n    if (gamepadState.left) gamepadPress('left');\n    if (gamepadState.right) gamepadPress('right');\n    if (gamepadState.space) gamepadPress('space');\n    if (gamepadState.poop) gamepadPress('poop');\n\n    this.lastGamepadState = gamepadState;\n    return pressing;\n  }\n}\n","const useTemplate = (str) => `\nconst GRASS = 'g';\nconst POOP = 'p';\nconst STONE = 's';\nconst WOMBAT = 'w';\nconst MAGMA = 'm';\nconst JEWEL = 'j';\nconst KOALA = 'k';\nconst WATER = 'a';\nconst POLYMER = 'o';\nconst NPC = 'n';\n\nconst say = game.dialog.say.bind(game.dialog);\nconst choice = game.dialog.choice.bind(game.dialog);\nconst playSound = game.playSound.bind(game);\nconst pauseSound = game.pauseSound.bind(game);\nconst loopSound = game.loopSound.bind(game);\n\nconst numCollected = game.numCollected.bind(game);\nconst setCollectible = game.setCollectible.bind(game);\n\nconst setPoop = game.setPoop.bind(game);\nconst setHealth = game.setHealth.bind(game);\n\nconst moveTile = game.moveTile.bind(game);\nconst addTile = game.addTile.bind(game);\nconst isEmpty = game.isEmpty.bind(game);\nconst getTile = game.getTile.bind(game);\nconst damage = game.damage.bind(game);\nconst changeTileType = game.changeTileType.bind(game);\n\nconst you = game.you;\nconst poop = game.poop;\nconst health = game.health;\n\n${str}`;\n\nexport const compile = (str) => {\n  if (!str) return;\n  try {\n    return new Function('game', useTemplate(str));\n  } catch (e) {\n    console.error(`Invalid logic: ${str}`);\n    console.error(e);\n    return;\n  }\n};\n","import {\n  Dialog,\n  Hud,\n  TileElement,\n  VersionElement,\n  WorldElement,\n} from './elements';\nimport {isValidUrl} from '../utils/isValidUrl';\n\nconst MAX_RENDER_DIST = 32; // don't move things more than this many tiles away\nconst MOVEMENT_THRESHOLD = 0.1; // don't move you or the viewport if you move less than this much of a tile\n\nconst pairs = [\n  [Math.floor, Math.floor],\n  [Math.ceil, Math.floor],\n  [Math.floor, Math.ceil],\n  [Math.ceil, Math.ceil],\n];\n\nconst dirs = [\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n  [0, -1],\n];\n\nexport class Game {\n  constructor(youPos, world, config, typeIndex, rootElement) {\n    this.rootElement = rootElement;\n    this.worldElement = new WorldElement(rootElement);\n    this.hud = new Hud(rootElement);\n    this.dialog = new Dialog(rootElement);\n    this.sounds = this.buildSounds(config, typeIndex);\n\n    new VersionElement(rootElement);\n\n    this.world = {};\n    for (const key in world) this.addTile(world[key]);\n\n    this.typeIndex = typeIndex;\n    this.you = {\n      x: 0,\n      y: 0,\n      xs: 0,\n      ys: 0,\n      dirX: 1,\n      dirY: 0,\n      type: typeIndex.w,\n      ...youPos,\n    };\n    this.you.el = new TileElement(this.you, this.worldElement);\n    for (const key of ['x', 'y', 'dirX', 'dirY']) {\n      this.you['p' + key] = this.you[key];\n    }\n    this.collectibles = {};\n    this.frame = 0;\n\n    // these can all be overridden by config\n    this.digSpeed = 0.07;\n    this.eatSpeed = 0.05;\n    this.gravity = 0.005;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.poop = 50;\n    this.maxPoop = 10;\n    this.jumpPower = 0.11;\n    this.moveSpeed = 0.02;\n    this.moveDeceleration = 0.3;\n    this.fallDamageMin = 0.2;\n    this.fallDamageMult = 100;\n    this.swimPower = 0.005;\n    this.waterDrag = 0.1;\n    this.airDrag = 0.001;\n\n    for (const x in config) {\n      if (!isNaN(config[x])) this[x] = Number(config[x]); // because editing them turns them into strings, yayyyy\n    }\n\n    this.setHealth(this.health);\n    this.setPoop(this.poop);\n    this.you.el.update(this.you);\n    this.worldElement.update(this.you);\n  }\n  buildSounds(config, typeIndex) {\n    const sounds = {};\n\n    Object.values(typeIndex)\n      .filter((type) => type.sound)\n      .forEach((type) => (sounds[type.id] = new Audio(type.sound)));\n\n    const soundSettingSuffix = 'Sound';\n    Object.keys(config)\n      .filter((key) => key.endsWith(soundSettingSuffix) && config[key])\n      .forEach((key) => {\n        const soundName = key.substring(\n          0,\n          key.length - soundSettingSuffix.length\n        );\n        sounds[soundName] = new Audio(config[key]);\n      });\n\n    return sounds;\n  }\n  playSound(sound) {\n    if (this.sounds[sound] === undefined && isValidUrl(sound)) {\n      this.sounds[sound] = new Audio(sound);\n    }\n    this.sounds[sound]?.play();\n  }\n  pauseSound(sound) {\n    this.sounds[sound]?.pause();\n  }\n  loopSound(sound) {\n    this.playSound(sound);\n    if (this.sounds[sound]) this.sounds[sound].loop = true;\n  }\n  iterate(pressing) {\n    this.moveWombat(pressing);\n    this.iterateTiles();\n    this.frame++;\n  }\n  addTile(tile) {\n    this.world[`${tile.x}_${tile.y}`] = {\n      ...tile,\n      el: new TileElement(tile, this.worldElement),\n    };\n  }\n  deleteTile(tile) {\n    tile.el.destroy();\n    delete this.world[`${tile.x}_${tile.y}`];\n  }\n  changeTileType(tile, type) {\n    tile.type = type;\n    delete tile.hp;\n    tile.el.setBackground(type);\n  }\n  moveWombat(pressing) {\n    const {you, world} = this;\n    const lastSwimBlock = you.swimBlock;\n\n    you.isPushing = false;\n    you.isWalking = false;\n    you.isDigging = false;\n\n    if (this.health <= 0) {\n      if (pressing.reload) location.reload();\n      return;\n    }\n\n    if (pressing.left || pressing.right || pressing.up || pressing.down) {\n      you.dirX = 0;\n      you.dirY = 0;\n    }\n    if (pressing.left) {\n      you.xs -= you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX--;\n      you.isWalking = true;\n    }\n    if (pressing.right) {\n      you.xs += you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX++;\n      you.isWalking = true;\n    }\n    if (pressing.up) {\n      if (you.swimBlock) you.ys -= this.swimPower;\n      else if (!you.isJumping && !you.ys) {\n        you.ys -= this.jumpPower;\n        you.isJumping = true;\n      }\n      you.dirY--;\n    }\n    if (pressing.down) {\n      if (you.swimBlock) you.ys += this.swimPower;\n      you.dirY++;\n    }\n\n    you.x += you.xs;\n    you.xs *= 1 - (you.swimBlock ? this.waterDrag : this.moveDeceleration);\n\n    you.y += you.ys;\n    you.ys *= 1 - (you.swimBlock ? this.waterDrag : this.airDrag);\n    you.ys += this.gravity * (1 - (you.swimBlock?.type.density || 0));\n\n    const seen = {};\n    for (const [fx, fy] of pairs) {\n      const key = fx(you.x) + '_' + fy(you.y);\n      if (seen[key] || !world[key]) continue;\n      seen[key] = true;\n      this.resolveCollision(world[key]);\n    }\n\n    let damage = 0;\n    delete you.swimBlock;\n    for (const [fx, fy] of pairs) {\n      const block = world[fx(you.x) + '_' + fy(you.y)];\n      if (!block) continue;\n      if (block.type.collectible) {\n        this.collect(block.type.id);\n        return this.deleteTile(block);\n      }\n      if (block.type.healing < 0) {\n        damage = Math.max(damage, -block.type.healing);\n      }\n      if (block.type.moveStyle === 'liquid') you.swimBlock = block;\n    }\n    if (you.swimBlock && you.swimBlock !== lastSwimBlock) {\n      this.playSound(you.swimBlock.type.id);\n    }\n    if (damage) this.setHealth(this.health - damage);\n\n    if (pressing.space) {\n      you.isDigging = true;\n      const angle = Math.atan2(you.dirY, you.dirX);\n      const x = Math.round(you.x + Math.cos(angle));\n      const y = Math.round(you.y + Math.sin(angle));\n      const b = this.getTile(x, y);\n      if (b?.type.edible) {\n        this.damage(b, this.eatSpeed);\n        this.setHealth(this.health + b.type.healing * this.eatSpeed);\n        this.setPoop(this.poop + b.type.makePoop * this.eatSpeed);\n        this.playSound(b.type.id);\n      }\n      if (b?.type.diggable) {\n        this.damage(b, this.digSpeed);\n      }\n    }\n\n    if (\n      Math.abs(you.x - you.px) > MOVEMENT_THRESHOLD ||\n      Math.abs(you.y - you.py) > MOVEMENT_THRESHOLD ||\n      you.dirX !== you.pdirX ||\n      you.dirY !== you.pdirY ||\n      you.isDigging !== you.pIsDigging ||\n      you.isJumping !== you.pIsJumping ||\n      you.isPushing !== you.pIsPushing ||\n      you.isWalking !== you.pIsWalking\n    ) {\n      you.el.update(you);\n      this.worldElement.update(you);\n\n      you.px = you.x;\n      you.py = you.y;\n      you.pdirX = you.dirX;\n      you.pdirY = you.dirY;\n      you.pIsDigging = you.isDigging;\n      you.pIsJumping = you.isJumping;\n      you.pIsPushing = you.isPushing;\n      you.pIsWalking = you.isWalking;\n    }\n  }\n  // returns true if block is destroyed\n  damage(block, amount) {\n    if (!block?.type.hp) return;\n    if (block.hp === undefined) block.hp = block.type.hp;\n\n    block.hp -= amount;\n\n    if (block.hp <= 0) {\n      if (block.type.dropsLoot) {\n        this.changeTileType(block, this.typeIndex[block.type.dropsLoot]);\n      } else this.deleteTile(block);\n\n      return true;\n    }\n  }\n  resolveCollision(block) {\n    const {you} = this;\n    if (block.type.collectible || block.type.moveStyle === 'liquid') return;\n\n    if (block.type.healing < 0) {\n      this.setHealth(this.health + Number(block.type.healing));\n      this.playSound(block.type.id);\n      you.y -= 0.1;\n    }\n\n    if (Math.abs(you.x - block.x) > Math.abs(you.y - block.y)) {\n      const dx = block.x < you.x ? -1 : 1;\n      if (!you.isJumping && you.ys === this.gravity) {\n        you.isPushing = true;\n        if (block.type.movable && this.isEmpty(block.x + dx, block.y)) {\n          this.moveTile(block.x, block.y, dx, 0);\n        }\n      } else {\n        you.x = block.x + (you.x < block.x ? -1 : 1);\n      }\n      you.xs = 0;\n      you.isWalking = false;\n    } else {\n      if (you.y < block.y) you.isJumping = false;\n      you.y = block.y + (you.y < block.y ? -1 : 1);\n\n      // fall damage\n      if (you.ys > this.fallDamageMin) {\n        const damage = (you.ys - this.fallDamageMin) * this.fallDamageMult;\n        this.setHealth(this.health - damage);\n        this.playSound('fallDamage');\n\n        const blockDamage = Math.min(\n          damage,\n          block.hp || Infinity,\n          block.type.hp || Infinity\n        );\n        if (this.damage(block, damage)) {\n          you.ys /= 1 + blockDamage;\n          return;\n        }\n      }\n      you.ys = 0;\n    }\n  }\n  getTile(x, y) {\n    return this.world[`${x}_${y}`];\n  }\n  isEmpty(x, y) {\n    return !this.getTile(x, y);\n  }\n  badGuyCanWalkOn(x, y) {\n    const t = this.getTile(x, y);\n    return t && t.type.moveStyle !== 'liquid';\n  }\n  moveTile(x, y, dx, dy) {\n    const key = `${x}_${y}`;\n    const b = this.world[key];\n    delete this.world[key];\n    b.x += dx;\n    b.y += dy;\n    this.world[`${b.x}_${b.y}`] = b;\n    b.el.update(b);\n  }\n  iterateTiles() {\n    for (const key in this.world) {\n      const b = this.world[key];\n      if (\n        !b.type.moveDelay ||\n        this.frame % b.type.moveDelay > 0 ||\n        Math.abs(this.you.x - b.x) > MAX_RENDER_DIST ||\n        Math.abs(this.you.y - b.y) > MAX_RENDER_DIST\n      )\n        continue;\n\n      if (this.isEmpty(b.x, b.y + 1)) {\n        this.moveTile(b.x, b.y, 0, 1);\n      } else if (b.type.moveStyle === 'liquid') {\n        const left = this.isEmpty(b.x - 1, b.y);\n        const right = this.isEmpty(b.x + 1, b.y);\n        if (left && right) {\n          this.moveTile(b.x, b.y, Math.random() < 0.5 ? 1 : -1, 0);\n        } else if (left) {\n          this.moveTile(b.x, b.y, -1, 0);\n        } else if (right) {\n          this.moveTile(b.x, b.y, 1, 0);\n        }\n      } else if (b.type.moveStyle === 'patrol') {\n        if (!b.dirX) b.dirX = 1;\n        if (\n          this.isEmpty(b.x + b.dirX, b.y) &&\n          this.badGuyCanWalkOn(b.x + b.dirX, b.y + 1)\n        ) {\n          this.moveTile(b.x, b.y, b.dirX, 0);\n        } else {\n          b.dirX *= -1;\n        }\n      }\n\n      // special rules for magma\n      if (b.type.id === 'm') {\n        let touchingWater = false;\n        for (const [dx, dy] of dirs) {\n          const block = this.getTile(b.x + dx, b.y + dy);\n          if (block && (block.type.hp || block.type.id === 'a')) {\n            if (block.type.id === 'a') touchingWater = true;\n            this.deleteTile(block);\n          }\n        }\n        if (touchingWater) {\n          // if lava touches water, it turns to stone\n          this.changeTileType(b, this.typeIndex.s);\n        }\n      }\n    }\n  }\n  setHealth(health) {\n    this.health = Math.max(0, Math.min(this.maxHealth, health));\n    this.hud.healthBar.update(\n      Math.ceil(this.health),\n      this.maxHealth,\n      this.health > 30 ? 'green' : 'red'\n    );\n    if (health <= 0) {\n      this.playSound('gameOver');\n      this.rootElement.innerHTML +=\n        '<div class=\"youDead\"><h1>you dead</h1><h2>press R to try again</h2></div>';\n    }\n  }\n  numCollected(id) {\n    return this.collectibles[id] || 0;\n  }\n  setCollectible(typeId, amount) {\n    this.collectibles[typeId] = amount;\n    this.hud.updateCounter(this.typeIndex[typeId], amount);\n  }\n  collect(typeId) {\n    this.setCollectible(typeId, this.numCollected(typeId) + 1);\n    this.playSound(typeId);\n  }\n  setPoop(poop) {\n    this.poop = Math.max(0, Math.min(this.maxPoop, poop));\n    this.hud.poopBar.update(Math.floor(this.poop), this.maxPoop, 'saddleBrown');\n  }\n  makePoop() {\n    if (this.poop < 1) return;\n    const {you, world, typeIndex} = this;\n    const angle = Math.atan2(you.dirY, you.dirX) + Math.PI;\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    if ((x !== you.x || y !== you.y) && !world[`${x}_${y}`]) {\n      this.addTile({x, y, type: typeIndex.p});\n      this.setPoop(this.poop - 1);\n      this.playSound('p');\n    }\n  }\n  updateViewport() {\n    this.worldElement.update(this.you);\n  }\n  interact() {\n    const {you} = this;\n    const angle = Math.atan2(you.dirY, you.dirX);\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    this.getTile(x, y)?.onSpace?.(this);\n  }\n}\n","export const isValidUrl = (urlString) => {\n  const urlPattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // validate protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // validate domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // validate OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // validate port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // validate query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  ); // validate fragment locator\n  return !!urlPattern.test(urlString);\n};\n","import {defaultGameConfig, defaultTileTypes} from '../defaults';\nimport {defaultWorldId, loadItem} from '../firebase';\nimport {isGuid} from '../utils';\nimport {mergeDeepLeft} from '../utils/mergeDeepLeft';\nimport {compile} from './compile';\nimport {Game} from './Game';\n\nexport const load = async (rootElement) => {\n  let hashConfig;\n  if (location.hash.length > 1) {\n    try {\n      hashConfig = JSON.parse(atob(location.hash.slice(1)));\n    } catch (e) {\n      console.log('bad hash', e);\n    }\n  }\n\n  const worldId = isGuid(hashConfig?.worldId)\n    ? hashConfig.worldId\n    : defaultWorldId;\n\n  const w = await loadItem(`worlds/${worldId}`);\n\n  const {world} = w;\n  const tileTypes = mergeDeepLeft(w.tileTypes, defaultTileTypes);\n  const gameConfig = mergeDeepLeft(w.gameConfig, defaultGameConfig);\n\n  const typeIndex = {};\n  let you;\n  for (const type of Object.values(tileTypes)) {\n    typeIndex[type.id] = type;\n  }\n  for (const key in world) {\n    const {x, y, tileType, onSpace} = world[key];\n    if (tileType === 'w') {\n      you = {x, y};\n      delete world[key];\n    } else if (typeIndex[tileType]) {\n      world[key] = {x, y, type: typeIndex[tileType], onSpace: compile(onSpace)};\n    } else {\n      delete world[key];\n    }\n  }\n\n  if (hashConfig?.x !== undefined && hashConfig?.y !== undefined) {\n    you.x = hashConfig.x;\n    you.y = hashConfig.y;\n  }\n\n  return new Game(you, world, gameConfig, typeIndex, rootElement);\n};\n","// export const assocPath = ([first, ...rest], val, obj) => {\n//   const copy = Array.isArray(obj) ? [...obj] : {...obj};\n//   copy[first] = rest.length ? assocPath(rest, val, copy[first]) : val;\n//   return copy;\n// };\n\nexport const dissoc = (key, obj) => {\n  const copy = {...obj};\n  delete copy[key];\n  return copy;\n};\n\nexport const guid = () =>\n  Date.now().toString(36) + ':' + Math.random().toString(36).slice(2);\n\nexport const isGuid = (str) => /^[0-9a-z]{8,}:[0-9a-z]+$/.test(str);\n\nexport const groupBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) {\n    const key = func(el);\n    (res[key] = res[key] || []).push(el);\n  }\n  return res;\n};\n\nexport const indexBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) res[func(el)] = el;\n  return res;\n};\n\nexport const objToArr = (obj = {}) =>\n  Object.entries(obj).map(([key, el]) => ({key, ...el}));\n\nexport const debounce = (func, delay) => {\n  let timeout;\n  const f = (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\nexport const throttle = (func, delay) => {\n  let timeout;\n  let running = false;\n  let runAgainArgs;\n  const f = (...args) => {\n    if (running) {\n      runAgainArgs = args;\n      return;\n    }\n    running = true;\n    timeout = setTimeout(() => {\n      func(...args);\n      running = false;\n      if (runAgainArgs) {\n        f(...runAgainArgs);\n      }\n      runAgainArgs = undefined;\n    }, delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\n// const memoize = (func) => {\n//   const cache = {};\n//   return (...args) => {\n//     const key = JSON.stringify(args);\n//     if (cache[key] === undefined) cache[key] = func(...args);\n//     return cache[key];\n//   };\n// };\n","export const getBackground = (type, prop = 'image') => {\n  const url = type?.[prop] || type?.image;\n  return url ? `no-repeat center/contain url(${url})` : type?.color;\n};\n","export const mergeDeepLeft = (a, b) => {\n  if (a === undefined) return b;\n  if (b === undefined) return a;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const result = {};\n    for (const key in {...a, ...b}) {\n      result[key] = mergeDeepLeft(a[key], b[key]);\n    }\n    return result;\n  }\n  return a;\n};\n"],"names":["defaultGameConfig","airDrag","digSpeed","eatSpeed","fallDamageMin","fallDamageMult","fallDamageSound","gameOverSound","gravity","health","jumpPower","maxHealth","maxPoop","moveDeceleration","moveSpeed","poop","swimPower","waterDrag","defaultTileTypes","color","diggable","edible","healing","hp","id","image","label","makePoop","order","sound","density","movable","moveDelay","walkingImage","pushingImage","jumpingImage","diggingImage","crouchingImage","moveStyle","collectible","dropsLoot","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","auth","getAuth","dbRef","ref","defaultWorldId","update","updates","onError","_update","e","console","error","message","location","host","window","x","loadItem","key","get","child","val","listen","pathStr","onChange","r","onValue","snapshot","off","logIn","email","pwd","signInWithEmailAndPassword","listenUser","onAuthStateChanged","logOut","signOut","game","controls","toChunkCoords","y","Math","floor","Element","this","el","document","createElement","remove","Chunk","parentElement","classList","add","append","shouldShow","abs","title","isShowing","style","display","WorldElement","rootElement","chunks","you","chunkX","chunkY","updateVisibility","cx","round","innerWidth","cy","innerHeight","transform","body","backgroundPosition","TileElement","tile","worldElement","setBackground","type","imageProp","background","getBackground","dirX","dirY","isJumping","isWalking","isPushing","isDigging","angle","atan2","PI","flip","pImage","getChunk","BarElement","valueElement","value","maxValue","width","innerText","CollectibleCounter","innerHTML","valueEl","querySelector","Hud","healthBar","poopBar","counters","VersionElement","packageJSON","Dialog","div","hide","text","choices","choiceIndex","render","isOpen","action","push","length","map","i","join","renderChoices","controlIndex","indexBy","c","code","Controls","additionalControls","onPress","pressing","keydown","addEventListener","forEach","control","getPressing","gamepadSettings","GamepadControls","lastGamepadState","gamepads","navigator","getGamepads","index","connected","gamepad","getGamepad","up","axes","buttons","pressed","down","left","right","space","incomingPressing","gamepadState","getGamepadState","gamepadPress","compile","str","Function","useTemplate","pairs","ceil","dirs","Game","youPos","world","config","typeIndex","hud","dialog","sounds","buildSounds","addTile","xs","ys","w","collectibles","frame","isNaN","Number","setHealth","setPoop","Object","values","filter","Audio","soundSettingSuffix","keys","endsWith","soundName","substring","urlString","undefined","RegExp","test","play","pause","playSound","loop","moveWombat","iterateTiles","destroy","lastSwimBlock","swimBlock","reload","seen","fx","fy","resolveCollision","damage","block","collect","deleteTile","max","cos","sin","b","getTile","px","py","pdirX","pdirY","pIsDigging","pIsJumping","pIsPushing","pIsWalking","amount","changeTileType","dx","isEmpty","moveTile","blockDamage","min","Infinity","t","dy","random","badGuyCanWalkOn","touchingWater","s","typeId","updateCounter","setCollectible","numCollected","p","onSpace","load","hash","hashConfig","JSON","parse","atob","slice","log","worldId","isGuid","tileTypes","mergeDeepLeft","gameConfig","tileType","isPaused","hasFocus","opacity","controlState","iterate","requestAnimationFrame","init","hasChoices","choose","next","interact","updateViewport","dissoc","obj","copy","guid","Date","now","toString","func","arr","res","objToArr","entries","debounce","delay","timeout","f","args","clearTimeout","setTimeout","cancel","throttle","runAgainArgs","running","prop","url","a","result"],"sourceRoot":""}