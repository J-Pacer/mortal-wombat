{"version":3,"file":"static/js/303.f0d4f760.chunk.js","mappings":"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","sources":["hooks/useUserIndex.js","hooks/useCoords.js","hooks/useLocationHash.js","hooks/useCursors.js","Components/common/Pane.js","hooks/useStatePersist.js","Components/ErrorBanner.js","Components/Login.js","Components/Toolbar.js","utils/saveTile.js","utils/timeAgo.js","Components/Cursors.js","Components/WorldEditor.js","Components/Nav.js","Components/common/FormThing.js","Components/TileTypeEditor.js","Components/GameConfig.js","Components/HereNow.js","Components/MyWorlds.js","utils/worldToCanvas.js","Components/Stats.js","Components/TileLogic.js","Components/App.js","utils/makeButtons.js","hooks/useErrors.js","hooks/useUser.js","hooks/useTileTypes.js","hooks/useWorld.js","editorMain.js","firebase.js","utils.js","utils/getBackground.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {indexBy} from '../utils';\nimport {listen} from '../firebase';\n\nconst indexUsers = (users) => indexBy((u) => u.email, Object.values(users));\n\nexport const useUserIndex = (user, onError) => {\n  const [userIndex, setUserIndex] = useState({});\n  useEffect(\n    () => listen('users', (users) => setUserIndex(indexUsers(users)), onError),\n    [user]\n  );\n  return userIndex;\n};\n","import {useEffect, useState} from 'react';\n\nconst mapping = {\n  KeyS: 'down',\n  KeyA: 'left',\n  KeyW: 'up',\n  KeyD: 'right',\n  ArrowUp: 'up',\n  ArrowDown: 'down',\n  ArrowLeft: 'left',\n  ArrowRight: 'right',\n};\n\nconst MOVE_AMOUNT = 4;\n\nexport const useCoords = (initialX = 0, initialY = 0) => {\n  const [xCoord, setXCoord] = useState(initialX);\n  const [yCoord, setYCoord] = useState(initialY);\n\n  useEffect(() => {\n    const onkeyDown = (e) => {\n      if (e.target !== document.body) return;\n      const dir = mapping[e.code];\n      if (dir === 'up') setYCoord((y) => y - MOVE_AMOUNT);\n      if (dir === 'down') setYCoord((y) => y + MOVE_AMOUNT);\n      if (dir === 'left') setXCoord((x) => x - MOVE_AMOUNT);\n      if (dir === 'right') setXCoord((x) => x + MOVE_AMOUNT);\n    };\n    window.addEventListener('keydown', onkeyDown);\n    return () => {\n      window.removeEventListener('keydown', onkeyDown);\n    };\n  }, []);\n\n  return {xCoord, yCoord, setXCoord, setYCoord};\n};\n","import {useEffect} from 'react';\nimport {debounce, isGuid} from '../utils';\n\nconst setHash = debounce((...args) => {\n  location.hash = args.join('/');\n}, 1000);\n\nexport const useLocationHash = ({\n  worldId,\n  xCoord,\n  yCoord,\n  scale,\n  setWorldId,\n  setXCoord,\n  setYCoord,\n  setScale,\n}) => {\n  useEffect(() => {\n    setHash(worldId, xCoord, yCoord, scale);\n    return setHash.cancel;\n  }, [worldId, scale, xCoord, yCoord]);\n\n  useEffect(() => {\n    const onHashChange = () => {\n      const [id, x, y, sc] = location.hash.slice(1).split('/');\n      if ((!id || isGuid(id)) && [x, y, sc].every((p) => !isNaN(p))) {\n        setWorldId(id);\n        setXCoord(Number(x));\n        setYCoord(Number(y));\n        setScale(Number(sc));\n      } else {\n        console.log('bad hash');\n        location.hash = [worldId || '', xCoord, yCoord, scale].join('/');\n      }\n    };\n    onHashChange();\n    window.addEventListener('hashchange', onHashChange);\n    return () => {\n      window.removeEventListener('hashchange', onHashChange);\n    };\n  }, []);\n};\n","import {serverTimestamp} from 'firebase/database';\nimport {useEffect, useState} from 'react';\nimport {listen, update} from '../firebase';\nimport {guid, throttle} from '../utils';\n\nexport const sessionTimeOut = 15 * 1000;\nexport const sessionId = guid();\n\nexport const getLatestTimestamp = (cursors) => {\n  let latestTimestamp = 0;\n  for (const key in cursors) {\n    latestTimestamp = Math.max(latestTimestamp, cursors[key].tstamp);\n  }\n  return latestTimestamp;\n};\n\nconst cullCursors = (cursors, worldId, onError) => {\n  const culledCursors = {};\n  const latestTimestamp = getLatestTimestamp(cursors);\n  for (const key in cursors) {\n    if (latestTimestamp - cursors[key].tstamp > sessionTimeOut) {\n      culledCursors[`worlds/${worldId}/cursors/${key}`] = null;\n    }\n  }\n  update(culledCursors, onError);\n};\n\nexport const useCursors = (onError, worldId) => {\n  const [cursors, setCursors] = useState({});\n  useEffect(() => {\n    if (worldId) {\n      return listen(`worlds/${worldId}/cursors`, setCursors, onError);\n    }\n  }, [worldId]);\n\n  useEffect(() => {\n    if (Math.random() < 0.01) {\n      cullCursors(cursors, worldId, onError);\n    }\n  }, [cursors, worldId]);\n  return cursors;\n};\n\nexport const setCursor = throttle(\n  (user, mouseX, mouseY, worldId, xCoord, yCoord, scale, onError) => {\n    if (worldId) {\n      update(\n        {\n          [`worlds/${worldId}/cursors/${sessionId}`]: {\n            user: user.email,\n            mouseX,\n            mouseY,\n            left: xCoord - innerWidth / scale / 2,\n            top: yCoord - innerHeight / scale / 2,\n            width: innerWidth / scale,\n            height: innerHeight / scale,\n            tstamp: serverTimestamp(),\n          },\n        },\n        onError\n      );\n    }\n  },\n  500\n);\n","import './pane.css';\n\nexport const Pane = ({className, hide, label, children}) => (\n  <div className={`pane ${className}`}>\n    <div className=\"paneHeader\">\n      <a onClick={hide}>\n        <i className=\"fa-solid fa-x\"></i>\n      </a>\n      <strong>{label}</strong>\n    </div>\n    <div className=\"paneBody\">{children}</div>\n  </div>\n);\n","import {useEffect, useState} from 'react';\n\nconst parseJSON = (str, defaultVal) => {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    console.error(e);\n    return defaultVal;\n  }\n};\n\nexport const useStatePersist = (key, initial) => {\n  const [val, setVal] = useState(\n    localStorage[key] === undefined\n      ? initial\n      : parseJSON(localStorage[key], initial)\n  );\n\n  useEffect(() => {\n    localStorage[key] = JSON.stringify(val);\n  }, [val]);\n\n  return [val, setVal];\n};\n","import './errorBanner.css';\n\nexport const ErrorBanner = ({errors, clearError}) =>\n  Object.keys(errors).length > 0 && (\n    <div className=\"errorBanner\">\n      {Object.entries(errors).map(([key, err]) => (\n        <div key={key}>\n          {err} <a onClick={() => clearError(key)}>[x]</a>\n        </div>\n      ))}\n    </div>\n  );\n","import {useState} from 'react';\nimport {logIn} from '../firebase';\nimport './login.css';\n\nexport const Login = ({onError}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <div style={{width: 300, margin: '50px auto'}}>\n      <form\n        className=\"login\"\n        onSubmit={async (e) => {\n          e.preventDefault();\n          try {\n            await logIn(email, password);\n          } catch (e) {\n            onError(e.message);\n          }\n        }}\n      >\n        {/* <h1>Log In</h1> */}\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button style={{width: '100%'}}>Log In</button>\n      </form>\n\n      {/* <div style={{margin: '30px 0'}}>or</div>\n\n      <form\n        className=\"login\"\n        onSubmit={async (e) => {\n          e.preventDefault();\n          try {\n            await logIn(email, password);\n          } catch (e) {\n            onError(e.message);\n          }\n        }}\n      >\n        <h1>Register</h1>\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button>Register</button>\n      </form> */}\n    </div>\n  );\n};\n","import {getBackground} from '../utils/getBackground';\nimport './toolbar.css';\n\nexport const Toolbar = ({\n  tileTypes,\n  selectedTileTypeId,\n  setSelectedTileTypeId,\n  showTileTypeEditor,\n  setShowTileTypeEditor,\n}) => (\n  <div className=\"toolBar\">\n    <div\n      className=\"tileType\"\n      onClick={() => {\n        setShowTileTypeEditor(false);\n        setSelectedTileTypeId();\n      }}\n    >\n      <label>None</label>\n    </div>\n\n    {Object.values(tileTypes)\n      .sort((a, b) => a.order - b.order)\n      .map((type) => (\n        <div\n          key={type.label}\n          className={\n            'tileType' + (selectedTileTypeId === type.id ? ' selected' : '')\n          }\n          style={{background: getBackground(type)}}\n          title={\n            showTileTypeEditor ? '' : 'Double click to edit tile properties.'\n          }\n          onClick={() => {\n            setShowTileTypeEditor(false);\n            setSelectedTileTypeId(type.id);\n          }}\n          onDoubleClick={() =>\n            type.id && !type.id.startsWith('_') && setShowTileTypeEditor(true)\n          }\n        >\n          <label>{type.label}</label>\n        </div>\n      ))}\n  </div>\n);\n","import {getAuth} from 'firebase/auth';\nimport {serverTimestamp} from 'firebase/database';\nimport {update} from '../firebase';\n\nexport const saveTile = (worldId, tile, onError) => {\n  const user = getAuth().currentUser.email;\n  const tstamp = serverTimestamp();\n  return update(\n    {\n      [`worlds/${worldId}/world/${tile.x}_${tile.y}`]:\n        tile.tileType === '_delete' ? null : {...tile, user, tstamp},\n      [`worlds/${worldId}/lastEdited`]: tstamp,\n      [`worlds/${worldId}/lastEditedBy`]: user,\n    },\n    onError\n  );\n};\n","const times = [\n  {label: 'year', amount: 365 * 24 * 3600 * 1000},\n  {label: 'month', amount: 30 * 24 * 3600 * 1000},\n  {label: 'week', amount: 7 * 24 * 3600 * 1000},\n  {label: 'day', amount: 24 * 3600 * 1000},\n  {label: 'hour', amount: 3600 * 1000},\n  {label: 'minute', amount: 60 * 1000},\n  {label: 'second', amount: 1000},\n];\n\nexport const timeAgo = (ms) => {\n  if (isNaN(ms)) return '???';\n  for (const {label, amount} of times) {\n    if (amount <= ms) {\n      const v = Math.floor(ms / amount);\n      return `${v} ${label}${v === 1 ? '' : 's'} ago`;\n    }\n  }\n  return 'just now';\n};\n","import {Fragment} from 'react';\nimport {\n  getLatestTimestamp,\n  sessionId,\n  sessionTimeOut,\n} from '../hooks/useCursors';\n\nexport const CSS_SIZE = 32;\n\nexport const Cursors = ({cursors, userIndex, scale}) => {\n  const latestTimestamp = getLatestTimestamp(cursors);\n  return Object.entries(cursors).map(\n    ([key, {user, left, top, width, height, tstamp, mouseX, mouseY}]) => {\n      if (key === sessionId || latestTimestamp - tstamp > sessionTimeOut)\n        return null;\n\n      const opacity = 1 - (latestTimestamp - tstamp) / sessionTimeOut;\n      return (\n        <Fragment key={key}>\n          <div\n            className=\"cursorView\"\n            style={{\n              transform: `translate(${left * CSS_SIZE}px, ${top * CSS_SIZE}px)`,\n              width: width * CSS_SIZE,\n              height: height * CSS_SIZE,\n              opacity,\n            }}\n          >\n            <span style={{fontSize: (80 * CSS_SIZE) / scale + '%'}}>\n              {userIndex[user]?.name || user}\n            </span>\n          </div>\n          {mouseX && mouseY ? (\n            <div\n              className=\"mouseCursor\"\n              style={{\n                transform: `translate(${(mouseX + 0.5) * CSS_SIZE}px, ${\n                  (mouseY + 0.5) * CSS_SIZE\n                }px) scale(${CSS_SIZE / scale}) `,\n                opacity,\n              }}\n            >\n              <i className=\"fa-solid fa-arrow-pointer\"></i>\n              <span>{userIndex[user]?.name || user}</span>\n            </div>\n          ) : null}\n        </Fragment>\n      );\n    }\n  );\n};\n","import {memo, useCallback, useMemo, useRef} from 'react';\nimport {setCursor} from '../hooks/useCursors';\nimport {indexBy, objToArr} from '../utils';\nimport {getBackground} from '../utils/getBackground';\nimport {saveTile} from '../utils/saveTile';\nimport {timeAgo} from '../utils/timeAgo';\nimport {CSS_SIZE, Cursors} from './Cursors';\nimport './worldEditor.css';\n\nconst getCoords = (e, scale, xCoord, yCoord) => ({\n  x: Math.floor((e.clientX - innerWidth / 2) / scale) + xCoord,\n  y: Math.floor((e.clientY - innerHeight / 2) / scale) + yCoord,\n});\n\nconst getTitle = (user, tstamp, userIndex) => {\n  if (!user || !tstamp) return '';\n  const name = userIndex[user]?.name || user;\n  return `Placed by ${name} ${timeAgo(Date.now() - tstamp)}`;\n};\n\nconst Tiles = ({world, tileTypeIndex, userIndex, setTileLogicCoords}) =>\n  Object.entries(world).map(([key, {x, y, tileType, user, tstamp}]) => (\n    <div\n      key={key}\n      className=\"tile\"\n      title={getTitle(user, tstamp, userIndex)}\n      style={{\n        transform: `translate(${x * CSS_SIZE}px, ${y * CSS_SIZE}px)`,\n        background: getBackground(tileTypeIndex[tileType]),\n      }}\n      onDoubleClick={() => setTileLogicCoords({x, y})}\n    />\n  ));\n\nconst TilesMemo = memo(Tiles);\n\nexport const WorldEditor = ({\n  world,\n  tileTypes,\n  selectedTileTypeId,\n  onError,\n  worldId,\n  xCoord,\n  yCoord,\n  scale,\n  user,\n  cursors,\n  userIndex,\n  tileLogicCoords,\n  setTileLogicCoords,\n}) => {\n  // using a ref is much more performant than keeping mouse coords in state\n  const ghostRef = useRef();\n\n  const tileTypeIndex = useMemo(\n    () => indexBy((t) => t.id, objToArr(tileTypes)),\n    [tileTypes]\n  );\n\n  // This checks for invalid tiles in the world and outputs them along with an update object\n  // useEffect(() => {\n  //   const badData = Object.entries(world).filter(\n  //     ([, t]) => !tileTypeIndex[t.tileType]\n  //   );\n  //   if (badData.length) {\n  //     console.log(\n  //       'This is bad data',\n  //       badData.map((p) => p[1]),\n  //       JSON.stringify(\n  //         Object.fromEntries(badData.map(([key]) => [`world/${key}`, null]))\n  //       )\n  //     );\n  //   }\n  // }, [world, tileTypeIndex]);\n\n  const onClick = (e) => {\n    const {x, y} = getCoords(e, scale, xCoord, yCoord);\n    if (e.altKey) {\n      window.open(\n        location.href.replace(/\\?.*/, '') +\n          '#' +\n          btoa(JSON.stringify({worldId, x, y})),\n        '_blank'\n      );\n      e.preventDefault();\n      return false;\n    } else {\n      const currentType = world[`${x}_${y}`]?.tileType;\n      const t = e.shiftKey ? '_delete' : selectedTileTypeId;\n      if (t && (currentType || t !== '_delete') && currentType !== t) {\n        saveTile(worldId, {x, y, tileType: t}, onError);\n      }\n    }\n  };\n\n  const onMouseMove = useCallback(\n    (e) => {\n      const {x, y} = getCoords(e, scale, xCoord, yCoord);\n      if (selectedTileTypeId) {\n        const s = ghostRef.current?.style;\n        s.transform = `translate(${x * CSS_SIZE}px, ${y * CSS_SIZE}px)`;\n        if (e.buttons) onClick(e);\n      }\n      setCursor(user, x, y, worldId, xCoord, yCoord, scale, onError);\n    },\n    [scale, worldId, xCoord, yCoord, selectedTileTypeId, user]\n  );\n\n  const cx = innerWidth / 2 - xCoord * CSS_SIZE;\n  const cy = innerHeight / 2 - yCoord * CSS_SIZE;\n\n  return (\n    <div\n      id=\"worldEditor\"\n      className=\"world\"\n      onClick={onClick}\n      onMouseMove={onMouseMove}\n    >\n      <div\n        style={{\n          transformOrigin: `${innerWidth / 2}px ${innerHeight / 2}px`,\n          transform: `scale(${scale / CSS_SIZE}) translate(${cx}px,${cy}px)`,\n        }}\n      >\n        <Cursors cursors={cursors} userIndex={userIndex} scale={scale} />\n\n        <TilesMemo {...{world, tileTypeIndex, userIndex, setTileLogicCoords}} />\n\n        {selectedTileTypeId && (\n          <div\n            ref={ghostRef}\n            className=\"ghost tile\"\n            style={{\n              background: getBackground(tileTypeIndex[selectedTileTypeId]),\n            }}\n          />\n        )}\n        {tileLogicCoords && (\n          <div\n            style={{\n              transform: `translate(${tileLogicCoords.x * CSS_SIZE}px, ${\n                tileLogicCoords.y * CSS_SIZE\n              }px)`,\n            }}\n            className=\"selected tile\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import {logOut} from '../firebase';\nimport packageJSON from '../../package.json';\n\nexport const Nav = ({user, setScale, zoomAmt, userIndex, children}) => (\n  <nav>\n    {user && (\n      <div style={{float: 'right'}}>\n        <a onClick={() => setScale((s) => Math.round(s * zoomAmt))}>\n          <i className=\"fa-solid fa-magnifying-glass-plus\"></i>\n        </a>\n        <a onClick={() => setScale((s) => Math.round(s / zoomAmt))}>\n          <i className=\"fa-solid fa-magnifying-glass-minus\"></i>\n        </a>\n        Hi, {userIndex[user.email]?.name || user.email}!\n        <a onClick={logOut}>log out</a>\n      </div>\n    )}\n    <b>MW Collabitat v{packageJSON.version}</b>\n    {children}\n  </nav>\n);\n","import {lazy, Suspense} from 'react';\n\nconst Editor = lazy(() => import('@monaco-editor/react'));\n\nconst TextField = ({value = '', onChange}) => (\n  <input type=\"text\" value={value} onChange={(e) => onChange(e.target.value)} />\n);\n\nconst NumberField = ({value = '', onChange}) => (\n  <input\n    type=\"number\"\n    value={value}\n    onChange={(e) => onChange(e.target.value)}\n  />\n);\n\nconst Checkbox = ({value = false, onChange}) => (\n  <input\n    type=\"checkbox\"\n    checked={value}\n    onChange={(e) => onChange(e.target.checked)}\n  />\n);\n\nconst Select = ({value, onChange, options}) => (\n  <select value={value} onChange={(e) => onChange(e.target.value)}>\n    <option></option>\n    {options.map(({label, value}) => (\n      <option key={label} value={value}>\n        {label}\n      </option>\n    ))}\n  </select>\n);\n\n// TODO: add code validation\nconst Code = ({value, onChange}) => (\n  <Suspense fallback=\"Loading...\">\n    <Editor\n      height={400}\n      width={800}\n      theme=\"vs-dark\"\n      defaultLanguage=\"javascript\"\n      value={value}\n      onChange={onChange}\n    />\n  </Suspense>\n);\n\nconst inputs = {\n  text: TextField,\n  number: NumberField,\n  checkbox: Checkbox,\n  select: Select,\n  code: Code,\n};\n\nexport const FormThing = ({fields, data, onChange}) =>\n  fields.map(({prop, label, type, info, show, options}) => {\n    if (show && !show(data)) return null;\n    const Field = inputs[type];\n    return (\n      <div key={prop} title={info}>\n        <label>{label}</label>\n        <Field\n          value={data?.[prop]}\n          onChange={(val) => onChange(val, prop)}\n          options={options}\n        />\n      </div>\n    );\n  });\n","import {update} from '../firebase';\nimport {objToArr} from '../utils';\nimport {FormThing} from './common/FormThing';\nimport './tileTypeEditor.css';\n\n/*\ng: grass\np: poop,\ns: stone,\nw: wombat,\nm: magma,\nj: jewel,\nk: koala,\na: water,\no: polymer\nn: npc\n\n*/\n\nconst fields = [\n  {\n    prop: 'label',\n    label: 'Label',\n    type: 'text',\n    info: 'The label you see in the tool bar below.',\n  },\n  {\n    prop: 'image',\n    label: 'Image URL',\n    type: 'text',\n    info: 'The image. uhduhhhh',\n  },\n  {\n    prop: 'sound',\n    label: 'Sound URL',\n    type: 'text',\n    info: 'URL for the sound that should be played.',\n  },\n  {\n    prop: 'color',\n    label: 'Color',\n    type: 'text',\n    info: 'The color to use if there is no image',\n  },\n  {\n    prop: 'hp',\n    label: 'HP',\n    type: 'number',\n    info: 'How much health does it have?',\n  },\n  {\n    prop: 'movable',\n    label: 'Movable',\n    type: 'checkbox',\n    info: 'Can you move it?',\n  },\n  {\n    prop: 'moveDelay',\n    label: 'Move Delay',\n    type: 'number',\n    info: 'How many frames does it wait to move? Smaller is faster.',\n  },\n  {\n    prop: 'density',\n    label: 'Density',\n    type: 'number',\n    info: 'Air density is 0. Wombat density is 1. Wombat floats when density is >1, sinks when <1.',\n    show: (data) => parseInt(data.moveDelay),\n  },\n  {\n    prop: 'moveStyle',\n    label: 'Move Style',\n    type: 'select',\n    info: 'How does it move?',\n    options: [\n      {label: 'Liquid', value: 'liquid'},\n      {label: 'Patrol', value: 'patrol'},\n    ],\n    show: (data) => parseInt(data.moveDelay),\n  },\n  {\n    prop: 'healing',\n    label: 'Healing',\n    type: 'number',\n    info: 'How much does it heal (or hurt) when you eat/touch it (per frame)?',\n  },\n  {prop: 'edible', label: 'Edible', type: 'checkbox', info: 'Can you eat it?'},\n  {\n    prop: 'makePoop',\n    label: 'Make Poop',\n    type: 'number',\n    info: 'How much poop does it make?',\n    show: (data) => data.edible,\n  },\n  {\n    prop: 'diggable',\n    label: 'Diggable',\n    type: 'checkbox',\n    info: 'Can you dig it?',\n    show: (data) => !data.edible,\n  },\n  {\n    prop: 'collectible',\n    label: 'Collectible',\n    type: 'checkbox',\n    info: 'Can you collect it?',\n    show: (data) => !data.edible && !data.movable,\n  },\n  {\n    prop: 'dropsLoot',\n    label: 'Drops Loot',\n    type: 'select',\n    info: 'What kind of loot does it drop?',\n    options: [{label: 'Jewel', value: 'j'}],\n    show: (data) => data.diggable && data.hp,\n  },\n  {\n    prop: 'order',\n    label: 'Order',\n    type: 'number',\n    info: 'The order it shows up in the toolbar below',\n  },\n];\n\nexport const TileTypeEditor = ({selectedTileTypeId, tileTypes, onError}) => {\n  const selectedTileType = objToArr(tileTypes).find(\n    (el) => el.id === selectedTileTypeId\n  );\n\n  return (\n    selectedTileType && (\n      <div className=\"tileTypeEditor\">\n        <p>\n          <span style={{color: 'orange'}}>\n            <i className=\"fa-solid fa-triangle-exclamation\"></i> WARNING\n          </span>{' '}\n          You can seriously mess up the game if you change these. Please write\n          them down and change them very carefully!\n        </p>\n        <FormThing\n          fields={fields}\n          data={selectedTileType}\n          onChange={(value, prop) => {\n            update(\n              {[`tileTypes/${selectedTileType.key}/${prop}`]: value},\n              onError\n            );\n          }}\n        />\n      </div>\n    )\n  );\n};\n","import {useEffect, useState} from 'react';\nimport {listen, update} from '../firebase';\nimport {FormThing} from './common/FormThing';\nimport './gameConfig.css';\n\nconst useConfig = (onError) => {\n  const [config, setConfig] = useState();\n  useEffect(() => listen('gameConfig', setConfig, onError), []);\n  return config;\n};\n\nconst fields = [\n  {\n    prop: 'digSpeed',\n    label: 'Wombat Digging Speed',\n    type: 'number',\n    info: 'How fast much can you dig in one frame?',\n  },\n  {\n    prop: 'eatSpeed',\n    label: 'Wombat Eating Speed',\n    type: 'number',\n    info: 'How fast much can you eat in one frame?',\n  },\n  {\n    prop: 'gravity',\n    label: 'Gravity',\n    type: 'number',\n    info: 'How strong is gravity?',\n  },\n  {\n    prop: 'health',\n    label: 'Wombat Starting Health',\n    type: 'number',\n    info: 'How much health do you start with?',\n  },\n  {\n    prop: 'maxHealth',\n    label: 'Wombat Max Health',\n    type: 'number',\n    info: 'How much health can you have?',\n  },\n  {\n    prop: 'poop',\n    label: 'Wombat Starting Poop',\n    type: 'number',\n    info: 'How much poop do you start with?',\n  },\n  {\n    prop: 'maxPoop',\n    label: 'Wombat Max Poop',\n    type: 'number',\n    info: 'How much poop can you hold?',\n  },\n  {\n    prop: 'jumpPower',\n    label: 'Wombat Jumping Power',\n    type: 'number',\n    info: 'How much jumping power do you start with?',\n  },\n  {\n    prop: 'moveSpeed',\n    label: 'Wombat Acceleration',\n    type: 'number',\n    info: 'How fast can you move?',\n  },\n  {\n    prop: 'moveDeceleration',\n    label: 'Wombat Deceleration',\n    type: 'number',\n    info: 'How fast can you slow down?',\n  },\n  {\n    prop: 'airDrag',\n    label: 'Air Drag',\n    type: 'number',\n    info: 'How much does the air slow you down?',\n  },\n  {\n    prop: 'fallDamageMin',\n    label: 'Fall Dmg Threshold',\n    type: 'number',\n    info: 'What is the minimum blocks/frame where landing hurts?',\n  },\n  {\n    prop: 'fallDamageMult',\n    label: 'Fall Dmg Multiplier',\n    type: 'number',\n    info: 'This is multiplied by (your speed - Fall Dmg Threshold) when you land to calculate the damage you take.',\n  },\n  {\n    prop: 'fallDamageSound',\n    label: 'Fall Dmg Sound',\n    type: 'text',\n    info: 'This is the URL for the sound that should be played if fall damage occurs.',\n  },\n  {\n    prop: 'swimPower',\n    label: 'Swim Power',\n    type: 'number',\n    info: 'How fast of a swimmer do you start out as?',\n  },\n  {\n    prop: 'waterDrag',\n    label: 'Water Drag',\n    type: 'number',\n    info: 'How quickly does water slow you down?',\n  },\n  {\n    prop: 'gameOverSound',\n    label: 'Game Over Sound',\n    type: 'text',\n    info: 'This is the URL for the sound that is played when the game is over.',\n  },\n];\n\nexport const GameConfig = ({onError}) => {\n  const config = useConfig(onError);\n  return (\n    <div className=\"gameConfig\">\n      <p>\n        <span style={{color: 'orange'}}>\n          <i className=\"fa-solid fa-triangle-exclamation\"></i> WARNING\n        </span>{' '}\n        You can seriously mess up the game if you change these. Please write\n        them down and change them very carefully!\n      </p>\n      <FormThing\n        fields={fields}\n        data={config}\n        onChange={(value, prop) => {\n          update({[`gameConfig/${prop}`]: value}, onError);\n        }}\n      />\n    </div>\n  );\n};\n","import {getLatestTimestamp, sessionTimeOut} from '../hooks/useCursors';\n\nexport const HereNow = ({cursors, userIndex, worldId}) => {\n  const latestTimestamp = getLatestTimestamp(cursors);\n  return Object.entries(cursors)\n    .filter((c) => latestTimestamp - c[1].tstamp < sessionTimeOut)\n    .map(([key, {user, mouseX, mouseY}]) => (\n      <div key={key} style={{margin: 5}}>\n        {userIndex[user]?.name || user}\n        {mouseX && mouseY ? (\n          <a\n            style={{margin: '0 10px'}}\n            href={`#${worldId || ''}/${mouseX}/${mouseY}/32`}\n          >\n            go\n          </a>\n        ) : null}\n      </div>\n    ));\n};\n","import {getAuth} from 'firebase/auth';\nimport {serverTimestamp} from 'firebase/database';\nimport {useEffect, useRef, useState} from 'react';\nimport {loadData, update} from '../firebase';\nimport {guid} from '../utils';\nimport {timeAgo} from '../utils/timeAgo';\nimport {worldToCanvas} from '../utils/worldToCanvas';\nimport './myWorlds.css';\n\nconst gotoWorld = (id) => {\n  location.hash = `${id}/0/0/32`;\n};\n\nconst createNewWorld = async () => {\n  const worldGuid = guid();\n\n  const worldName = prompt('Enter a name for your new world.');\n  if (!worldName) return;\n\n  await update({\n    [`worlds/${worldGuid}`]: {\n      worldName,\n      lastEdited: serverTimestamp(),\n      lastEditedBy: getAuth().currentUser.email,\n    },\n  });\n\n  gotoWorld(worldGuid);\n};\n\n// collabitat\n\nconst WorldCanvas = ({world, tileTypes}) => {\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    if (world && tileTypes) worldToCanvas(world, tileTypes, canvasRef.current);\n  }, [world, tileTypes]);\n\n  return <canvas ref={canvasRef}></canvas>;\n};\n\nconst WorldItem = ({\n  id,\n  item: {lastEdited, worldName, lastEditedBy, world},\n  userIndex,\n  tileTypes,\n  close,\n}) => (\n  <button\n    className=\"worldButton\"\n    onClick={() => {\n      gotoWorld(id);\n      close();\n    }}\n  >\n    <div className=\"canvasContainer\">\n      <WorldCanvas world={world} tileTypes={tileTypes} />{' '}\n    </div>\n    {worldName || '???'}\n    {lastEdited && (\n      <span className=\"lastEdited\">\n        last edited by{' '}\n        {(userIndex[lastEditedBy]?.name || lastEditedBy || '???') +\n          ' ' +\n          timeAgo(Date.now() - lastEdited)}\n      </span>\n    )}\n  </button>\n);\n\nconst loadWorlds = async (setWorlds) => {\n  setWorlds();\n  const {worlds} = await loadData(['worlds']);\n  setWorlds(worlds);\n};\n\nexport const MyWorlds = ({userIndex, tileTypes, close}) => {\n  const [worlds, setWorlds] = useState();\n\n  useEffect(() => {\n    loadWorlds(setWorlds);\n  }, []);\n\n  return worlds ? (\n    <div className=\"myWorlds\">\n      <div style={{float: 'right'}}>\n        <button\n          onClick={async () => {\n            await createNewWorld();\n            close();\n          }}\n        >\n          <i className=\"fa-solid fa-circle-plus\"></i> Create a New World\n        </button>\n      </div>\n      <button onClick={() => loadWorlds(setWorlds)}>\n        <i className=\"fa-solid fa-arrows-rotate\"></i> Refresh List\n      </button>\n\n      {Object.entries(worlds)\n        .sort((a, b) => b[1].lastEdited - a[1].lastEdited)\n        .map(([key, item]) => (\n          <WorldItem\n            key={key}\n            id={key}\n            item={item}\n            userIndex={userIndex}\n            tileTypes={tileTypes}\n            close={close}\n          />\n        ))}\n    </div>\n  ) : (\n    <div className=\"fa-3x\" style={{textAlign: 'center'}}>\n      <i className=\"fa-solid fa-spinner fa-spin\"></i>\n    </div>\n  );\n};\n","import {indexBy, objToArr} from '../utils';\n\nexport const worldToCanvas = (\n  world,\n  tileTypes,\n  canvas = document.createElement('canvas')\n) => {\n  const tileTypeIndex = indexBy((t) => t.id, objToArr(tileTypes));\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  for (const key in world) {\n    const {x, y} = world[key];\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n  canvas.width = maxX - minX + 1;\n  canvas.height = maxY - minY + 1;\n  const ctx = canvas.getContext('2d');\n  for (const key in world) {\n    const {x, y, tileType} = world[key];\n    ctx.fillStyle = tileTypeIndex[tileType]?.color;\n    ctx.fillRect(x - minX, y - minY, 1, 1);\n  }\n  return canvas;\n};\n","import {memo} from 'react';\nimport {indexBy, objToArr} from '../utils';\nimport {timeAgo} from '../utils/timeAgo';\n\nconst capitalize = (str) => str[0].toUpperCase() + str.slice(1);\n\nconst countBy = (arr, func) =>\n  arr.reduce((res, el) => {\n    const key = func(el);\n    res[key] = (res[key] || 0) + 1;\n    return res;\n  }, {});\n\nconst SubTable = ({heading, data, getLabel}) => (\n  <>\n    <tr>\n      <td>\n        <br />\n      </td>\n    </tr>\n    <tr>\n      <th>{heading}</th>\n    </tr>\n    {Object.entries(data)\n      .sort((a, b) => b[1] - a[1])\n      .map(([key, count]) => (\n        <tr key={key}>\n          <td>{getLabel ? getLabel(key) : key}</td>\n          <td>{count}</td>\n        </tr>\n      ))}\n  </>\n);\n\nconst stats = ({world, tileTypes, userIndex}) => {\n  const tileTypeIndex = indexBy((t) => t.id, objToArr(tileTypes));\n  const tiles = Object.values(world);\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <th>Total Tiles</th>\n          <td>{tiles.length}</td>\n        </tr>\n\n        <SubTable\n          heading=\"By Person\"\n          data={countBy(tiles, (t) => t.user)}\n          getLabel={(key) => capitalize(userIndex[key]?.name || '???')}\n        />\n\n        <SubTable\n          heading=\"By Tile Type\"\n          data={countBy(tiles, (t) => t.tileType)}\n          getLabel={(key) => capitalize(tileTypeIndex[key]?.label || '???')}\n        />\n\n        <SubTable\n          heading=\"By Date\"\n          data={countBy(tiles, (t) =>\n            t.tstamp ? timeAgo(Date.now() - t.tstamp) : '???'\n          )}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nexport const Stats = memo(stats);\n","import {saveTile} from '../utils/saveTile';\nimport {FormThing} from './common/FormThing';\n\nconst fields = [\n  {\n    prop: 'onSpace',\n    label: 'On Space',\n    type: 'code',\n    info: 'What should happen when you press space at it?',\n  },\n];\n\nexport const TileLogic = ({tile, worldId, onError}) => (\n  <>\n    <FormThing\n      fields={fields}\n      data={tile}\n      onChange={(value, prop) => {\n        saveTile(worldId, {...tile, [prop]: value}, onError);\n      }}\n    />\n  </>\n);\n","import './App.css';\nimport {useEffect, useState} from 'react';\n\nimport {useErrors} from '../hooks/useErrors';\nimport {useUser} from '../hooks/useUser';\nimport {useUserIndex} from '../hooks/useUserIndex';\nimport {useTileTypes} from '../hooks/useTileTypes';\nimport {useCoords} from '../hooks/useCoords';\nimport {useWorld} from '../hooks/useWorld';\nimport {useLocationHash} from '../hooks/useLocationHash';\nimport {setCursor, useCursors} from '../hooks/useCursors';\n\nimport {Pane} from './common/Pane';\nimport {makeButtons} from '../utils/makeButtons';\n\nimport {ErrorBanner} from './ErrorBanner';\nimport {Login} from './Login';\nimport {Toolbar} from './Toolbar';\nimport {WorldEditor} from './WorldEditor';\nimport {Nav} from './Nav';\nimport {TileTypeEditor} from './TileTypeEditor';\nimport {GameConfig} from './GameConfig';\nimport {HereNow} from './HereNow';\nimport {MyWorlds} from './MyWorlds';\nimport {Stats} from './Stats';\nimport {defaultWorldId} from '../firebase';\nimport {TileLogic} from './TileLogic';\n\nconst zoomAmt = 2;\n\nconst paneConfigs = [\n  {\n    key: 'instructions',\n    buttonLabel: 'Instructions',\n    paneLabel: 'Instructions',\n    icon: 'circle-question',\n  },\n  {\n    key: 'gameConfig',\n    buttonLabel: 'Config',\n    paneLabel: 'Game Config',\n    icon: 'toolbox',\n  },\n  {key: 'tileTypeEditor', paneLabel: 'Tile Type Editor', hideButton: true},\n  {\n    key: 'hereNow',\n    buttonLabel: 'People',\n    paneLabel: 'Editing Now',\n    icon: 'person',\n  },\n  {\n    key: 'stats',\n    buttonLabel: 'World Stats',\n    paneLabel: 'World Stats',\n    icon: 'gauge',\n  },\n  {\n    key: 'myWorlds',\n    buttonLabel: 'Worlds',\n    paneLabel: 'Worlds',\n    icon: 'earth-americas',\n  },\n];\n\nexport const App = () => {\n  const [errors, onError, clearError] = useErrors();\n\n  // local state\n  const [worldId, setWorldId] = useState(defaultWorldId);\n  const [selectedTileTypeId, setSelectedTileTypeId] = useState();\n  const {xCoord, yCoord, setXCoord, setYCoord} = useCoords(0, 0);\n  const [scale, setScale] = useState(32);\n  const [tileLogicCoords, setTileLogicCoords] = useState();\n\n  // firebase state\n  const user = useUser();\n  const userIndex = useUserIndex(user, onError);\n  const tileTypes = useTileTypes(onError);\n  const world = useWorld(onError, worldId);\n  const cursors = useCursors(onError, worldId);\n\n  // pane toggles\n  const Panes = makeButtons(paneConfigs);\n\n  useLocationHash({\n    worldId,\n    xCoord,\n    yCoord,\n    scale,\n    setWorldId,\n    setXCoord,\n    setYCoord,\n    setScale,\n  });\n\n  useEffect(() => {\n    if (user)\n      setCursor(user, null, null, worldId, xCoord, yCoord, scale, onError);\n  }, [user, worldId, xCoord, yCoord, scale]);\n\n  return (\n    <>\n      <Nav {...{user, scale, setScale, zoomAmt, userIndex}}>\n        {Object.values(Panes).map(({button}) => button)}\n      </Nav>\n\n      <ErrorBanner errors={errors} clearError={clearError} />\n\n      {user ? (\n        <div className=\"appContainer\">\n          {selectedTileTypeId &&\n            tileTypes &&\n            Panes.tileTypeEditor.show &&\n            Object.values(tileTypes).some(\n              (t) => t.id === selectedTileTypeId\n            ) && (\n              <Pane {...Panes.tileTypeEditor.paneProps}>\n                <TileTypeEditor\n                  selectedTileTypeId={selectedTileTypeId}\n                  tileTypes={tileTypes}\n                  onError={onError}\n                />\n              </Pane>\n            )}\n\n          {Panes.gameConfig.show && (\n            <Pane {...Panes.gameConfig.paneProps}>\n              <GameConfig onError={onError} />\n            </Pane>\n          )}\n\n          {worldId && Panes.hereNow.show && (\n            <Pane {...Panes.hereNow.paneProps}>\n              <HereNow\n                cursors={cursors}\n                userIndex={userIndex}\n                worldId={worldId}\n              />\n            </Pane>\n          )}\n\n          {Panes.instructions.show && (\n            <Pane {...Panes.instructions.paneProps}>\n              <p>Use the arrow keys or WASD to move around the map.</p>\n              <p>\n                Click a tile type at the bottom. Click on the map to place it.\n              </p>\n              <p>Shift+Click a tile to delete it.</p>\n              <p>\n                You can zoom in and out with{' '}\n                <i className=\"fa-solid fa-magnifying-glass-plus\"></i> and{' '}\n                <i className=\"fa-solid fa-magnifying-glass-minus\"></i> in the\n                upper right.\n              </p>\n              <p>\n                Share your URL with other editors to show them what you made.\n              </p>\n              <p>\n                To test what you have made, Alt+Click where you want to start\n                testing. Share your game URL to share your starting point.\n              </p>\n            </Pane>\n          )}\n\n          {Panes.myWorlds.show && (\n            <Pane {...Panes.myWorlds.paneProps}>\n              <MyWorlds\n                userIndex={userIndex}\n                tileTypes={tileTypes}\n                close={() => Panes.myWorlds.setShow(false)}\n              />\n            </Pane>\n          )}\n\n          {Panes.stats.show && (\n            <Pane {...Panes.stats.paneProps}>\n              <Stats\n                world={world}\n                tileTypes={tileTypes}\n                userIndex={userIndex}\n              />\n            </Pane>\n          )}\n\n          {tileLogicCoords && (\n            <Pane\n              label=\"Tile Logic\"\n              className=\"tileLogicContainer\"\n              hide={() => setTileLogicCoords()}\n            >\n              <TileLogic\n                tile={world[`${tileLogicCoords.x}_${tileLogicCoords.y}`]}\n                {...{worldId, onError}}\n              />\n            </Pane>\n          )}\n\n          {tileTypes && (\n            <div className=\"toolContainer\">\n              <Toolbar\n                {...{\n                  tileTypes,\n                  selectedTileTypeId,\n                  setSelectedTileTypeId,\n                  showTileTypeEditor: Panes.tileTypeEditor.show,\n                  setShowTileTypeEditor: Panes.tileTypeEditor.setShow,\n                }}\n              />\n            </div>\n          )}\n\n          {worldId && tileTypes && (\n            <div className=\"worldEditorContainer\">\n              <WorldEditor\n                {...{\n                  world,\n                  selectedTileTypeId,\n                  tileTypes,\n                  onError,\n                  worldId,\n                  xCoord,\n                  yCoord,\n                  scale,\n                  user,\n                  cursors,\n                  userIndex,\n                  tileLogicCoords,\n                  setTileLogicCoords,\n                }}\n              />\n            </div>\n          )}\n        </div>\n      ) : (\n        <Login onError={onError} />\n      )}\n    </>\n  );\n};\n","import {useStatePersist} from '../hooks/useStatePersist';\n\nexport const makeButtons = (config) =>\n  Object.fromEntries(\n    config.map(({key, buttonLabel, paneLabel, icon, hideButton}) => {\n      const [show, setShow] = useStatePersist('show' + buttonLabel, false);\n\n      const button = !hideButton && (\n        <a\n          key={key}\n          className={show ? 'active' : ''}\n          onClick={() => setShow((s) => !s)}\n        >\n          <i className={`fa-solid fa-${icon}`} /> {buttonLabel}\n        </a>\n      );\n\n      const paneProps = {\n        label: paneLabel,\n        className: key + 'Container',\n        hide: () => setShow(false),\n      };\n\n      return [key, {button, show, setShow, paneProps}];\n    })\n  );\n","import {useState} from 'react';\nimport {dissoc, guid} from '../utils';\n\nexport const useErrors = () => {\n  const [errors, setErrors] = useState({});\n  const onError = (msg) => {\n    setErrors((e) => ({...e, [guid()]: msg}));\n  };\n  const clearError = (key) => setErrors((e) => dissoc(key, e));\n  return [errors, onError, clearError];\n};\n","import {useEffect, useState} from 'react';\nimport {listenUser} from '../firebase';\n\nexport const useUser = () => {\n  const [user, setUser] = useState();\n  useEffect(() => listenUser(setUser), []);\n  return user;\n};\n","import {useEffect, useState} from 'react';\nimport {listen} from '../firebase';\n\nexport const useTileTypes = (onError) => {\n  const [tileTypes, setTileTypes] = useState();\n  useEffect(() => listen('tileTypes', setTileTypes, onError), []);\n  return tileTypes;\n};\n","import {useEffect, useState} from 'react';\nimport {listen} from '../firebase';\n\nexport const useWorld = (onError, worldId) => {\n  const [world, setWorld] = useState({});\n  useEffect(() => {\n    if (worldId) {\n      return listen(\n        (worldId ? `worlds/${worldId}/` : '') + 'world',\n        setWorld,\n        onError\n      );\n    }\n  }, [worldId]);\n  return world;\n};\n","import React from 'react';\nimport {createRoot} from 'react-dom/client';\nimport {App} from './Components/App';\n\ndocument.title = 'Mortal Wombat Editor';\n\ncreateRoot(document.querySelector('#root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","import {initializeApp} from 'firebase/app';\nimport {\n  ref,\n  getDatabase,\n  update as _update,\n  onValue,\n  off,\n  get,\n  child,\n} from 'firebase/database';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\n\ninitializeApp({\n  apiKey: 'AIzaSyBEserPzSUos4MT3XRO8NKAO2oVk1-LS-I',\n  authDomain: 'mortal-wombat-8c76a.firebaseapp.com',\n  projectId: 'mortal-wombat-8c76a',\n  storageBucket: 'mortal-wombat-8c76a.appspot.com',\n  messagingSenderId: '929181149015',\n  appId: '1:929181149015:web:33a7f450bcdbb06ae64012',\n  measurementId: 'G-JL6HCMYYBS',\n});\n\n/*\nData:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/database/mortal-wombat-8c76a-default-rtdb/data\nData Docs: https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=0\nList Docs: https://firebase.google.com/docs/database/web/lists-of-data?hl=en&authuser=0\n\nUsers:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/authentication/users\nUser Docs: https://firebase.google.com/docs/auth/web/manage-users\n*/\n\nconst db = getDatabase();\nconst auth = getAuth();\nconst dbRef = ref(db);\n\nexport const defaultWorldId = 'l5ybd0mu:2x3xfrsom4h';\n\n// {path1: val1, path2: val2}\nexport const update = (updates, onError) => {\n  try {\n    // console.log('updates', updates);\n    return _update(dbRef, updates);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\nif (location.host === 'localhost:3000') {\n  window._update = async (x) => await _update(dbRef, x);\n}\n\nexport const loadData = async (things) =>\n  Object.fromEntries(\n    await Promise.all(\n      things.map(async (t) => [t, (await get(child(dbRef, t))).val()])\n    )\n  );\n\nexport const listen = (pathStr, onChange, onError) => {\n  try {\n    const r = ref(db, pathStr);\n    onValue(r, (snapshot) => onChange(snapshot.val() || {}));\n    return () => off(r);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\n// export const createUser = async (email, pwd) => {\n//   try {\n//     const result = await createUserWithEmailAndPassword(auth, email, pwd);\n//     return result.user;\n//   } catch (e) {\n//     console.error(e);\n//     return e.message;\n//   }\n// };\n\nexport const logIn = (email, pwd) =>\n  signInWithEmailAndPassword(auth, email, pwd);\n\nexport const listenUser = (onChange) => onAuthStateChanged(auth, onChange);\n\nexport const logOut = () => signOut(auth);\n","// export const assocPath = ([first, ...rest], val, obj) => {\n//   const copy = Array.isArray(obj) ? [...obj] : {...obj};\n//   copy[first] = rest.length ? assocPath(rest, val, copy[first]) : val;\n//   return copy;\n// };\n\nexport const dissoc = (key, obj) => {\n  const copy = {...obj};\n  delete copy[key];\n  return copy;\n};\n\nexport const guid = () =>\n  Date.now().toString(36) + ':' + Math.random().toString(36).slice(2);\n\nexport const isGuid = (str) => /^[0-9a-z]{8,}:[0-9a-z]+$/.test(str);\n\nexport const groupBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) {\n    const key = func(el);\n    (res[key] = res[key] || []).push(el);\n  }\n  return res;\n};\n\nexport const indexBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) res[func(el)] = el;\n  return res;\n};\n\nexport const objToArr = (obj = {}) =>\n  Object.entries(obj).map(([key, el]) => ({key, ...el}));\n\nexport const debounce = (func, delay) => {\n  let timeout;\n  const f = (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\nexport const throttle = (func, delay) => {\n  let timeout;\n  let running = false;\n  let runAgainArgs;\n  const f = (...args) => {\n    if (running) {\n      runAgainArgs = args;\n      return;\n    }\n    running = true;\n    timeout = setTimeout(() => {\n      func(...args);\n      running = false;\n      if (runAgainArgs) {\n        f(...runAgainArgs);\n      }\n      runAgainArgs = undefined;\n    }, delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\n// const memoize = (func) => {\n//   const cache = {};\n//   return (...args) => {\n//     const key = JSON.stringify(args);\n//     if (cache[key] === undefined) cache[key] = func(...args);\n//     return cache[key];\n//   };\n// };\n","export const getBackground = (type) =>\n  type?.image ? `no-repeat center/contain url(${type.image})` : type?.color;\n"],"names":["useUserIndex","user","onError","useState","userIndex","setUserIndex","useEffect","listen","users","indexBy","u","email","Object","values","indexUsers","mapping","KeyS","KeyA","KeyW","KeyD","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","setHash","debounce","args","location","hash","join","sessionTimeOut","sessionId","guid","getLatestTimestamp","cursors","latestTimestamp","key","Math","max","tstamp","useCursors","worldId","setCursors","random","culledCursors","update","cullCursors","setCursor","throttle","mouseX","mouseY","xCoord","yCoord","scale","left","innerWidth","top","innerHeight","width","height","serverTimestamp","Pane","className","hide","label","children","onClick","useStatePersist","initial","undefined","localStorage","str","defaultVal","JSON","parse","e","console","error","parseJSON","val","setVal","stringify","ErrorBanner","errors","clearError","keys","length","entries","map","err","Login","setEmail","password","setPassword","style","margin","onSubmit","preventDefault","logIn","message","type","placeholder","value","onChange","target","Toolbar","tileTypes","selectedTileTypeId","setSelectedTileTypeId","showTileTypeEditor","setShowTileTypeEditor","sort","a","b","order","id","background","getBackground","title","onDoubleClick","startsWith","saveTile","tile","getAuth","currentUser","x","y","tileType","times","amount","timeAgo","ms","isNaN","v","floor","CSS_SIZE","Cursors","opacity","Fragment","transform","fontSize","name","getCoords","clientX","clientY","getTitle","Date","now","Tiles","world","tileTypeIndex","setTileLogicCoords","TilesMemo","memo","WorldEditor","tileLogicCoords","ghostRef","useRef","useMemo","t","objToArr","altKey","window","open","href","replace","btoa","currentType","shiftKey","onMouseMove","useCallback","current","buttons","cx","cy","transformOrigin","ref","Nav","setScale","zoomAmt","float","s","round","logOut","packageJSON","Editor","lazy","inputs","text","number","checkbox","checked","select","options","code","Suspense","fallback","theme","defaultLanguage","FormThing","fields","data","prop","info","show","Field","parseInt","moveDelay","edible","movable","diggable","hp","TileTypeEditor","selectedTileType","find","el","color","GameConfig","config","setConfig","useConfig","HereNow","filter","c","gotoWorld","createNewWorld","worldGuid","worldName","prompt","lastEdited","lastEditedBy","WorldCanvas","canvasRef","canvas","document","createElement","minX","Infinity","minY","maxX","maxY","min","ctx","getContext","fillStyle","fillRect","worldToCanvas","WorldItem","item","close","loadWorlds","setWorlds","loadData","worlds","MyWorlds","textAlign","capitalize","toUpperCase","slice","countBy","arr","func","reduce","res","SubTable","heading","getLabel","count","stats","tiles","Stats","TileLogic","paneConfigs","buttonLabel","paneLabel","icon","hideButton","App","setErrors","msg","dissoc","useErrors","defaultWorldId","setWorldId","initialX","initialY","setXCoord","setYCoord","onkeyDown","body","dir","addEventListener","removeEventListener","useCoords","setUser","listenUser","useUser","setTileTypes","useTileTypes","setWorld","useWorld","Panes","fromEntries","setShow","paneProps","button","cancel","onHashChange","split","sc","isGuid","every","p","log","Number","useLocationHash","tileTypeEditor","some","gameConfig","hereNow","instructions","myWorlds","createRoot","querySelector","render","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","auth","dbRef","updates","_update","host","things","Promise","all","get","child","pathStr","r","onValue","snapshot","off","pwd","signInWithEmailAndPassword","onAuthStateChanged","signOut","obj","copy","toString","test","delay","timeout","f","clearTimeout","setTimeout","runAgainArgs","running","image"],"sourceRoot":""}