{"version":3,"file":"static/js/927.e127e59b.chunk.js","mappings":"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","sources":["firebase.js","game/main.js","game/elements.js","game/controls.js","game/Game.js","game/load.js","utils.js","utils/getBackground.js"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {\n  ref,\n  getDatabase,\n  update as _update,\n  onValue,\n  off,\n  get,\n  child,\n} from 'firebase/database';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from 'firebase/auth';\n\ninitializeApp({\n  apiKey: 'AIzaSyBEserPzSUos4MT3XRO8NKAO2oVk1-LS-I',\n  authDomain: 'mortal-wombat-8c76a.firebaseapp.com',\n  projectId: 'mortal-wombat-8c76a',\n  storageBucket: 'mortal-wombat-8c76a.appspot.com',\n  messagingSenderId: '929181149015',\n  appId: '1:929181149015:web:33a7f450bcdbb06ae64012',\n  measurementId: 'G-JL6HCMYYBS',\n});\n\n/*\nData:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/database/mortal-wombat-8c76a-default-rtdb/data\nData Docs: https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=0\nList Docs: https://firebase.google.com/docs/database/web/lists-of-data?hl=en&authuser=0\n\nUsers:\nhttps://console.firebase.google.com/project/mortal-wombat-8c76a/authentication/users\nUser Docs: https://firebase.google.com/docs/auth/web/manage-users\n*/\n\nconst db = getDatabase();\nconst auth = getAuth();\nconst dbRef = ref(db);\n\nexport const defaultWorldId = 'l31p2np9:dy828s8l3wv';\n\n// {path1: val1, path2: val2}\nexport const update = (updates, onError) => {\n  try {\n    // console.log('updates', updates);\n    return _update(dbRef, updates);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\nif (location.host === 'localhost:3000') {\n  window._update = async (x) => await _update(dbRef, x);\n}\n\nexport const loadData = async (things) =>\n  Object.fromEntries(\n    await Promise.all(\n      things.map(async (t) => [t, (await get(child(dbRef, t))).val()])\n    )\n  );\n\nexport const listen = (pathStr, onChange, onError) => {\n  try {\n    const r = ref(db, pathStr);\n    onValue(r, (snapshot) => onChange(snapshot.val() || {}));\n    return () => off(r);\n  } catch (e) {\n    console.error(e);\n    onError(e.message);\n  }\n};\n\n// export const createUser = async (email, pwd) => {\n//   try {\n//     const result = await createUserWithEmailAndPassword(auth, email, pwd);\n//     return result.user;\n//   } catch (e) {\n//     console.error(e);\n//     return e.message;\n//   }\n// };\n\nexport const logIn = (email, pwd) =>\n  signInWithEmailAndPassword(auth, email, pwd);\n\nexport const listenUser = (onChange) => onAuthStateChanged(auth, onChange);\n\nexport const logOut = () => signOut(auth);\n","import {Controls} from './controls';\nimport './game.css';\nimport {load} from './load';\n\nlet game,\n  controls,\n  isPaused = false;\n\nconst rootElement = document.querySelector('#root');\n\nconst loop = () => {\n  if (document.hasFocus() && game) {\n    if (isPaused) {\n      isPaused = false;\n      document.body.style.opacity = 1;\n    }\n    game.iterate(controls.getPressing());\n  } else if (!isPaused) {\n    isPaused = true;\n    document.body.style.opacity = 0.5;\n  }\n  requestAnimationFrame(loop);\n};\n\nconst init = async () => {\n  game = await load(rootElement);\n  controls = new Controls(\n    {\n      onPress: (id) => {\n        if (id === 'poop') game.makePoop();\n      },\n    },\n    rootElement\n  );\n  window.addEventListener('resize', () => {\n    game.updateViewport();\n  });\n  loop();\n};\n\ninit();\n","import {getBackground} from '../utils/getBackground';\nimport packageJSON from '../../package.json';\n\nconst TILE_SIZE = 48;\nconst CHUNK_SIZE = 24;\n\nconst toChunkCoords = (x, y) => [\n  Math.floor(x / CHUNK_SIZE),\n  Math.floor(y / CHUNK_SIZE),\n];\n\nclass Element {\n  constructor() {\n    this.el = document.createElement('div');\n  }\n  destroy() {\n    this.el.remove();\n  }\n}\n\nclass Chunk extends Element {\n  constructor(parentElement, x, y) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.el.classList.add('chunk');\n    parentElement.append(this.el);\n  }\n  updateVisibility(x, y) {\n    const shouldShow = Math.abs(x - this.x) < 2 && Math.abs(y - this.y) < 2;\n    this.el.title = `chunk ${this.x}_${this.y} ${x} ${y}`;\n    if (shouldShow !== this.isShowing) {\n      this.isShowing = shouldShow;\n      this.el.style.display = shouldShow ? 'block' : 'none';\n    }\n  }\n}\n\nexport class WorldElement extends Element {\n  constructor(rootElement) {\n    super();\n    this.chunks = {};\n    rootElement.append(this.el);\n  }\n  update(you) {\n    const [chunkX, chunkY] = toChunkCoords(you.x, you.y);\n    if (chunkX !== you.chunkX || chunkY !== you.chunkY) {\n      you.chunkX = chunkX;\n      you.chunkY = chunkY;\n      for (const key in this.chunks) {\n        this.chunks[key].updateVisibility(chunkX, chunkY);\n      }\n    }\n\n    const cx = Math.round(innerWidth / 2 - you.x * TILE_SIZE);\n    const cy = Math.round(innerHeight / 2 - you.y * TILE_SIZE);\n    this.el.style.transform = `translate(${cx}px,${cy}px)`;\n    document.body.style.backgroundPosition = `${cx >> 2}px ${cy >> 2}px`;\n  }\n  getChunk(x, y) {\n    const [chunkX, chunkY] = toChunkCoords(x, y);\n    const key = `${chunkX}_${chunkY}`;\n    return (this.chunks[key] =\n      this.chunks[key] || new Chunk(this.el, chunkX, chunkY));\n  }\n}\n\nexport class TileElement extends Element {\n  constructor(tile, worldElement) {\n    super();\n    this.worldElement = worldElement;\n    this.el.classList.add('tile');\n    this.updateType(tile.type);\n    this.update(tile);\n  }\n  updateType(type) {\n    this.el.style.background = getBackground(type);\n  }\n  update({x, y, dirX = 0, dirY = 0}) {\n    const angle = Math.atan2(dirY, dirX) + Math.PI;\n    const flip = angle >= 0.5 * Math.PI && angle <= 1.5 * Math.PI;\n    this.el.style.transform = `\n    translate(${x * TILE_SIZE}px,${y * TILE_SIZE}px)\n    rotate(${angle}rad)\n    ${flip ? 'scaleY(-1)' : ''}`;\n\n    const [chunkX, chunkY] = toChunkCoords(x, y);\n    if (chunkX !== this.chunkX || chunkY !== this.chunkY) {\n      this.chunkX = chunkX;\n      this.chunkY = chunkY;\n      this.worldElement.getChunk(x, y).el.append(this.el);\n    }\n  }\n}\n\nclass BarElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('bar');\n    this.valueElement = document.createElement('div');\n    this.el.append(this.valueElement);\n    parentElement.append(this.el);\n  }\n  update(value, maxValue, color) {\n    const el = this.valueElement;\n    el.style.background = color;\n    el.style.width = (100 * value) / maxValue + '%';\n    el.innerText = Math.ceil(value);\n  }\n}\n\nclass CollectibleCounter extends Element {\n  constructor(parentElement, type) {\n    super();\n    this.el.classList.add('collectibleCounter');\n    this.el.innerHTML = `<span></span> <div style=\"background: ${getBackground(\n      type\n    )}\"></div>`;\n    this.valueEl = this.el.querySelector('span');\n    parentElement.append(this.el);\n  }\n  update(value) {\n    this.valueEl.innerText = value;\n  }\n}\n\nexport class Hud extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('hud');\n\n    this.healthBar = new BarElement(this.el);\n    this.poopBar = new BarElement(this.el);\n    parentElement.append(this.el);\n\n    this.counters = {};\n  }\n  updateCounter(type, value) {\n    if (!this.counters[type.id]) {\n      this.counters[type.id] = new CollectibleCounter(this.el, type);\n    }\n    this.counters[type.id].update(value);\n  }\n}\n\nexport class VersionElement extends Element {\n  constructor(parentElement) {\n    super();\n    this.el.classList.add('version');\n    this.el.innerText = 'v' + packageJSON.version;\n    parentElement.append(this.el);\n  }\n}\n\nexport class ControlButton extends Element {\n  constructor(parentElement, id, pressing) {\n    super();\n    this.el.classList.add('control');\n    this.el.setAttribute('id', id);\n    this.el.addEventListener('touchstart', () => (pressing[id] = true));\n    this.el.addEventListener('touchend', () => (pressing[id] = false));\n    parentElement.append(this.el);\n  }\n}\n\nexport class ControlCircle extends Element {\n  constructor(parentElement, pressing) {\n    super();\n    this.el.classList.add('controlCircle');\n\n    const move = ({touches, offsetX, offsetY}) => {\n      const size = this.el.clientWidth;\n      const x = (touches ? touches[0].offsetX : offsetX) / size - 0.5;\n      const y = (touches ? touches[0].offsetY : offsetY) / size - 0.5;\n      pressing.left = x < 0;\n      pressing.right = x > 0;\n      pressing.up = y < 0;\n      pressing.down = y > 0;\n      this.el.innerText = JSON.stringify(touches);\n    };\n    const up = () => {\n      pressing.left = false;\n      pressing.up = false;\n      pressing.down = false;\n      pressing.right = false;\n      this.el.removeEventListener('touchmove', move);\n      this.el.removeEventListener('mousemove', move);\n      this.el.removeEventListener('touchend', up);\n      this.el.removeEventListener('mouseup', up);\n    };\n    const down = (e) => {\n      move(e);\n      this.el.addEventListener('touchmove', move);\n      this.el.addEventListener('mousemove', move);\n      this.el.addEventListener('touchend', up);\n      this.el.addEventListener('mouseup', up);\n    };\n\n    this.el.addEventListener('touchstart', down);\n    this.el.addEventListener('mousedown', down);\n    parentElement.append(this.el);\n  }\n}\n","import {indexBy} from '../utils';\nimport {ControlCircle} from './elements';\n\nconst showControls = false;\n\nconst controls = [\n  {id: 'left', key: 'A', code: 'KeyA'},\n  {id: 'right', key: 'D', code: 'KeyD'},\n  {id: 'up', key: 'W', code: 'KeyW'},\n  {id: 'down', key: 'S', code: 'KeyS'},\n  {id: 'poop', key: 'P', code: 'KeyP'},\n  {id: 'attack', key: 'Space', code: 'Space'},\n  {id: 'reload', key: 'R', code: 'KeyR'},\n];\n\nconst controlIndex = indexBy((c) => c.code, controls);\n\nexport class Controls {\n  constructor({onPress}, rootElement) {\n    this.pressing = {};\n    const keydown = (e) => {\n      if (controlIndex[e.code]) {\n        this.pressing[controlIndex[e.code].id] = e.type === 'keydown';\n      }\n    };\n    window.addEventListener('keydown', keydown);\n    window.addEventListener('keyup', keydown);\n    window.addEventListener('keypress', (e) => {\n      if (controlIndex[e.code]) {\n        onPress(controlIndex[e.code].id);\n      }\n    });\n\n    if (showControls) {\n      // for (const {id} of controls) {\n      //   new ControlButton(rootElement, id, this.pressing);\n      // }\n\n      new ControlCircle(rootElement, this.pressing, 400);\n    }\n  }\n  getPressing() {\n    return this.pressing;\n  }\n}\n","import {Hud, TileElement, VersionElement, WorldElement} from './elements';\n\nconst MAX_RENDER_DIST = 32; // don't move things more than this many tiles away\nconst MOVEMENT_THRESHOLD = 0.1; // don't move you or the viewport if you move less than this much of a tile\n\nconst pairs = [\n  [Math.floor, Math.floor],\n  [Math.ceil, Math.floor],\n  [Math.floor, Math.ceil],\n  [Math.ceil, Math.ceil],\n];\n\nconst dirs = [\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n  [0, -1],\n];\n\nexport class Game {\n  constructor(youPos, world, config, typeIndex, rootElement) {\n    this.rootElement = rootElement;\n    this.worldElement = new WorldElement(rootElement);\n    this.hud = new Hud(rootElement);\n    new VersionElement(rootElement);\n\n    this.world = {};\n    for (const key in world) this.addTile(world[key]);\n\n    this.typeIndex = typeIndex;\n    this.you = {\n      x: 0,\n      y: 0,\n      xs: 0,\n      ys: 0,\n      dirX: 1,\n      dirY: 0,\n      ...youPos,\n    };\n    this.you.el = new TileElement(\n      {x: this.you.x, y: this.you.y, type: typeIndex.w},\n      this.worldElement\n    );\n    for (const key of ['x', 'y', 'dirX', 'dirY']) {\n      this.you['p' + key] = this.you[key];\n    }\n    this.collectibles = {};\n    this.frame = 0;\n\n    // these can all be overridden by config\n    this.digSpeed = 0.07;\n    this.eatSpeed = 0.05;\n    this.gravity = 0.005;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.poop = 50;\n    this.maxPoop = 10;\n    this.jumpPower = 0.11;\n    this.moveSpeed = 0.02;\n    this.moveDeceleration = 0.3;\n    this.fallDamageMin = 0.2;\n    this.fallDamageMult = 100;\n    this.swimPower = 0.005;\n    this.waterDrag = 0.1;\n    this.airDrag = 0.001;\n\n    for (const x in config) {\n      if (!isNaN(config[x])) this[x] = Number(config[x]); // because editing them turns them into strings, yayyyy\n    }\n\n    this.setHealth(this.health);\n    this.setPoop(this.poop);\n    this.you.el.update(this.you);\n    this.worldElement.update(this.you);\n  }\n  iterate(pressing) {\n    this.moveWombat(pressing);\n    this.iterateTiles();\n    this.frame++;\n  }\n  addTile(tile) {\n    this.world[`${tile.x}_${tile.y}`] = {\n      ...tile,\n      el: new TileElement(tile, this.worldElement),\n    };\n  }\n  deleteTile(tile) {\n    tile.el.destroy();\n    delete this.world[`${tile.x}_${tile.y}`];\n  }\n  changeTileType(tile, type) {\n    tile.type = type;\n    delete tile.hp;\n    tile.el.updateType(type);\n  }\n  moveWombat(pressing) {\n    const {you, world} = this;\n\n    if (this.health <= 0) {\n      if (pressing.reload) location.reload();\n      return;\n    }\n\n    if (pressing.left || pressing.right || pressing.up || pressing.down) {\n      you.dirX = 0;\n      you.dirY = 0;\n    }\n    if (pressing.left) {\n      you.xs -= you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX--;\n    }\n    if (pressing.right) {\n      you.xs += you.swimBlock ? this.swimPower : this.moveSpeed;\n      you.dirX++;\n    }\n    if (pressing.up) {\n      if (you.swimBlock) you.ys -= this.swimPower;\n      else if (!you.jumping && !you.ys) {\n        you.ys -= this.jumpPower;\n        you.jumping = true;\n      }\n      you.dirY--;\n    }\n    if (pressing.down) {\n      if (you.swimBlock) you.ys += this.swimPower;\n      you.dirY++;\n    }\n\n    you.x += you.xs;\n    you.xs *= 1 - (you.swimBlock ? this.waterDrag : this.moveDeceleration);\n\n    you.y += you.ys;\n    you.ys *= 1 - (you.swimBlock ? this.waterDrag : this.airDrag);\n    you.ys += this.gravity * (1 - (you.swimBlock?.type.density || 0));\n\n    const seen = {};\n    for (const [fx, fy] of pairs) {\n      const key = fx(you.x) + '_' + fy(you.y);\n      if (seen[key] || !world[key]) continue;\n      seen[key] = true;\n      this.resolveCollision(world[key]);\n    }\n\n    let damage = 0;\n    delete you.swimBlock;\n    for (const [fx, fy] of pairs) {\n      const block = world[fx(you.x) + '_' + fy(you.y)];\n      if (!block) continue;\n      if (block.type.collectible) {\n        this.collect(block.type);\n        return this.deleteTile(block);\n      }\n      if (block.type.healing < 0) {\n        damage = Math.max(damage, -block.type.healing);\n      }\n      if (block.type.moveStyle === 'liquid') you.swimBlock = block;\n    }\n    if (damage) this.setHealth(this.health - damage);\n\n    if (\n      Math.abs(you.x - you.px) > MOVEMENT_THRESHOLD ||\n      Math.abs(you.y - you.py) > MOVEMENT_THRESHOLD ||\n      you.dirX !== you.pdirX ||\n      you.dirY !== you.pdirY\n    ) {\n      you.el.update(you);\n      this.worldElement.update(you);\n\n      you.px = you.x;\n      you.py = you.y;\n      you.pdirX = you.dirX;\n      you.pdirY = you.dirY;\n    }\n\n    if (pressing.attack) {\n      const angle = Math.atan2(you.dirY, you.dirX);\n      const x = Math.round(you.x + Math.cos(angle));\n      const y = Math.round(you.y + Math.sin(angle));\n      const b = this.getTile(x, y);\n      if (b?.type.edible) {\n        this.damage(b, this.eatSpeed);\n        this.setHealth(this.health + b.type.healing * this.eatSpeed);\n        this.setPoop(this.poop + b.type.makePoop * this.eatSpeed);\n      }\n      if (b?.type.diggable) this.damage(b, this.digSpeed);\n    }\n  }\n  // returns true if block is destroyed\n  damage(block, amount) {\n    if (!block?.type.hp) return;\n    if (block.hp === undefined) block.hp = block.type.hp;\n\n    block.hp -= amount;\n\n    if (block.hp <= 0) {\n      if (block.type.dropsLoot) {\n        this.changeTileType(block, this.typeIndex[block.type.dropsLoot]);\n      } else this.deleteTile(block);\n\n      return true;\n    }\n  }\n  resolveCollision(block) {\n    const {you} = this;\n    if (block.type.collectible || block.type.moveStyle === 'liquid') return;\n\n    if (block.type.healing < 0) {\n      this.setHealth(this.health + Number(block.type.healing));\n      you.y -= 0.1;\n    }\n\n    if (Math.abs(you.x - block.x) > Math.abs(you.y - block.y)) {\n      const dx = block.x < you.x ? -1 : 1;\n      if (\n        !you.jumping &&\n        you.ys === this.gravity &&\n        block.type.movable &&\n        this.isEmpty(block.x + dx, block.y)\n      ) {\n        this.moveTile(block.x, block.y, dx, 0);\n      } else {\n        you.x = block.x + (you.x < block.x ? -1 : 1);\n      }\n      you.xs = 0;\n    } else {\n      if (you.y < block.y) you.jumping = false;\n      you.y = block.y + (you.y < block.y ? -1 : 1);\n\n      // fall damage\n      if (you.ys > this.fallDamageMin) {\n        const damage = (you.ys - this.fallDamageMin) * this.fallDamageMult;\n        this.setHealth(this.health - damage);\n\n        const blockDamage = Math.min(\n          damage,\n          block.hp || Infinity,\n          block.type.hp || Infinity\n        );\n        if (this.damage(block, damage)) {\n          you.ys /= 1 + blockDamage;\n          return;\n        }\n      }\n      you.ys = 0;\n    }\n  }\n  getTile(x, y) {\n    return this.world[`${x}_${y}`];\n  }\n  isEmpty(x, y) {\n    return !this.getTile(x, y);\n  }\n  badGuyCanWalkOn(x, y) {\n    const t = this.getTile(x, y);\n    return t && t.type.moveStyle !== 'liquid';\n  }\n  moveTile(x, y, dx, dy) {\n    const key = `${x}_${y}`;\n    const b = this.world[key];\n    delete this.world[key];\n    b.x += dx;\n    b.y += dy;\n    this.world[`${b.x}_${b.y}`] = b;\n    b.el.update(b);\n  }\n  iterateTiles() {\n    for (const key in this.world) {\n      const b = this.world[key];\n      if (\n        !b.type.moveDelay ||\n        this.frame % b.type.moveDelay > 0 ||\n        Math.abs(this.you.x - b.x) > MAX_RENDER_DIST ||\n        Math.abs(this.you.y - b.y) > MAX_RENDER_DIST\n      )\n        continue;\n\n      if (this.isEmpty(b.x, b.y + 1)) {\n        this.moveTile(b.x, b.y, 0, 1);\n      } else if (b.type.moveStyle === 'liquid') {\n        const left = this.isEmpty(b.x - 1, b.y);\n        const right = this.isEmpty(b.x + 1, b.y);\n        if (left && right) {\n          this.moveTile(b.x, b.y, Math.random() < 0.5 ? 1 : -1, 0);\n        } else if (left) {\n          this.moveTile(b.x, b.y, -1, 0);\n        } else if (right) {\n          this.moveTile(b.x, b.y, 1, 0);\n        }\n      } else if (b.type.moveStyle === 'patrol') {\n        if (!b.dirX) b.dirX = 1;\n        if (\n          this.isEmpty(b.x + b.dirX, b.y) &&\n          this.badGuyCanWalkOn(b.x + b.dirX, b.y + 1)\n        ) {\n          this.moveTile(b.x, b.y, b.dirX, 0);\n        } else {\n          b.dirX *= -1;\n        }\n      }\n\n      // special rules for magma\n      if (b.type.id === 'm') {\n        let touchingWater = false;\n        for (const [dx, dy] of dirs) {\n          const block = this.getTile(b.x + dx, b.y + dy);\n          if (block && (block.type.hp || block.type.id === 'a')) {\n            if (block.type.id === 'a') touchingWater = true;\n            this.deleteTile(block);\n          }\n        }\n        if (touchingWater) {\n          // if lava touches water, it turns to stone\n          this.changeTileType(b, this.typeIndex.s);\n        }\n      }\n    }\n  }\n  setHealth(health) {\n    this.health = Math.max(0, Math.min(this.maxHealth, health));\n    this.hud.healthBar.update(\n      this.health,\n      this.maxHealth,\n      this.health > 30 ? 'green' : 'red'\n    );\n    if (health <= 0) {\n      this.rootElement.innerHTML +=\n        '<div class=\"youDead\"><h1>you dead</h1><h2>press R to try again</h2></div>';\n    }\n  }\n  setPoop(poop) {\n    this.poop = Math.max(0, Math.min(this.maxPoop, poop));\n    this.hud.poopBar.update(this.poop, this.maxPoop, 'saddleBrown');\n  }\n  collect(type) {\n    this.collectibles[type.id] = (this.collectibles[type.id] || 0) + 1;\n    this.hud.updateCounter(type, this.collectibles[type.id]);\n  }\n  makePoop() {\n    if (this.poop < 1) return;\n    const {you, world, typeIndex} = this;\n    const angle = Math.atan2(you.dirY, you.dirX) + Math.PI;\n    const x = Math.round(you.x + Math.cos(angle));\n    const y = Math.round(you.y + Math.sin(angle));\n    if ((x !== you.x || y !== you.y) && !world[`${x}_${y}`]) {\n      this.addTile({x, y, type: typeIndex.p});\n      this.setPoop(this.poop - 1);\n    }\n  }\n  updateViewport() {\n    this.worldElement.update(this.you);\n  }\n}\n","import {defaultWorldId, loadData} from '../firebase';\nimport {isGuid} from '../utils';\nimport {Game} from './Game';\n\nexport const load = async (rootElement) => {\n  let hashConfig;\n  if (location.hash.length > 1) {\n    try {\n      hashConfig = JSON.parse(atob(location.hash.slice(1)));\n    } catch (e) {\n      console.log('bad hash', e);\n    }\n  }\n\n  const worldKey = `worlds/${\n    isGuid(hashConfig?.worldId) ? hashConfig.worldId : defaultWorldId\n  }/world`;\n\n  const data = await loadData(['tileTypes', worldKey, 'gameConfig']);\n\n  const {tileTypes, gameConfig} = data;\n  const world = data[worldKey];\n\n  const typeIndex = {};\n  let you;\n  for (const type of Object.values(tileTypes)) {\n    typeIndex[type.id] = type;\n  }\n  for (const key in world) {\n    const {x, y, tileType} = world[key];\n    if (tileType === 'w') {\n      you = {x, y};\n      delete world[key];\n    } else if (typeIndex[tileType]) {\n      world[key] = {x, y, type: typeIndex[tileType]};\n    } else {\n      delete world[key];\n    }\n  }\n\n  if (hashConfig?.x !== undefined && hashConfig?.y !== undefined) {\n    you.x = hashConfig.x;\n    you.y = hashConfig.y;\n  }\n\n  return new Game(you, world, gameConfig, typeIndex, rootElement);\n};\n","// export const assocPath = ([first, ...rest], val, obj) => {\n//   const copy = Array.isArray(obj) ? [...obj] : {...obj};\n//   copy[first] = rest.length ? assocPath(rest, val, copy[first]) : val;\n//   return copy;\n// };\n\nexport const dissoc = (key, obj) => {\n  const copy = {...obj};\n  delete copy[key];\n  return copy;\n};\n\nexport const guid = () =>\n  Date.now().toString(36) + ':' + Math.random().toString(36).slice(2);\n\nexport const isGuid = (str) => /^[0-9a-z]{8,}:[0-9a-z]+$/.test(str);\n\nexport const groupBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) {\n    const key = func(el);\n    (res[key] = res[key] || []).push(el);\n  }\n  return res;\n};\n\nexport const indexBy = (func, arr) => {\n  const res = {};\n  for (const el of arr) res[func(el)] = el;\n  return res;\n};\n\nexport const objToArr = (obj = {}) =>\n  Object.entries(obj).map(([key, el]) => ({key, ...el}));\n\nexport const debounce = (func, delay) => {\n  let timeout;\n  const f = (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\nexport const throttle = (func, delay) => {\n  let timeout;\n  let running = false;\n  let runAgainArgs;\n  const f = (...args) => {\n    if (running) {\n      runAgainArgs = args;\n      return;\n    }\n    running = true;\n    timeout = setTimeout(() => {\n      func(...args);\n      running = false;\n      if (runAgainArgs) {\n        f(...runAgainArgs);\n      }\n      runAgainArgs = undefined;\n    }, delay);\n  };\n  f.cancel = () => clearTimeout(timeout);\n  return f;\n};\n\n// const memoize = (func) => {\n//   const cache = {};\n//   return (...args) => {\n//     const key = JSON.stringify(args);\n//     if (cache[key] === undefined) cache[key] = func(...args);\n//     return cache[key];\n//   };\n// };\n","export const getBackground = (type) =>\n  type?.image ? `no-repeat center/contain url(${type.image})` : type?.color;\n"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","auth","getAuth","dbRef","ref","defaultWorldId","update","updates","onError","_update","e","console","error","message","location","host","window","x","loadData","things","Object","Promise","all","map","t","get","child","val","fromEntries","listen","pathStr","onChange","r","onValue","snapshot","off","logIn","email","pwd","signInWithEmailAndPassword","listenUser","onAuthStateChanged","logOut","signOut","game","controls","toChunkCoords","y","Math","floor","Element","this","el","document","createElement","remove","Chunk","parentElement","classList","add","append","shouldShow","abs","title","isShowing","style","display","WorldElement","rootElement","chunks","you","chunkX","chunkY","key","updateVisibility","cx","round","innerWidth","cy","innerHeight","transform","body","backgroundPosition","TileElement","tile","worldElement","updateType","type","background","getBackground","dirX","dirY","angle","atan2","PI","flip","getChunk","BarElement","valueElement","value","maxValue","color","width","innerText","ceil","CollectibleCounter","innerHTML","valueEl","querySelector","Hud","healthBar","poopBar","counters","id","VersionElement","packageJSON","controlIndex","indexBy","c","code","Controls","onPress","pressing","keydown","addEventListener","pairs","dirs","Game","youPos","world","config","typeIndex","hud","addTile","xs","ys","w","collectibles","frame","digSpeed","eatSpeed","gravity","health","maxHealth","poop","maxPoop","jumpPower","moveSpeed","moveDeceleration","fallDamageMin","fallDamageMult","swimPower","waterDrag","airDrag","isNaN","Number","setHealth","setPoop","moveWombat","iterateTiles","destroy","hp","reload","left","right","up","down","swimBlock","jumping","density","seen","fx","fy","resolveCollision","damage","block","collectible","collect","deleteTile","healing","max","moveStyle","px","py","pdirX","pdirY","attack","cos","sin","b","getTile","edible","makePoop","diggable","amount","undefined","dropsLoot","changeTileType","dx","movable","isEmpty","moveTile","blockDamage","min","Infinity","dy","moveDelay","random","badGuyCanWalkOn","touchingWater","s","updateCounter","p","load","hash","length","hashConfig","JSON","parse","atob","slice","log","worldKey","isGuid","worldId","data","tileTypes","gameConfig","values","tileType","isPaused","loop","hasFocus","opacity","iterate","getPressing","requestAnimationFrame","init","updateViewport","dissoc","obj","copy","guid","Date","now","toString","str","test","func","arr","res","objToArr","entries","debounce","delay","timeout","f","args","clearTimeout","setTimeout","cancel","throttle","runAgainArgs","running","image"],"sourceRoot":""}